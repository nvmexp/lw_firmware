####################################################################
#
# Config file for ACR profiles
#
####################################################################

no warnings qw(bareword);
no strict qw(subs);

# Profile definitions.
# Each profile is made up of one or more categories which are exelwted
# in the order the category *definition* appears below.

#
# Define profiles for each supported chip-family.  Each profile specifies the
# features that are supported in that family which in turn dictacts the source
# files which must be built and included in the image.
#
DEFINE_PROFILE "acr_pmu-t210_load" ,        qw(default acr_pmu-t210_load  wrap);
DEFINE_PROFILE "acr_pmu-gm20b_load" ,       qw(default acr_pmu-gm20b_load  wrap);
DEFINE_PROFILE "acr_pmu-gp10b_load" ,       qw(default acr_pmu-gp10b_load  wrap);
DEFINE_PROFILE "acr_pmu-t186_load" ,        qw(default acr_pmu-t186_load  wrap);
DEFINE_PROFILE "acr_pmu-t194_load" ,        qw(default acr_pmu-t194_load  wrap);
DEFINE_PROFILE "acr_pmu-t194_load_safety" , qw(default acr_pmu-t194_load_safety wrap);
DEFINE_PROFILE "acr_pmu-gv11b_load" ,       qw(default acr_pmu-gv11b_load  wrap);
DEFINE_PROFILE "acr_pmu-t234_load" ,        qw(default acr_pmu-t234_load  wrap);


# Default profile if not specified on command line with --profile.
DEFAULT_PROFILE "acr_pmu-gm20x_load";

# XXX - not used
CATEGORY "minimal";
{
    # omit features, classes, engines, apis that require unavailable gpu's
    MINIMAL_MODE      ON;
}

CATEGORY "default";
{
    # All default enabled features, engines, classes, apis
    ENABLE_FEATURES   ALL_DEFAULT_ENABLED;
    ENABLE_ENGINES    ALL_DEFAULT_ENABLED;
    ENABLE_CLASSES    ALL_DEFAULT_ENABLED;
    ENABLE_APIS       ALL_DEFAULT_ENABLED;

    # set platform, arch.   for now just always use these.
    ENABLE_FEATURES   PLATFORM_ACR;
    ENABLE_FEATURES   ARCH_FALCON;

    # Disable all GPUS preparatory to having a specific set enabled
    DISABLE_CHIPS       ( ALL );
}

CATEGORY "acr_pmu-t210_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T210);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_T21X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-t186_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T186);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_T18X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-gm20b_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GM20B);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_GM20X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-gp10b_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GP10B);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_GP10X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-t194_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T194);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_T19X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-t194_load_safety";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T194);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_T19X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-gv11b_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GV11B);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_GV11X,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "acr_pmu-t234_load";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T234);
    }
    ENABLE_FEATURES(
        ACR_LOAD,
        ACRCORE_T23XG,
    );
    DISABLE_FEATURES(
    );
}

# Look in the environment and our -D args for any special cases.
CATEGORY "wrap";
{
    1;        # must not be empty block
}

1;
