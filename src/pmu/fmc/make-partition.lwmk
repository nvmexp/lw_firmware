#
# _LWRM_COPYRIGHT_BEGIN_
#
# Copyright 2021 by LWPU Corporation.  All rights reserved.  All
# information contained herein is proprietary and confidential to LWPU
# Corporation.  Any use, reproduction, or disclosure without the written
# permission of LWPU Corporation is prohibited.
#
# _LWRM_COPYRIGHT_END_
#

# Rules to build single partition as .a archive
# Among defaults, we have 3 variables that must be passed:
# PART_DIR <- directory where partition's sources.mk is
# BUILD_DIR_PART <- directory where we build
# INSTALL_DIR_PART <- directory where we install (put .a basically)

QUIET ?= 0

# Pull profile
include $(FW_ROOT)/config/profiles.mk

# Preconfigure chip (mini chip-config)
include $(LIBLWRISCV_CONFIG_MK)

# Common ucode build settings
# Note: lwCommon sets OUTPUTDIR, but we avoid using it (at least for now)
# b.c. we have a custom dir structure.
include $(LW_SOURCE)/drivers/common/build/lwCommon.lwmk

# It relies on (given) variables and prebuilt liblwriscv
LIBCCC_CFLAGS ?=
EXTRA_CFLAGS ?=
EXTRA_ASFLAGS ?=
EXTRA_LDFLAGS ?=

include $(LWRISCVX_SDK_ROOT)/build/build_flags.mk

TARGET := $(BUILD_DIR_PART)/libpart_$(PART_DIR).a

# A partition might want to do additional build steps (chip-config etc). Add that if exists
-include partitions/$(PART_DIR)/config/makefile.mk

EXTRA_OBJECTS ?=
PARTITION_VISIBILITY ?= hidden

# Add chip cheaders to include path
# different from LW_ENGINE_MANUALS, which is set from make-profile.lwmk
INCLUDES += $(MANUAL_PATHS)

# Add pmu_sw/fmc/inc
INCLUDES += $(FW_ROOT)/inc
# Global, PMU includes in pmu_sw/inc
INCLUDES += $(FW_ROOT)/../inc
# riscvifriscv.h and other common interfaces
INCLUDES += $(LW_SOURCE)/drivers/resman/arch/lwalloc/common/inc
# classes
INCLUDES += $(LW_SOURCE)/sdk/lwpu/inc

# CCC enabled?
ifeq ($(USE_LIBCCC),true)
  INCLUDES += $(LIBCCC_INC_DIR) $(LWRISCVX_PREBUILT_INC_DIR)/common_crypto $(LWRISCVX_PREBUILT_INC_DIR)/common_crypto/include $(LWRISCVX_PREBUILT_INC_DIR)/common_crypto_private/lwpka $(LWRISCVX_PREBUILT_INC_DIR)/common_crypto_private
  LIBCCC_CFLAGS := -DUSE_LIBCCC -DUPROC_ARCH_RISCV -DCCC_USE_LIBLWRISCV -DHW_CC_ENABLED
endif

INCLUDES := $(addprefix -I,$(INCLUDES))

EXTRA_CFLAGS += $(INCLUDES)
EXTRA_ASFLAGS += $(INCLUDES)

# Actually finalize CFLAGS, ASFLAGS
include $(LWRISCVX_SDK_ROOT)/build/build_flags.mk

# Include sources
DIRS:=
OBJS:=

# manual war, until we have relwrsive directory parser
objs-y:=
subdirs-y:=
include partitions/$(PART_DIR)/sources.mk
DIRS:= partitions/$(PART_DIR)
OBJS:= $(addprefix partitions/$(PART_DIR)/,$(objs-y))

# Rule generation for files
# generate rule for directories
define add-dir =
$(info adding dir rule: $(BUILD_DIR_PART)/$(1))
$(BUILD_DIR_PART)/$(1)/.keep:
	$(MKDIR) $(BUILD_DIR_PART)/$(1)
	$(ECHO) keep > $(BUILD_DIR_PART)/$(1)/.keep
OUTPUT_DIRS += $(BUILD_DIR_PART)/$(1)
endef
$(foreach c,$(DIRS),$(eval $(call add-dir,$(c))))

# generate rule for files
define add-rule-c =
$(info adding C file rule: $(BUILD_DIR_PART)/$(1) depends on $(BUILD_DIR_PART)/$(dir $(1)) $(LIBLWRISCV_CONFIG_H) $(basename $(2)).c)
$(TARGET): $(BUILD_DIR_PART)/$(1)
$(BUILD_DIR_PART)/$(1): $(BUILD_DIR_PART)/$(dir $(1)).keep $(basename $(2)).c $(LIBLWRISCV_CONFIG_H)
	$$(ECHO) CC $(basename $(2)).c
	$$(CC) $$(CFLAGS) -c $(basename $(2)).c -o $$@
endef

define add-rule-as =
$(info adding ASM file rule: $(BUILD_DIR_PART)/$(1) depends on $(BUILD_DIR_PART)/$(dir $(1)) $(LIBLWRISCV_CONFIG_H) $(basename $(2)).S)
$(TARGET): $(BUILD_DIR_PART)/$(1)
$(BUILD_DIR_PART)/$(1): $(BUILD_DIR_PART)/$(dir $(1)).keep $(basename $(2)).S $(LIBLWRISCV_CONFIG_H)
	$$(ECHO) AS $(basename $(2)).S
	$$(CC) $$(ASFLAGS) -c $(basename $(2)).S -o $$@
endef

define add-file =
    $(if $(wildcard $(basename $(1)).c),$(eval $(call add-rule-c,$(1),$(1))))
    $(if $(wildcard $(basename $(1)).S),$(eval $(call add-rule-as,$(1),$(1))))
    $(TARGET): $(BUILD_DIR_PART)/$(1)
endef
$(foreach c,$(OBJS),$(eval $(call add-file,$(c))))

# Additional partition-specific sources if available (for custom logic to add source files from outside the partition)
-include partitions/$(PART_DIR)/config/sources-extra.mk

# Rules
$(TARGET):
	$(ECHO) For partition $(PART_DIR):
	$(ECHO) AR $(TARGET)
	$(AR) rcT $(TARGET) $(addprefix $(BUILD_DIR_PART)/,$(OBJS)) $(EXTRA_OBJECTS)

%.o: $(LIBLWRISCV_CONFIG_H)

build: $(TARGET)

install: build $(INSTALL_DIR_PART)/.keep
	$(COPY) $(TARGET) $(INSTALL_DIR_PART)/$(notdir $(TARGET))

clean:
	$(RM) -f $(INSTALL_DIR_PART) $(TARGET) $(OBJS)

# Stub to satisfy lwCommon.lwmk
.PHONY: show_config
show_config:
