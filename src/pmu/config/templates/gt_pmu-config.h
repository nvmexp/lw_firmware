// This file is automatically generated by {{$name}} - DO NOT EDIT!
//
// defines to indicate enabled/disabled for all gpus, features, classes, engines, and apis.
//
// Profile:  {{$PROFILE}}
// Template: {{$TEMPLATE_FILE}}
//
// Chips:    {{ CHIP_LIST() }}
//

#ifndef {{$XXCFG}}_H
#define {{$XXCFG}}_H
{{ # emit a #define for MAX_DEVICES to override LW0080_MAX_DEVICES using cmd MAX_DEVICES }}
{{ MAX_DEVICES_IFSET() }}
//
// CHIP families - enabled or disabled
//
{{ CHIP_FAMILY_DEFINES(":ALL") }}

//
// CHIPS - enabled or disabled
//
{{ CHIP_DEFINES(":ALL") }}

//
// Features - enabled or disabled
//
{{ GROUP_DEFINES ("FEATURES", ":ALL") }}
{{ GROUP_SPECIALS("FEATURES") }}

//
// Classes - enabled or disabled
//
{{ GROUP_DEFINES ("CLASSES", ":ALL") }}
{{ GROUP_SPECIALS("CLASSES") }}

//
// Engines - enabled or disabled
//
{{ GROUP_DEFINES ("ENGINES", ":ALL") }}
{{ GROUP_SPECIALS("ENGINES") }}

//
// API's - enabled or disabled
//
{{ GROUP_DEFINES ("APIS", ":ALL") }}
{{ GROUP_SPECIALS("APIS") }}


//
// List of all known chips, features, apis, classes, etc.
// Used by the {{$XXCFG}}_xxx_ENABLED macros to detect misspellings
// in param to RMCFG_FEATURE_ENABLED(), etc on some platforms.
//
{{ CHIP_DEFTEST_DEFINES()              }}
{{ GROUP_DEFTEST_DEFINES('FEATURES')   }}
{{ GROUP_DEFTEST_DEFINES('CLASSES')    }}
{{ GROUP_DEFTEST_DEFINES('ENGINES')    }}
{{ GROUP_DEFTEST_DEFINES('APIS')       }}


// Make sure the specified feature is defined and not a misspelling
// by checking the "def_*" forms above which are all set to '1' for
// each defined chip, feature, etc, irrespective of it's enable/disable
// state.
// NOTE: some compilers will warn on every instance of this trick, so
// only enable for GCC builds.
#define check_def_{{$XXCFG}}(x)  0

#if defined(__GNUC__) && !defined(__clang__)
#  undef  check_def_{{$XXCFG}}
#  define check_def_{{$XXCFG}}(x)  (((def_{{$XXCFG}} ## x)== 1) ? 0 : (0 * (1/0)))
#endif

//
// Compile-time constant macros to help with enabling or disabling code based
// on whether a feature (or chip or class or engine or ...) is enabled.
// May be used by both C code ('if') and C-preprocessor directives ('#if')
//

#define {{$XXCFG}}_CHIP_ENABLED(CHIP)       (({{$XXCFG}}_CHIP_##CHIP        + check_def_{{$XXCFG}}(_CHIP_ ## CHIP)) != 0)
#define {{$XXCFG}}_FEATURE_ENABLED(FEATURE) (({{$XXCFG}}_FEATURE_##FEATURE  + check_def_{{$XXCFG}}(_FEATURE_ ## FEATURE)) != 0)
#define {{$XXCFG}}_ENGINE_ENABLED(ENGINE)   (({{$XXCFG}}_ENGINE_##ENGINE    + check_def_{{$XXCFG}}(_ENGINE_ ## ENGINE)) != 0)
#define {{$XXCFG}}_CLASS_ENABLED(CLSS)      (({{$XXCFG}}_CLASS_##CLSS       + check_def_{{$XXCFG}}(_CLASS_ ## CLSS)) != 0)
#define {{$XXCFG}}_API_ENABLED(API)         (({{$XXCFG}}_API_##API          + check_def_{{$XXCFG}}(_API_ ## API)) != 0)

#endif // {{$XXCFG}}_H
