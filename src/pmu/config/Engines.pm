#************************ BEGIN COPYRIGHT NOTICE ***************************#
#                                                                           #
#          Copyright (c) LWPU Corporation.  All rights reserved.          #
#                                                                           #
# All information contained herein is proprietary and confidential to       #
# LWPU Corporation.  Any use, reproduction, or disclosure without the     #
# written permission of LWPU Corporation is prohibited.                   #
#                                                                           #
#************************** END COPYRIGHT NOTICE ***************************#
#
#
# pmu-config file that specifies all engines known to PMU applications
#

package Engines;
use warnings 'all';
no warnings qw(bareword);       # barewords makes this file easier to read
                                # and not so important for error checks here

use Carp;                       # for 'croak', 'cluck', etc.

use Groups;                     # Engines is derived from 'Groups'

@ISA = qw(Groups);

#
# The actual engine definitions.
# This list contains all engines that pmu-config is aware of.
#
# IMPORTANT: New source files must be added to both Engines.pm and Sources.def.
#
my $enginesRef = [

    PMU =>
    {
        DESCRIPTION     => "PMU",
        DEFAULT_STATE   => ENABLED,
        SRCFILES        => [ "pmu/lw/pmu_objpmu.c"                  ,
                             "pmu/lw/pmu_verify_version.c"          ,
                             "pmu/fermi/pmu_queuegf10x.c"           ,
                             "pmu/fermi/pmu_pmugf10x.c"             ,
                             "pmu/kepler/pmu_pmugkxxx.c"            ,
                             "pmu/kepler/pmu_pmu_chip_info_gkxxx.c" ,
                             "pmu/hopper/pmu_chip_info_gh100.c"     ,
                             "pmu/kepler/pmu_detach_gk10x.c"        ,
                             "pmu/kepler/pmu_idle_counter_gk10x.c"  ,
                             "pmu/maxwell/pmu_pmugm10x.c"           ,
                             "pmu/maxwell/pmu_pmugm20x_only.c"      ,
                             "pmu/maxwell/pmu_gm20x_gp10x_only.c"   ,
                             "pmu/maxwell/pmu_pmu_chip_info_gm20b.c",
                             "pmu/maxwell/pmu_pmugm20x.c"           ,
                             "pmu/pascal/pmu_pmugp100.c"            ,
                             "pmu/pascal/pmu_pmugp10x.c"            ,
                             "pmu/pascal/pmu_idle_counter_gp10x.c"  ,
                             "pmu/volta/pmugv10x.c"                 ,
                             "pmu/volta/pmu_queuegv10x.c"           ,
                             "pmu/turing/pmu_idle_counter_tu10x.c"  ,
                             "pmu/turing/pmu_verify_engine_tuxxx.c" ,
                             "pmu/turing/pmu_queuetu10x.c"          ,
                             "pmu/turing/pmu_pmutu10x.c"            ,
                             "pmu/ampere/pmu_verify_chip_ga100.c"   ,
                             "pmu/ampere/pmu_pmuga100.c"            ,
                             "pmu/ampere/pmu_verify_chip_ga10x.c"   ,
                             "pmu/ampere/pmu_pmuga10x.c"            ,
                             "pmu/ampere/pmu_version_ga10x.c"       ,
                             "pmu/hopper/pmu_pmughxxx.c"            ,
                             "lib/lib_nocat.c"                      ,
                             "lib/lib_sandbag.c"                    ,
                             "cmdmgmt/lw/cmdmgmt_detach.c"          ,
                             "cmdmgmt/lw/cmdmgmt_dispatch.c"        ,
                             "cmdmgmt/lw/cmdmgmt_dmem_info.c"       ,
                             "cmdmgmt/lw/cmdmgmt_queue.c"           ,
                             "cmdmgmt/lw/cmdmgmt_queue_dmem.c"      ,
                             "cmdmgmt/lw/cmdmgmt_queue_fb.c"        ,
                             "cmdmgmt/lw/cmdmgmt_queue_fb_heap.c"   ,
                             "cmdmgmt/lw/cmdmgmt_queue_fb_ptcb.c"   ,
                             "cmdmgmt/lw/cmdmgmt_queue_fbflcn.c"    ,
                             "cmdmgmt/lw/cmdmgmt_queue_fsp.c"       ,
                             "cmdmgmt/lw/cmdmgmt_rpc.c"             ,
                             "cmdmgmt/lw/cmdmgmt_rpc_impl.c"        ,
                             "cmdmgmt/lw/cmdmgmt_sanitizer_cov.c"   ,
                             "cmdmgmt/lw/cmdmgmt_supersurface.c"    ,
                             "cmdmgmt/lw/cmdmgmt_vc.c"              , ],
    },

    IC =>
    {
        DESCRIPTION     => "Interrupt Controller",
        DEFAULT_STATE   => ENABLED,
        SRCFILES        => [ "ic/fermi/ic_miscio_bank0_gf11x.c"     ,
                             "ic/kepler/pmu_icgkxxx.c"              ,
                             "ic/kepler/ic_miscio_gkxxx.c"          ,
                             "ic/kepler/ic_miscio_bank0_gk1xx.c"    ,
                             "ic/kepler/ic_miscio_bank1_gk1xx.c"    ,
                             "ic/maxwell/ic_miscio_bank1_gm10x.c"   ,
                             "ic/turing/pmu_ictuxxx.c"              ,
                             "ic/turing/pmu_icprivtuxxx.c"          ,
                             "ic/turing/pmu_icxusbtuxxx.c"          ,
                             "ic/turing/pmu_icbank2tuxxx.c"         ,
                             "ic/ampere/pmu_icga10x.c"              ,
                             "ic/hopper/pmu_icghxxx.c"              , ],
    },

    SEQ =>
    {
        DESCRIPTION     => "Sequencer Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ pre_AMPERE, ],
        SRCFILES        => [ "seq/lw/pmu_objseq.c"       ,
                             "seq/fermi/pmu_seqgf11x.c"  ,
                             "seq/maxwell/pmu_seqgm10x.c",
                             "seq/pascal/pmu_seqgp100.c" ,
                             "seq/volta/pmu_seqgv10x.c"  , ],
    },

    FB =>
    {
        DESCRIPTION     => "Framebuffer",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "fb/lw/pmu_objfb.c"     ,
                             "fb/maxwell/fbgm10x.c"  ,
                             "fb/maxwell/fbgm200.c"  ,
                             "fb/pascal/fbsrgp10x.c" ,
                             "fb/volta/fbgv10x.c"    ,
                             "fb/turing/fbsrtu10x.c" ,
                             "fb/ampere/fbga100.c"   ,
                             "fb/ampere/fbga102.c"   ,
                             "fb/ampere/fbsrga10x.c" , ],
    },

    DISP =>
    {
        DESCRIPTION     => "Display Engine",
        DEFAULT_STATE   => ENABLED,
        PROFILES        => [ 'pmu-*', '-pmu-ga100', '-pmu-gh100*', '-pmu-gb100_riscv', ],
        SRCFILES        => [ "disp/lw/pmu_objdisp.c"          ,
                             "disp/lw/disp_rpc.c"             ,
                             "disp/fermi/pmu_dispgf11x.c"     ,
                             "disp/kepler/pmu_dispgk10x.c"    ,
                             "disp/kepler/pmu_dispgk11x.c"    ,
                             "disp/maxwell/pmu_dispgmxxx.c"   ,
                             "disp/maxwell/pmu_dispgm10x.c"   ,
                             "disp/pascal/pmu_dispgp10xonly.c",
                             "disp/pascal/pmu_dispgp10x.c"    ,
                             "disp/pascal/pmu_dispgp10xtu10x.c",
                             "disp/pascal/pmu_dispgp10xga100.c",
                             "disp/volta/pmu_dispgv10x.c"     ,
                             "disp/turing/pmu_disptu10x.c"    ,
                             "disp/turing/pmu_disptu10xonly.c",
                             "disp/turing/pmu_isohubtu10x.c"  ,
                             "disp/ampere/pmu_isohubga10x.c"  ,
                             "disp/ampere/pmu_dispga10x.c"    ,
                             "disp/ampere/pmu_dispga10xonly.c",
                             "disp/ada/pmu_dispad10x.c",      ],
    },

    TIMER =>
    {
        DESCRIPTION     => "Timer Engine",
        DEFAULT_STATE   => ENABLED,
        SRCFILES        => [ "timer/lw/pmu_objtimer.c"         ,
                             "timer/fermi/pmu_gputimergf10x.c" ,
                             "timer/turing/watchdog_tu10x.c"   , ],
    },

    ECID =>
    {
        DESCRIPTION     => "Retrieve ECID Engine",
        PROFILES        => [ 'pmu-*', ],
        DEFAULT_STATE   => ENABLED,
        SRCFILES        => [ "ecid/lw/pmu_objecid.c"       ,
                             "ecid/maxwell/pmu_ecidgmxxx.c", ],
    },

    THERM =>
    {
        DESCRIPTION     => "Thermal Engine",
        DEFAULT_STATE   => ENABLED,
        SRCFILES        => [ "therm/lw/objtherm.c"                  ,
                             "therm/lw/therm_rpc.c"                 ,
                             "therm/lw/tempsim.c"                   ,
                             "therm/lw/thrmslct.c"                  ,
                             "therm/lw/thrmhwfs.c"                  ,
                             "therm/lw/thrmintr.c"                  ,
                             "therm/lw/thrmmon.c"                   ,
                             "therm/lw/therm_detach.c"              ,
                             "therm/fermi/pmu_thermgf11x.c"         ,
                             "therm/kepler/pmu_thrmpwmgk10x.c"      ,
                             "therm/kepler/pmu_thrmpwmgk10x_gm20x.c",
                             "therm/kepler/pmu_thermgk11x.c"        ,
                             "therm/kepler/pmu_thrmslctgk11x.c"     ,
                             "therm/kepler/pmu_thrmintrgk10x.c"     ,
                             "therm/kepler/pmu_thrmintrgk11x.c"     ,
                             "therm/kepler/thrmbagk11x.c"           ,
                             "therm/maxwell/pmu_thermgm10x.c"       ,
                             "therm/maxwell/pmu_thermgm20x.c"       ,
                             "therm/maxwell/thrmbagm10x.c"          ,
                             "therm/pascal/pmu_thrm_gp10x.c"        ,
                             "therm/pascal/pmu_thrm_gp10x_only.c"   ,
                             "therm/pascal/pmu_thrm_gp10x_tu10x.c"  ,
                             "therm/pascal/pmu_thrm_gp10x_ga101.c"  ,
                             "therm/pascal/pmu_thrm_gp10x_ga10x.c"  ,
                             "therm/pascal/pmu_thrmpwmgp10x_gv10x.c",
                             "therm/pascal/pmu_thrmpwmgp10x.c"      ,
                             "therm/pascal/thrm_test_gp10x.c"       ,
                             "therm/pascal/thrm_test_gp10x_ga101.c" ,
                             "therm/pascal/thrm_intr_gp10x.c"       ,
                             "therm/volta/thrmgv10xonly.c"          ,
                             "therm/volta/thrmgvxxxtuxxx.c"         ,
                             "therm/volta/thrmgv10x.c"              ,
                             "therm/volta/thrmbagv10x.c"            ,
                             "therm/volta/thrmtestgv10x.c"          ,
                             "therm/volta/thrmtestbagv10x.c"        ,
                             "therm/volta/thrmtestbahelpergv10x.c"  ,
                             "therm/turing/thrmtu10x.c"             ,
                             "therm/turing/thrmbatu10x.c"           ,
                             "therm/turing/thrmbawartu10x.c"        ,
                             "therm/turing/pmu_thrmpwmtu10x.c"      ,
                             "therm/ampere/pmu_thrmpwmga100.c"      ,
                             "therm/turing/thrmtestbatu10x.c"       ,
                             "therm/ampere/thrmga100ga101only.c"    ,
                             "therm/ampere/thrmga10x.c"             ,
                             "therm/ampere/thrmtestga100.c"         ,
                             "therm/ampere/thrmtestga10x.c"         ,
                             "therm/ampere/thrmtestga10xonly.c"     ,
                             "therm/hopper/thrmtestgh100.c"         ,
                             "therm/hopper/pmu_thrm_gh10x.c"        ,
                             "therm/ampere/thrmtestbahelperga10x.c" ,
                             "fan/lw/pmu_fanctrl.c"                 ,
                             "fan/lw/objfan.c"                      ,
                             "fan/lw/fan_rpc.c"                     , ],
    },

    SMBPBI =>
    {
        DESCRIPTION     => "SMBus PostBox Interface Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "smbpbi/lw/objsmbpbi.c"       ,
                             "smbpbi/lw/smbpbi.c"          ,
                             "smbpbi/lw/smbpbi_bundle.c"   ,
                             "smbpbi/lw/smbpbi_fsp_rpc.c"  ,
                             "smbpbi/fermi/smbpbigf11x.c"  ,
                             "smbpbi/kepler/eccgk11x.c"    ,
                             "smbpbi/maxwell/smbpbigm10x.c",
                             "smbpbi/pascal/eccgp10x.c"    ,
                             "smbpbi/pascal/tlimgp10x.c"   ,
                             "smbpbi/volta/eccgv10x.c"     ,
                             "smbpbi/volta/utilgv10x.c"    ,
                             "smbpbi/volta/smbpbigv10x.c"  ,
                             "smbpbi/turing/smbpbitu10x.c" ,
                             "smbpbi/ampere/smbpbiga100.c" ,
                             "smbpbi/ampere/lwlinkga100.c" ,
                             "smbpbi/ampere/lwlinkga100_only.c" ,
                             "smbpbi/ampere/lwlinkga10x_only.c" ,
                             "smbpbi/ampere/lwlinkgaxxx_only.c",
                             "smbpbi/ampere/pcieinfoga100.c",
                             "smbpbi/volta/fwwpgv10x.c"    ,
                             "smbpbi/turing/fwwptu10x.c"   ,
                             "smbpbi/turing/pcieinfotu10x.c" ,
                             "smbpbi/hopper/pcieinfogh100.c" ,
                             "smbpbi/ampere/eccga100.c"    ,
                             "smbpbi/ampere/rrlga100.c"    , ],
    },

    PERF =>
    {
        DESCRIPTION     => "Perf Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "perf/lw/pmu_objperf.c"             ,
                             "perf/lw/perfrmcmd.c"               ,
                             "perf/lw/perf_rpc.c"                ,
                             "perf/pascal/pmu_perfvfieldgp10x.c" ,
                             "perf/volta/pmu_perfvfieldgv100.c"  ,
                             "perf/volta/pmu_perfvfieldgv11b.c"  ,
                             "perf/turing/pmu_perfvfieldtu10x.c" ,
                             "perf/ampere/pmu_perfvfieldga100.c" ,
                             "perf/ampere/pmu_perfvfieldga10x.c" , ],
    },

    LOGGER =>
    {
        DESCRIPTION     => "Logger Engine",
        DEFAULT_STATE   => ENABLED,
        PROFILES        => [ 'pmu-*', ],
        SRCFILES        => [ "logger/lw/logger_rpc.c", ],
    },

    PMGR =>
    {
        DESCRIPTION     => "Pmgr Engine",
        DEFAULT_STATE   => DISABLED,
        PROFILES        => [ 'pmu-*', ],
        SRCFILES        => [ "pmgr/lw/pmgr_rpc.c"          ,
                             "pmgr/lw/pmu_objpmgr.c"       ,
                             "pmgr/fermi/pmu_pmgrgf11xga100.c"  ,
                             "pmgr/kepler/pmu_pmgrgk11x.c" ,
                             "pmgr/maxwell/pmu_pmgrgm10x.c",
                             "pmgr/pascal/pmu_pmgrgp100.c" ,
                             "pmgr/turing/pmgrtu10x.c"     ,
                             "pmgr/ampere/pmgrtestga100.c" ,
                             "pmgr/ampere/pmgrga100.c"     ,
                             "pmgr/ampere/pmgrga10x.c"     ,
                             "pmgr/ampere/gpioga10xonly.c" ,
                             "pmgr/ada/pmgrad10x.c"        ,
                             "pmgr/ada/pmgrtestad10x.c"    ,
                             "pmgr/hopper/pmgrtestgh100.c" , ],
    },

    I2C =>
    {
        DESCRIPTION     => "I2c Engine",
        DEFAULT_STATE   => DISABLED,
        PROFILES        => [ 'pmu-*', ],
        SRCFILES        => [ "i2c/lw/pmu_obji2c.c"          ,
                             "i2c/fermi/pmu_i2cgf10x.c"     ,
                             "i2c/fermi/pmu_hwi2cgf10x.c"   ,
                             "i2c/fermi/pmu_i2cgf11x.c"     ,
                             "i2c/kepler/pmu_i2cmtxgk11x.c" ,
                             "i2c/maxwell/pmu_i2cgm20x.c"   ,
                             "i2c/maxwell/pmu_i2cmtxgm20x.c",
                             "i2c/pascal/pmu_i2cmtxgp10x.c" ,
                             "i2c/ampere/pmu_i2cmtxga100.c" ,
                             "i2c/hopper/pmu_hwi2cgh100.c"   ,],
    },

    SPI =>
    {
        DESCRIPTION     => "SPI Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "spi/lw/pmu_objspi.c"             ,
                             "spi/lw/pmu_spirom.c"             ,
                             "spi/lw/spi_rpc.c"                ,
                             "spi/lw/spidev.c"                 ,
                             "spi/lw/spidev_rom.c"             ,
                             "spi/fermi/pmu_spiromgf10x.c"     ,
                             "spi/fermi/pmu_spiromgfxxxgmxxx.c",
                             "spi/pascal/pmu_spigp100_only.c"  ,
                             "spi/pascal/pmu_spigp100.c"       ,
                             "spi/pascal/pmu_spigp10x.c"       ,
                             "spi/pascal/pmu_spiromgp100.c"    ,
                             "spi/volta/pmu_spiromgv10x.c"     ,
                             "spi/volta/pmu_eraseledgergv10x.c",
                             "spi/turing/pmu_spitu10x.c"       ,
                             "spi/ampere/pmu_spiromga100.c"    ,
                             "spi/ampere/pmu_spiga10x.c"       ,
                             "spi/ampere/pmu_spiromga10x.c"    , ],
    },

    GCX =>
    {
        DESCRIPTION     => "GCX",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "gcx/lw/objgcx.c"                 ,
                             "gcx/lw/gcxgc5.c"                 ,
                             "gcx/fermi/pmu_didlegf11x.c"      ,
                             "gcx/kepler/pmu_didlegk10x.c"     ,
                             "gcx/kepler/pmu_didlegk20x.c"     ,
                             "gcx/maxwell/pmu_didlegm10x.c"    , ],
    },

    LPWR =>
    {
        DESCRIPTION     => "Low Power engine handling all power saving features",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "lpwr/lw/objlpwr.c"                       ,
                             "lpwr/lw/lpwr_cg.c"                       ,
                             "lpwr/lw/lpwr_rpc.c"                      ,
                             "lpwr/lw/lpwr_lp_rpc.c"                   ,
                             "lpwr/lw/lpwr_loadin_rpc.c"               ,
                             "lpwr/lw/lpwr_callback.c"                 ,
                             "lpwr/lw/lpwr_vbios.c"                    ,
                             "lpwr/lw/lpwr_privblocker.c"              ,
                             "lpwr/lw/lpwr_seq.c"                      ,
                             "lpwr/lw/lpwr_stat.c"                     ,
                             "lpwr/lw/lpwr_perfseq.c"                  ,
                             "lpwr/lw/lpwr_grp.c"                      ,
                             "lpwr/lw/lpwr_test.c"                     ,
                             "lpwr/kepler/lpwr_holdoffgk10x.c"         ,
                             "lpwr/kepler/lpwr_cg_elcggk10x.c"         ,
                             "lpwr/maxwell/lpwr_cggmxxx_only.c"        ,
                             "lpwr/maxwell/lpwr_cggm10x.c"             ,
                             "lpwr/maxwell/lpwr_cg_elcggmxxx_only.c"   ,
                             "lpwr/maxwell/lpwrgm10x.c"                ,
                             "lpwr/pascal/lpwr_cggp10x.c"              ,
                             "lpwr/pascal/lpwr_seqgpxxxonly.c"         ,
                             "lpwr/pascal/lpwr_cg_elcggp10x.c"         ,
                             "lpwr/pascal/lpwr_cg_elcggpxxxadxxx.c"    ,
                             "lpwr/hopper/lpwr_cg_elcggh10x.c"         ,
                             "lpwr/turing/lpwrtu10x.c"                 ,
                             "lpwr/turing/lpwrtu10xonly.c"             ,
                             "lpwr/turing/lpwr_privblockertu10x.c"     ,
                             "lpwr/turing/lpwr_privblockertuxxx_only.c",
                             "lpwr/turing/lpwr_seqtuxxxonly.c"         ,
                             "lpwr/turing/lpwr_cgtu10x.c"              ,
                             "lpwr/ampere/lpwrga10x.c"                 ,
                             "lpwr/ampere/lpwr_seqga10x.c"             ,
                             "lpwr/ada/lpwr_seqad10x.c"                ,
                             "lpwr/ampere/lpwr_privblockerga10x.c"     ,
                             "lpwr/ampere/lpwrga10b.c"                 ,
                             "lpwr/ampere/lpwr_privblockerga10b.c"     ,
                             "lpwr/ampere/lpwr_cgga10b.c"              ,
                             "lpwr/ada/lpwrad10x.c"                    ,
                             "lpwr/hopper/lpwr_cggh10x.c"              ,
                             "lpwr/ada/lpwr_cg_elcgad10b.c"            ,
                             "lpwr/blackwell/lpwr_cg_elcggb10x.c"         , ],
    },

    PG =>
    {
        DESCRIPTION     => "PG Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "pg/lw/pmu_objpg.c"                  ,
                             "pg/lw/pmu_objpgctrl.c"              ,
                             "pg/lw/pglogic.c"                    ,
                             "pg/lw/pmu_pglogicovl.c"             ,
                             "pg/lw/pmu_pglogicsm.c"              ,
                             "pg/lw/pmu_pglogicwar.c"             ,
                             "pg/lw/pmu_pglog.c"                  ,
                             "pg/lw/pmu_pgstat.c"                 ,
                             "pg/lw/pmu_gc6.c"                    ,
                             "pg/kepler/pmu_pggkxxx.c"            ,
                             "pg/kepler/pmu_pgctrlgkxxx.c"        ,
                             "pg/kepler/pmu_pgctrlgkxxxgvxxx.c"   ,
                             "pg/maxwell/pmu_pgapgm10x.c"         ,
                             "pg/pascal/pmu_pggp10x.c"            ,
                             "pg/pascal/pmu_pgctrlgp10x.c"        ,
                             "pg/pascal/pmu_pgctrlgpxxxgvxxx.c"   ,
                             "pg/pascal/pmu_pgislandgp10x.c"      ,
                             "pg/volta/pmu_pggv11b.c"             ,
                             "pg/turing/pmu_pgctrltu10x.c"        ,
                             "pg/turing/pmu_gc6tu10x.c"           ,
                             "pg/turing/pmu_gc6tu10x_only.c"      ,
                             "pg/turing/pmu_gc6lwlinktu10x.c"     ,
                             "pg/turing/pmu_pgislandtu10x.c"      ,
                             "pg/turing/pmu_pgislandtu10x_only.c" ,
                             "pg/turing/pmu_pgtu10x.c"            ,
                             "pg/ampere/pmu_pgctrlga10x.c"        ,
                             "pg/ampere/pmu_gc6ga10x.c"           , ],
    },

    AP =>
    {
        DESCRIPTION     => "Adaptive Power",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "lpwr/lw/objap.c"                 ,
                             "lpwr/lw/ap_ctrl.c"               ,
                             "lpwr/kepler/ap_ctrlgk10x.c"      ,
                             "lpwr/maxwell/ap_ctrlgmxxx_only.c",
                             "lpwr/pascal/ap_ctrlgp10x.c"      , ],
    },

    DI =>
    {
        DESCRIPTION     => "Deep Idle",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "di/lw/pmu_objdi.c"            ,
                             "di/maxwell/pmu_digm10x.c"     ,
                             "di/maxwell/pmu_digm10x_only.c",
                             "di/maxwell/pmu_digm20x.c"     ,
                             "di/maxwell/pmu_digm20x_only.c",
                             "di/maxwell/pmu_digmxxx_only.c",
                             "di/maxwell/pmu_digmxxxgpxxx.c",
                             "di/pascal/pmu_digp10x.c"      ,
                             "di/pascal/pmu_digpxxx_only.c" , ],
    },

    PSI =>
    {
        DESCRIPTION     => "PSI",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "lpwr/lw/objpsi.c"      ,
                             "lpwr/lw/psi_ctrl.c"    ,
                             "lpwr/kepler/psigk10x.c",
                             "lpwr/pascal/psigp10x.c",
                             "lpwr/pascal/psigp10xtu10x.c",
                             "lpwr/ampere/psiga10x.c", ],
    },

    EI =>
    {
        DESCRIPTION     => "Idle Framework engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ TURING_and_later, ],
        SRCFILES        => [ "lpwr/lw/objei.c",
                             "lpwr/lw/ei_client.c",
                             "lpwr/lw/ei_callback.c",
                             "lpwr/turing/eitu10x.c",
                             "lpwr/ampere/eiga10x.c",
                             "lpwr/lw/ei_passive.c", ],
    },

    FIFO =>
    {
        DESCRIPTION     => "Fifo Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "fifo/lw/pmu_objfifo.c"          ,
                             "fifo/kepler/pmu_fifogkxxx.c"    ,
                             "fifo/maxwell/pmu_fifogmxxx.c"   ,
                             "fifo/maxwell/pmu_fifogm10x.c"   ,
                             "fifo/maxwell/pmu_fifogm20x.c"   ,
                             "fifo/pascal/pmu_fifogpxxx.c"    ,
                             "fifo/pascal/pmu_fifogp100.c"    ,
                             "fifo/pascal/pmu_fifogp10x.c"    ,
                             "fifo/volta/pmu_fifogv11b.c"     ,
                             "fifo/turing/pmu_fifotu10x.c"    ,
                             "fifo/turing/pmu_fifotu10xonly.c",
                             "fifo/ampere/pmu_fifogaxxx.c"    ,
                             "fifo/ampere/pmu_fifoga10b.c"    ,
                             "fifo/ada/pmu_fifoad10x.c"       ,],
    },

    # GR is disabled on GM10X and GM20X. All HAL would get stub on GM10X and GM20X.
    GR =>
    {
        DESCRIPTION      => "Graphics Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "gr/lw/pmu_objgr.c"            ,
                             "gr/fermi/pmu_grgfxxx.c"       ,
                             "gr/kepler/pmu_grgkxxxtuxxx.c" ,
                             "gr/kepler/pmu_grgkxxx.c"      ,
                             "gr/kepler/pmu_grgkxxxgpxxx.c" ,
                             "gr/kepler/pmu_grgk10x.c"      ,
                             "gr/maxwell/pmu_grgm10x.c"     ,
                             "gr/maxwell/pmu_grgmxxxtuxxx.c",
                             "gr/maxwell/pmu_grgm20b.c"     ,
                             "gr/pascal/pmu_grgp10x.c"      ,
                             "gr/pascal/pmu_grgpxxxonly.c"  ,
                             "gr/volta/pmu_grgv11b.c"       ,
                             "gr/turing/pmu_grtu10x.c"      ,
                             "gr/turing/pmu_grtuxxx_only.c" ,
                             "gr/ampere/pmu_grga10x.c"      ,
                             "gr/ampere/pmu_grga10x_only.c" ,
                             "gr/ampere/pmu_grga10b_only.c" , ],
    },

    MS =>
    {
        DESCRIPTION     => "Memory System Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "ms/lw/pmu_objms.c"                ,
                             "ms/lw/ms_passive.c"               ,
                             "ms/kepler/pmu_msswasrgk10x.c"     ,
                             "ms/kepler/pmu_msswasrgkxxxtuxxx.c",
                             "ms/kepler/pmu_msgkxxx.c"          ,
                             "ms/kepler/pmu_msgkxxxgpxxx.c"     ,
                             "ms/kepler/pmu_msgkxxxtuxxx.c"     ,
                             "ms/maxwell/pmu_msgm10xonly.c"     ,
                             "ms/maxwell/pmu_msswasrgm10xonly.c",
                             "ms/maxwell/pmu_msswasrgm10x.c"    ,
                             "ms/maxwell/pmu_msswasrgmxxxonly.c",
                             "ms/maxwell/pmu_msgm20xonly.c"     ,
                             "ms/maxwell/pmu_msgm20x.c"         ,
                             "ms/maxwell/pmu_msgmxxxgpxxx.c"    ,
                             "ms/pascal/pmu_msgp10x.c"          ,
                             "ms/pascal/pmu_msswasrgp10x.c"     ,
                             "ms/pascal/pmu_msgpxxxgvxxx.c"     ,
                             "ms/pascal/pmu_msgpxxxtuxxx.c"     ,
                             "ms/volta/pmu_msgv11b.c"           ,
                             "ms/turing/pmu_mstu10xonly.c"      ,
                             "ms/turing/pmu_mstuxxxadxxx.c"     ,
                             "ms/turing/pmu_mstuxxx.c"          ,
                             "ms/turing/pmu_mstu10x.c"          ,
                             "ms/turing/pmu_msswasrtu10x.c"     ,
                             "ms/turing/pmu_msswasrtuxxxonly.c" ,
                             "ms/ampere/pmu_msgaxxx.c"          ,
                             "ms/ampere/pmu_msga10x.c"          ,
                             "ms/ampere/pmu_msga10b.c"          ,
                             "ms/ampere/pmu_msswasrga10x.c"     ,
                             "ms/ada/pmu_msad10x.c"             ,
                             "ms/hopper/pmu_msghxxx.c"          , ],
    },

    DFPR =>
    {
        DESCRIPTION     => "Display Idle Frame Refresh Prefetch Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ dAMPERE_and_later, ],
        SRCFILES        => [ "lpwr/lw/objdfpr.c",
                             "lpwr/ampere/dfprga10x.c",
                             "lpwr/ada/dfprad10x.c", ],
    },

    CLK =>
    {
        DESCRIPTION     => "Clock Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "clk/lw/pmu_objclk.c"                          ,
                             "clk/lw/clkrmcmd.c"                            ,
                             "clk/lw/clk_domain.c"                          ,
                             "clk/lw/clk_domain_prog.c"                     ,
                             "clk/lw/clk_domain_prog_auto.c"                ,
                             "clk/lw/clk_domain_3x.c"                       ,
                             "clk/lw/clk_domain_3x_fixed.c"                 ,
                             "clk/lw/clk_domain_3x_prog_base.c"             ,
                             "clk/lw/clk_domain_3x_primary_base.c"           ,
                             "clk/lw/clk_domain_3x_secondary_base.c"            ,
                             "clk/lw/clk_domain_3x_prog.c"                  ,
                             "clk/lw/clk_domain_3x_primary.c"                ,
                             "clk/lw/clk_domain_3x_secondary.c"                 ,
                             "clk/lw/clk_domain_30_prog.c"                  ,
                             "clk/lw/clk_domain_30_primary.c"                ,
                             "clk/lw/clk_domain_30_secondary.c"                 ,
                             "clk/lw/clk_domain_35_prog_base.c"             ,
                             "clk/lw/clk_domain_35_primary_base.c"           ,
                             "clk/lw/clk_domain_35_secondary_base.c"            ,
                             "clk/lw/clk_domain_35_prog.c"                  ,
                             "clk/lw/clk_domain_35_primary.c"                ,
                             "clk/lw/clk_domain_35_secondary.c"                 ,
                             "clk/lw/clk_domain_40_prog.c"                  ,
                             "clk/lw/client_clk_domain.c"                   ,
                             "clk/lw/client_clk_domain_prog.c"              ,
                             "clk/lw/clk_prog.c"                            ,
                             "clk/lw/clk_prog_3x_base.c"                    ,
                             "clk/lw/clk_prog_3x_primary_base.c"             ,
                             "clk/lw/clk_prog_3x_primary_ratio_base.c"       ,
                             "clk/lw/clk_prog_3x_primary_table_base.c"       ,
                             "clk/lw/clk_prog_3x.c"                         ,
                             "clk/lw/clk_prog_3x_primary.c"                  ,
                             "clk/lw/clk_prog_3x_primary_ratio.c"            ,
                             "clk/lw/clk_prog_3x_primary_table.c"            ,
                             "clk/lw/clk_prog_3x_auto.c"                    ,
                             "clk/lw/clk_prog_30.c"                         ,
                             "clk/lw/clk_prog_30_primary.c"                  ,
                             "clk/lw/clk_prog_30_primary_ratio.c"            ,
                             "clk/lw/clk_prog_30_primary_table.c"            ,
                             "clk/lw/clk_prog_35_base.c"                    ,
                             "clk/lw/clk_prog_35_primary_base.c"             ,
                             "clk/lw/clk_prog_35_primary_ratio_base.c"       ,
                             "clk/lw/clk_prog_35_primary_table_base.c"       ,
                             "clk/lw/clk_prog_35.c"                         ,
                             "clk/lw/clk_prog_35_primary.c"                  ,
                             "clk/lw/clk_prop_regime.c"                     ,
                             "clk/lw/clk_prop_top.c"                        ,
                             "clk/lw/clk_prop_top_rel.c"                    ,
                             "clk/lw/clk_prop_top_rel_1x_ratio.c"           ,
                             "clk/lw/clk_prop_top_rel_1x_table.c"           ,
                             "clk/lw/clk_prop_top_rel_1x_volt.c"            ,
                             "clk/lw/clk_prop_top_rel_1x_vfe.c"             ,
                             "clk/lw/client_clk_prop_top_pol.c"             ,
                             "clk/lw/client_clk_prop_top_pol_1x_slider.c"   ,
                             "clk/lw/clk_enum.c"                            ,
                             "clk/lw/clk_vf_rel.c"                          ,
                             "clk/lw/clk_vf_rel_ratio.c"                    ,
                             "clk/lw/clk_vf_rel_ratio_volt.c"               ,
                             "clk/lw/clk_vf_rel_table.c"                    ,
                             "clk/lw/clk_rpc.c"                             ,
                             "clk/lw/clk_freq_rpc.c"                        ,
                             "clk/lw/clk_vf_point.c"                        ,
                             "clk/lw/clk_vf_point_3x.c"                     ,
                             "clk/lw/clk_vf_point_30.c"                     ,
                             "clk/lw/clk_vf_point_30_freq.c"                ,
                             "clk/lw/clk_vf_point_30_volt.c"                ,
                             "clk/lw/clk_vf_point_35.c"                     ,
                             "clk/lw/clk_vf_point_35_freq.c"                ,
                             "clk/lw/clk_vf_point_35_volt.c"                ,
                             "clk/lw/clk_vf_point_35_volt_pri.c"            ,
                             "clk/lw/clk_vf_point_35_volt_sec.c"            ,
                             "clk/lw/clk_vf_point_40.c"                     ,
                             "clk/lw/clk_vf_point_40_freq.c"                ,
                             "clk/lw/clk_vf_point_40_volt.c"                ,
                             "clk/lw/clk_vf_point_40_volt_pri.c"            ,
                             "clk/lw/clk_vf_point_40_volt_sec.c"            ,
                             "clk/lw/client_clk_vf_point.c"                 ,
                             "clk/lw/client_clk_vf_point_prog.c"            ,
                             "clk/lw/client_clk_vf_point_prog_20.c"         ,
                             "clk/lw/client_clk_vf_point_prog_20_freq.c"    ,
                             "clk/lw/client_clk_vf_point_prog_20_volt.c"    ,
                             "clk/lw/clk_controller.c"                      ,
                             "clk/lw/clk_freq_controller.c"                 ,
                             "clk/lw/clk_freq_controller_10.c"              ,
                             "clk/lw/clk_freq_controller_10_pi.c"           ,
                             "clk/lw/clk_freq_controller_20.c"              ,
                             "clk/lw/clk_freq_controller_20_pi.c"           ,
                             "clk/lw/clk_freq_counted_avg.c"                ,
                             "clk/lw/clk_freq_effective_avg.c"              ,
                             "clk/lw/clk_volt_controller.c"                 ,
                             "clk/lw/clk_volt_controller_prop.c"            ,
                             "clk/lw/clk_pll_info.c"                        ,
                             "clk/lw/pmu_clkcntr.c"                         ,
                             "clk/fermi/pmu_clkcntrgf10x.c"                 ,
                             "clk/pascal/pmu_clkcntrgp100.c"                ,
                             "clk/pascal/pmu_clkcntrgpxxx_only.c"           ,
                             "clk/volta/pmu_clkcntrgv10x.c"                 ,
                             "clk/volta/pmu_clkcntrgv10x_only.c"            ,
                             "clk/turing/pmu_clkcntrtu10x.c"                ,
                             "clk/pascal/pmu_clkgpxxx_only.c"               ,
                             "clk/volta/pmu_clkgv10x.c"                     ,
                             "clk/ampere/pmu_clkga100.c"                    ,
                             "clk/ampere/pmu_clkga10x.c"                    ,
                             "clk/ada/pmu_clkcntrad10x.c"                   ,
                             "clk/ada/pmu_clkadcad10x.c"                    ,
                             "clk/ada/pmu_clkavfsad10x.c"                   ,
                             "clk/hopper/pmu_clkcntrgh10x.c"                , ],
    },

    FUSE =>
    {
        DESCRIPTION     => "Fuse Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "fuse/lw/pmu_objfuse.c"       ,
                             "fuse/maxwell/pmu_fusegm200.c",
                             "fuse/turing/fusetu10xonly.c" ,
                             "fuse/turing/fusetu10x.c"     ,
                             "fuse/ampere/fusega10x.c"     ,
                             "fuse/ada/fusead10x.c"        , ],
    },

    ACR =>
    {
        DESCRIPTION     => "Access Control Region Engine",
        DEFAULT_STATE   => DISABLED,
        PROFILES        => [ 'pmu-gm2*', 'pmu-gp*', 'pmu-gv*', 'pmu-ga1*b*', 'pmu-ga10f_riscv', 'pmu-ad10b_riscv', ],
        SRCFILES        => [ "acr/lw/acr_rpc.c"                    ,
                             "acr/lw/pmu_acr.c"                    ,
                             "acr/maxwell/pmu_acrgm20xgp10x_only.c",
                             "acr/maxwell/pmu_acrgm20x.c"          ,
                             "acr/pascal/pmu_acrgp10xgv10x_only.c" ,
                             "acr/pascal/pmu_acrgp100.c"           ,
                             "acr/pascal/pmu_acrgp10x.c"           ,
                             "acr/volta/pmu_acrgv10x.c"            ,
                             "acr/ampere/pmu_acrga10b_only.c"      , ],
    },

    LSF =>
    {
        DESCRIPTION     => "Light Secure Falcon Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "lsf/lw/pmu_objlsf.c"            ,
                             "lsf/maxwell/pmu_lsfgm20x.c"     ,
                             "lsf/maxwell/pmu_lsfgm20x_only.c",
                             "lsf/pascal/pmu_lsfgp100_only.c" ,
                             "lsf/pascal/pmu_lsfgp10X.c"      ,
                             "lsf/volta/pmu_lsfgv11x.c"       ,
                             "lsf/ampere/pmu_lsfga100.c"      ,
                             "lsf/ampere/pmu_lsfga10x.c"      , ],
    },

    VOLT =>
    {
        DESCRIPTION     => "VOLT Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ ALL, ],
        SRCFILES        => [ "volt/lw/objvolt.c" ,
                             "volt/lw/volt_rpc.c",
                             "volt/turing/volttesttu10x.c",
                             "volt/ampere/volttestga10x.c",
                             "volt/ampere/voltga10x.c",
                             "volt/ada/voltad10x.c",
                             "volt/hopper/volttestgh100.c", ],
    },

    BIF =>
    {
        DESCRIPTION     => "BIF Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ dTURING_and_later, ],
        SRCFILES        => [ "bif/lw/objbif.c"                   ,
                             "bif/lw/bif_rpc.c"                  ,
                             "bif/turing/biftu10x.c"             ,
                             "bif/turing/biftu10xga100.c"        ,
                             "bif/turing/biftu10xga10x.c"        ,
                             "bif/turing/lwlinktu10x.c"          ,
                             "bif/turing/xusbtu10x.c"            ,
                             "bif/turing/lanemargining_tu10x.c"  ,
                             "bif/ampere/lanemargining_ga100.c"  ,
                             "bif/ampere/lwlinkga100.c"          ,
                             "bif/ampere/bifga100.c"             ,
                             "bif/ampere/bifga10x.c"             ,
                             "bif/ampere/bifga10x_only.c"        ,
                             "bif/hopper/bifgh100.c"             ,
                             "bif/hopper/lanemargining_gh100.c"  , ],
    },

    PERF_CF =>
    {
        DESCRIPTION     => "PERF_CF Engine",
        DEFAULT_STATE   => DISABLED,
        CHIPS_SUPPORTED => [ dTURING_and_later, ],
        SRCFILES        => [ "perf/lw/cf/perf_cf_rpc.c",
                             "perf/ampere/perf_cf_ga10x.c",  ],
    },

    MUTEX =>
    {
        DESCRIPTION     => "HW mutex Engine",
        DEFAULT_STATE   => ENABLED,
        PROFILES        => [ 'pmu-*', ],
        SRCFILES        => [ "mutex/lw/pmu_objmutex.c"       ,
                             "mutex/fermi/pmu_mutexgf10x.c"  ,
                             "mutex/maxwell/pmu_mutexgm20x.c",
                             "mutex/pascal/pmu_mutexgp100.c" ,
                             "mutex/pascal/pmu_mutexgp10x.c" , ],
    },

    VBIOS =>
    {
        DESCRIPTION     => "VBIOS Engine",
        DEFAULT_STATE   => DISABLED,
        SRCFILES        => [ "vbios/lw/objvbios.c"              ,
                             "vbios/lw/vbios_dirt.c"            ,
                             "vbios/lw/vbios_frts.c"            ,
                             "vbios/lw/vbios_frts_access_dma.c" ,
                             "vbios/lw/vbios_frts_cert30.c"     ,
                             "vbios/lw/vbios_ied.c"             ,
                             "vbios/lw/vbios_image.c"           ,
                             "vbios/lw/vbios_opcodes.c"         ,
                             "vbios/lw/vbios_sku.c"             ,
                             "vbios/pascal/pmu_vbiosgp10x.c"    ,
                             "vbios/turing/pmu_vbiostu10x.c"    ,
                             "vbios/ampere/vbios_frts_ga10x.c"  , ],
    },

    LWLINK =>
    {
        DESCRIPTION     => "LWLINK Engine",
        DEFAULT_STATE   => ENABLED,
        SRCFILES        => [ "lwlink/pascal/pmu_lwlinkgp100.c",
                             "lwlink/volta/pmu_lwlinkgv10x.c" ,
                             "cmdmgmt/lw/cmdmgmt_lwlink.c"    , ],
    },

    NNE =>
    {
        DESCRIPTION     => "Neural Net Engine",
        DEFAULT_STATE   => DISABLED,
        PROFILES        => [ 'pmu-ga10x_riscv...', '-pmu-ga1*b*', '-pmu-ga10f_riscv', '-pmu-ad10b_riscv', ],
        SRCFILES        => [ "nne/lw/objnne.c" ,
                             "nne/lw/nne_rpc.c",
                             "nne/lw/nne_desc_ram.c",
                             "nne/lw/nne_swzl_ram.c",
                             "nne/lw/nne_parm_ram.c",
                             "nne/lw/nne_weight_ram.c",
                             "nne/lw/nne_sync.c",
                             "nne/ampere/nnega10x.c", ],
    },

    VGPU =>
    {
        DESCRIPTION     => "VGPU Engine",
        DEFAULT_STATE   => DISABLED,
        PROFILES        => [ 'pmu-ga10x_riscv', ],
        SRCFILES        => [ "vgpu/ampere/pmu_vgpuga10x.c",
                             "cmdmgmt/lw/cmdmgmt_vgpu.c", ],
    },

];

# Create the item group
sub new {

    @_ == 1 or croak 'usage: obj->new()';

    my $type = shift;

    my $self = Groups->new("engine", $enginesRef);

    return bless $self, $type;
}

# end of the module
1;
