####################################################################
#
# Config file for ACR profiles
#
####################################################################

no warnings qw(bareword);
no strict qw(subs);

# Profile definitions.
# Each profile is made up of one or more categories which are exelwted
# in the order the category *definition* appears below.

#
# Define profiles for each supported chip-family.  Each profile specifies the
# features that are supported in that family which in turn dictates the source
# files which must be built and included in the image.
#

DEFINE_PROFILE "acr_rv_gsp-gh100", qw(default acr_rv_gsp-gh100 wrap);
DEFINE_PROFILE "acr_rv_gsp-gh100_fmodel", qw(default acr_rv_gsp-gh100_fmodel wrap);
DEFINE_PROFILE "acr_rv_gsp-gh100_gsprm", qw(default acr_rv_gsp-gh100_gsprm wrap);

#Default profile if not specified on command line with --profile.
DEFAULT_PROFILE "acr_rv_gsp-gh100";

# XXX - not used
CATEGORY "minimal";
{
    # omit features, classes, engines, apis that require unavailable gpu's
    MINIMAL_MODE      ON;
}

CATEGORY "default";
{
    # All default enabled features, engines, classes, apis
    ENABLE_FEATURES   ALL_DEFAULT_ENABLED;
    ENABLE_ENGINES    ALL_DEFAULT_ENABLED;
    ENABLE_CLASSES    ALL_DEFAULT_ENABLED;
    ENABLE_APIS       ALL_DEFAULT_ENABLED;

    # set platform, arch.   for now just always use these.
    ENABLE_FEATURES   PLATFORM_ACR;

    # Disable all GPUS preparatory to having a specific set enabled
    DISABLE_CHIPS       ( ALL );
}

CATEGORY "acr_rv_gsp-gh100";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }
    ENABLE_FEATURES(
        GSPRM_PROXY_BOOT
    );
    DISABLE_FEATURES(
        GSPRM_BOOT
    );
}

CATEGORY "acr_rv_gsp-gh100_fmodel";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }
    ENABLE_FEATURES(
        GSPRM_PROXY_BOOT
    );
    DISABLE_FEATURES(
        GSPRM_BOOT
    );
}

CATEGORY "acr_rv_gsp-gh100_gsprm";
{
    # If elwvar ACRCFG_GPUS is set, then use that, else default
    if ($ELW{ACRCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{ACRCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }
    ENABLE_FEATURES(
        GSPRM_BOOT
    );
    DISABLE_FEATURES(
        GSPRM_PROXY_BOOT
    );
}

# Look in the environment and our -D args for any special cases.
CATEGORY "wrap";
{
    1;        # must not be empty block
}

1;
