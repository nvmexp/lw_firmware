####################################################################
#
# Config file for gsp-config.
#

no warnings qw(bareword);
no strict qw(subs);

# shipping GPU's for *this* branch
# Ideally, all platforms will use the same list for a given branch.
# my @BRANCH_DEFAULT_SHIPPING_GPUS = ( GM20X, );

# devel GPUS's for *this* branch - gpu's a developer should typically build.
# May be different from BRANCH_DEFAULT_SHIPPING_GPUS for some branches.
# my @BRANCH_DEFAULT_DEVEL_GPUS    = ( @BRANCH_DEFAULT_SHIPPING_GPUS, );

# obsolete GPU's for *this* branch - will generally be omitted from all builds
# Ideally, all platforms will use the same list for a given branch.
# my @BRANCH_DEFAULT_OBSOLETE_GPUS = ( pre_GM20X );

# Profile definitions.
# Each profile is made up of one or more categories which are exelwted
# in the order the category *definition* appears below.

#
# Define profiles for each supported chip-family.  Each profile specifies the
# features that are supported in that family which in turn dictacts the source
# files which must be built and included in the image.
#
DEFINE_PROFILE "gsp-ga10x",             qw(default gsp-ga10x            wrap);
DEFINE_PROFILE "gsp-t23xd",             qw(default gsp-t23xd            wrap);
DEFINE_PROFILE "gsp-gh100",             qw(default gsp-gh100            wrap);

# Default profile if not specified on command line with --profile.
DEFAULT_PROFILE "gsp-tu10x";

CATEGORY "default";
{
    # All default enabled features, engines, classes, apis
    ENABLE_FEATURES   ALL_DEFAULT_ENABLED;
    ENABLE_ENGINES    ALL_DEFAULT_ENABLED;

    # disable features and engines when they are not supported by any GPUs
    MINIMAL_MODE      ON;

    # Disable all GPUS preparatory to having a specific set enabled
    DISABLE_CHIPS       ( ALL );
}

CATEGORY "gsp-ga10x";
{
    # If elwvar GSPCFG_GPUS is set, then use that, else default
    if ($ELW{GSPCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{GSPCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA102);
    }

}

CATEGORY "gsp-t23xd";
{
    # If elwvar GSPCFG_GPUS is set, then use that, else default
    if ($ELW{GSPCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{GSPCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T234D);
    }

    ENABLE_ENGINES      (DIO);
}

CATEGORY "gsp-gh100";
{
    # If elwvar GSPCFG_GPUS is set, then use that, else default
    if ($ELW{GSPCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{GSPCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }

    DISABLE_FEATURES    (GSPTASK_DISPLAY);
}

# Look in the environment and our -D args for any special cases.
CATEGORY "wrap";
{
    1;        # must not be empty block
}

1;
