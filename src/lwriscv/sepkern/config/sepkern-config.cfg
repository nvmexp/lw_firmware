####################################################################
#
# Config file for riscvlib-config -- shared chip-config client for
# lwriscv libraries
#

no warnings qw(bareword);
no strict qw(subs);

#
# Profile definitions.
# Each profile is made up of one or more categories which are exelwted
# in the order the category *definition* appears below.
#

# Profiles for separation kernel
DEFINE_PROFILE "gsp_sepkern-ga10x"   , qw(default sepkern sepkern-ga10x  wrap);
DEFINE_PROFILE "gsp_sepkern-t23xd"   , qw(default sepkern sepkern-t23xd  wrap);
DEFINE_PROFILE "gsp_sepkern-gh100"   , qw(default sepkern sepkern-gh100  wrap);
DEFINE_PROFILE "pmu_sepkern-ga10x"   , qw(default sepkern sepkern-ga10x  wrap);
DEFINE_PROFILE "pmu_sepkern-ga10b"   , qw(default sepkern sepkern-ga10b  wrap);
DEFINE_PROFILE "pmu_sepkern-ad10x"   , qw(default sepkern sepkern-ad10x  wrap);
DEFINE_PROFILE "pmu_sepkern-ad10b"   , qw(default sepkern sepkern-ad10b  wrap);
DEFINE_PROFILE "pmu_sepkern-gh100"   , qw(default sepkern sepkern-gh100  wrap);
DEFINE_PROFILE "pmu_sepkern-gh20x"   , qw(default sepkern sepkern-gh20x  wrap);
DEFINE_PROFILE "pmu_sepkern-gb100"   , qw(default sepkern sepkern-gb100  wrap);
DEFINE_PROFILE "pmu_sepkern-g00x"    , qw(default sepkern sepkern-g00x   wrap);
DEFINE_PROFILE "sec_sepkern-gh100"   , qw(default sepkern sepkern-gh100  wrap);

# Default profile if not specified on command line with --profile.
DEFAULT_PROFILE "gsp_sepkern-ga10x";


CATEGORY "default";
{
    # All default enabled features, engines, classes, apis
    ENABLE_FEATURES   ALL_DEFAULT_ENABLED;
    ENABLE_MODULES    ALL_DEFAULT_ENABLED;

    # omit features, classes, engines, apis that require unavailable gpu's
    MINIMAL_MODE      ON;

    # Disable all GPUS preparatory to having a specific set enabled
    DISABLE_CHIPS       ( ALL );
}

CATEGORY "sepkern";
{
    ENABLE_FEATURES(RISCV_SEPKERN);
    ENABLE_MODULES(SEPKERN);
}

CATEGORY "sepkern-ga10x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA10X);
    }

    ENABLE_CHIPS(GA10X);
}

CATEGORY "sepkern-ga10b";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA10B);
    }

    ENABLE_CHIPS(GA10B);
}

CATEGORY "sepkern-t23xd";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T234D);
    }

    ENABLE_CHIPS(T234D);
}

CATEGORY "sepkern-ad10x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (AD10X);
    }

    ENABLE_CHIPS(AD10X);
}

CATEGORY "sepkern-ad10b";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (AD10B);
    }

    ENABLE_CHIPS(AD10B);
}

CATEGORY "sepkern-gh100";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }

    ENABLE_CHIPS(GH100);
}

CATEGORY "sepkern-gh20x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH20X);
    }

    ENABLE_CHIPS(GH20X);
}

CATEGORY "sepkern-gb100";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GB100);
    }

    ENABLE_CHIPS(GB100);
}

CATEGORY "sepkern-g00x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (G00X);
    }

    ENABLE_CHIPS(G00X);
}

# Look in the environment and our -D args for any special cases.
CATEGORY "wrap";
{
    1;        # must not be empty block
}

1;
