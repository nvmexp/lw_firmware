####################################################################
#
# Config file for riscvlib-config -- shared chip-config client for
# lwriscv libraries
#

no warnings qw(bareword);
no strict qw(subs);

#
# Profile definitions.
# Each profile is made up of one or more categories which are exelwted
# in the order the category *definition* appears below.
#

# Profiles for shlib
DEFINE_PROFILE "shlib-ga10x" , qw(default shlib shlib-ga10x  wrap);
DEFINE_PROFILE "shlib-ga10b" , qw(default shlib shlib-ga10b  wrap);
DEFINE_PROFILE "shlib-ga10f" , qw(default shlib shlib-ga10f  wrap);
DEFINE_PROFILE "shlib-ga11b" , qw(default shlib shlib-ga11b  wrap);
DEFINE_PROFILE "shlib-t23xd" , qw(default shlib shlib-t23xd  wrap);
DEFINE_PROFILE "shlib-ad10x" , qw(default shlib shlib-ad10x  wrap);
DEFINE_PROFILE "shlib-ad10b" , qw(default shlib shlib-ad10b  wrap);
DEFINE_PROFILE "shlib-gh100" , qw(default shlib shlib-gh100  wrap);
DEFINE_PROFILE "shlib-gh20x" , qw(default shlib shlib-gh20x  wrap);
DEFINE_PROFILE "shlib-gb100" , qw(default shlib shlib-gb100  wrap);
DEFINE_PROFILE "shlib-g00x"  , qw(default shlib shlib-g00x   wrap);
DEFINE_PROFILE "shlib-ls10"  , qw(default shlib shlib-ls10   wrap);

CATEGORY "default";
{
    # All default enabled features, engines, classes, apis
    ENABLE_FEATURES   ALL_DEFAULT_ENABLED;
    ENABLE_MODULES    ALL_DEFAULT_ENABLED;

    # omit features, classes, engines, apis that require unavailable gpu's
    MINIMAL_MODE      ON;

    # Disable all GPUS preparatory to having a specific set enabled
    DISABLE_CHIPS       ( ALL );
}

CATEGORY "shlib";
{
    ENABLE_FEATURES(RISCV_SHLIB);
    ENABLE_MODULES(SHLIB);
}

CATEGORY "shlib-ga10x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA102);
    }

    ENABLE_CHIPS(GA102);
}

CATEGORY "shlib-ga10b";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA10B);
    }

    ENABLE_CHIPS(GA10B);
}

CATEGORY "shlib-ga10f";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA10F);
    }

    ENABLE_CHIPS(GA10F);
}

CATEGORY "shlib-ga11b";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA11B);
    }

    ENABLE_CHIPS(GA11B);
}

CATEGORY "shlib-t23xd";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T234D);
    }

    ENABLE_CHIPS(T234D);
}

CATEGORY "shlib-ad10x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (AD102);
    }

    ENABLE_CHIPS(AD102);
}

CATEGORY "shlib-ad10b";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (AD10B);
    }

    ENABLE_CHIPS(AD10B);
}

CATEGORY "shlib-gh100";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }

    ENABLE_CHIPS(GH100);
}

CATEGORY "shlib-gh20x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH20X);
    }

    ENABLE_CHIPS(GH20X);
}

CATEGORY "shlib-gb100";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GB100);
    }

    ENABLE_CHIPS(GB100);
}

CATEGORY "shlib-g00x";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (G00X);
    }

    ENABLE_CHIPS(G00X);
}

CATEGORY "shlib-ls10";
{
    # If elwvar RISCVLIBCFG_GPUS is set, then use that, else default
    if ($ELW{RISCVLIBCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{RISCVLIBCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GH100);
    }

    ENABLE_CHIPS(GH100);
}

# Look in the environment and our -D args for any special cases.
CATEGORY "wrap";
{
    1;        # must not be empty block
}

1;
