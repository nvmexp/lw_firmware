LIBLWRISCV_ROOT ?= .
LWRISCVX_SDK_ROOT ?= $(LIBLWRISCV_ROOT)/..
LIBLWRISCV_OUT ?= _out
LW_TOOLS ?= /home/mkulikowski/p4-tools/sw/tools
QUIET ?= 0

LIBLWRISCV_CONFIGS := $(LIBLWRISCV_ROOT)/configs
LIBLWRISCV_SRC := $(LIBLWRISCV_ROOT)/src
LIBLWRISCV_INC := $(LIBLWRISCV_ROOT)/inc
LIBLWRISCV_BUILD := $(LIBLWRISCV_ROOT)/build

ifeq ($(LIBLWRISCV_PROFILE_FILE),)
    $(error Set LIBLWRISCV_PROFILE_FILE variable before exelwting)
else
    LIBLWRISCV_PROFILE := $(notdir $(LIBLWRISCV_PROFILE_FILE))
    $(info Using profile file. Guessing profile name to be $(LIBLWRISCV_PROFILE))
endif

include $(LWRISCVX_SDK_ROOT)/build/build_elw.mk

# include default configuration
include $(LIBLWRISCV_CONFIGS)/defaults.mk

include $(LIBLWRISCV_PROFILE_FILE)

# Sanity check on configuration
include $(LIBLWRISCV_BUILD)/checkconfig.mk

# Build configs
LIBLWRISCV_PROFILE_DIR:=$(LIBLWRISCV_PROFILE)_$(LWRISCV_IS_CHIP)_$(LWRISCV_IS_ENGINE)
LIBLWRISCV_BUILD_DIR?=$(LIBLWRISCV_OUT)/$(LIBLWRISCV_PROFILE_DIR)
LIBLWRISCV_CONFIG_H:=$(LIBLWRISCV_BUILD_DIR)/g_lwriscv_config.h
LIBLWRISCV_CONFIG_MK:=$(LIBLWRISCV_BUILD_DIR)/g_lwriscv_config.mk
LIBLWRISCV_INSTALL_DIR ?= $(LIBLWRISCV_BUILD_DIR)/staging

# Libc - submake deps
LIBC_ROOT := $(LWRISCVX_SDK_ROOT)/libc
LIBC_BUILD_DIR := $(LIBLWRISCV_BUILD_DIR)/libc
LIBC_INSTALL_DIR := $(LIBLWRISCV_INSTALL_DIR)

# include dirs
INCLUDES += $(LIBLWRISCV_INC) $(LIBLWRISCV_BUILD_DIR)
INCLUDES += $(LWRISCVX_SDK_ROOT)/inc $(LWRISCVX_SDK_ROOT)/inc/lwpu-sdk
INCLUDES += $(LIBC_ROOT)/inc

# Path mangling for deterministic builds
EXTRA_CFLAGS += -ffile-prefix-map=$(realpath $(LWRISCVX_SDK_ROOT))=.
EXTRA_CFLAGS += -ffile-prefix-map=$(realpath $(LW_TOOLS))=.
EXTRA_CFLAGS += $(addprefix -I,$(INCLUDES))

# MK TODO: We must do it to handle hw manuals :(
EXTRA_CFLAGS += -Wno-error=sign-colwersion

EXTRA_ASFLAGS += $(addprefix -I,$(INCLUDES))

# Source build flags after we setup manuals / chip, EXTRA_CFLAGS, EXTRA_LDFLAGS and EXTRA_ASFLAGS
include $(LWRISCVX_SDK_ROOT)/build/build_flags.mk

TARGET := $(LIBLWRISCV_BUILD_DIR)/liblwriscv.a

# Inlude sources
SRC:=
# Add liblwriscv sources
src-y:=
subdirs-y:=
include $(LIBLWRISCV_SRC)/sources.mk
SRC := $(addprefix $(LIBLWRISCV_SRC)/,$(src-y))
SRC_DIRS:= $(sort $(dir $(SRC)))
$(info SRC: $(src-y)) 
$(info SUBDIRS: $(subdirs-y)) 

# Make sure no two files have the same name
ifneq ($(words $(basename $(notdir $(SRC)))), $(words $(sort $(basename $(notdir $(SRC))))))
$(error Liblwriscv source file names are not unique. Fix that.)
endif

OBJS:= 
DEPS:=
DEPFLAGS = -MT $@ -MMD -MP -MF $@.d
# generate rule for files, assume unique files only
define add-file =
$(2): $(1) $(LIBLWRISCV_CONFIG_H) | $(LIBLWRISCV_BUILD_DIR)
	$$(ECHOQ) $(if $(filter %.c,$(1)),CC,AS) $(1)
	$$(CC) $(if $(filter %.c,$(1)),$$(CFLAGS) $$(DEPFLAGS),$$(ASFLAGS)) -c $(1) -o $$@

OBJS += $(2)
DEPS += $(if $(filter %.c,$(1),$(addsuffix .d,$(2))),)
endef

$(foreach c,$(SRC),$(eval $(call add-file,$(c),$(LIBLWRISCV_BUILD_DIR)/$(basename $(notdir $(c))).o)))

vpath %.c $(SRC_DIRS)
vpath %.S $(SRC_DIRS)

# prepare configuration
LIBLWRISCV_CONFIG_VARS:= $(filter LWRISCV_%,$(.VARIABLES))

.DEFAULT_GOAL:= $(TARGET)

# PRINT HELLO
$(info ========================================================================)
$(info ==================           LWRISCV           =========================)
$(info Profile:            $(LIBLWRISCV_PROFILE))
$(info Chip configuration: $(LWRISCV_IS_CHIP_FAMILY) $(LWRISCV_IS_CHIP) $(LWRISCV_IS_ENGINE))
$(info RISC-V mode:        $(LWRISCV_CONFIG_CPU_MODE))
$(info Output directory:   $(LIBLWRISCV_BUILD_DIR))
$(info Using manuals:      $(LW_ENGINE_MANUALS))
$(info ========================================================================)

$(TARGET): $(OBJS) build_libc
	$(ECHOQ) AR $(TARGET)
	$(AR) rsD $(TARGET) $(OBJS) $(wildcard $(LIBC_BUILD_DIR)/*.o)

.PHONY: build_libc install_libc_headers
build_libc:
	$(MAKE) -f $(LIBC_ROOT)/Makefile LWRISCV_HAS_ABI=$(LWRISCV_HAS_ABI) LWRISCV_HAS_ARCH=$(LWRISCV_HAS_ARCH) LIBC_ROOT=$(LIBC_ROOT) LIBC_INSTALL_DIR=$(LIBC_INSTALL_DIR) LIBC_BUILD_DIR=$(LIBC_BUILD_DIR)

install_libc_headers:
	$(MAKE) -f $(LIBC_ROOT)/Makefile LWRISCV_HAS_ABI=$(LWRISCV_HAS_ABI) LWRISCV_HAS_ARCH=$(LWRISCV_HAS_ARCH) LIBC_ROOT=$(LIBC_ROOT) LIBC_INSTALL_DIR=$(LIBC_INSTALL_DIR) install_headers

%.o: $(LIBLWRISCV_CONFIG_H)

.SECONDARY: $(LIBLWRISCV_CONFIG_H)
$(LIBLWRISCV_CONFIG_H): $(wildcard $(LIBLWRISCV_CONFIGS)/*.mk) $(wildcard $(LIBLWRISCV_BUILD)/*.mk) Makefile | $(LIBLWRISCV_BUILD_DIR)
	$(ECHO) -e Generating config header
	$(ECHO) -e MK TODO: config generation is really ugly, should be done other way
	$(ECHO) -e "/* * * *AUTOGENERATED - DO NOT EDIT * * *" > $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e " * liblwriscv was compiled with the following configuration:"  >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e " * Profile:            $(LIBLWRISCV_PROFILE)" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e " * Chip configuration: $(LWRISCV_IS_CHIP_FAMILY) $(LWRISCV_IS_CHIP) $(LWRISCV_IS_ENGINE)" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e " * RISC-V mode:        $(LWRISCV_CONFIG_CPU_MODE)" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e " */" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e "#ifndef LIBLWRISCV_CONFIG_H\n#define LIBLWRISCV_CONFIG_H\n" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e $(foreach var,$(sort $(LIBLWRISCV_CONFIG_VARS)),"#define $(var) $($(var))\n") | $(SED) -e 's/ n$$/ 0/g' -e 's/ y$$/ 1/g' -e 's/^ //g' -e 's/ \([^0-9][^ ]*$$\)/_\1 1/g' >> $(LIBLWRISCV_CONFIG_H)
ifneq ($(findstring rv32,$(LWRISCV_HAS_ARCH)),)
	$(ECHO) -e "#define LWRISCV32_MANUAL_CSR \"$(LWRISCV32_MANUAL_CSR)\"" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e "#define LWRISCV32_MANUAL_ADDRESS_MAP \"$(LWRISCV32_MANUAL_ADDRESS_MAP)\"" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e "#define LWRISCV32_MANUAL_LOCAL_IO \"$(LWRISCV32_MANUAL_LOCAL_IO)\"" >> $(LIBLWRISCV_CONFIG_H)
else
	$(ECHO) -e "#define LWRISCV64_MANUAL_CSR \"$(LWRISCV64_MANUAL_CSR)\"" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e "#define LWRISCV64_MANUAL_ADDRESS_MAP \"$(LWRISCV64_MANUAL_ADDRESS_MAP)\"" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e "#define LWRISCV64_MANUAL_LOCAL_IO \"$(LWRISCV64_MANUAL_LOCAL_IO)\"" >> $(LIBLWRISCV_CONFIG_H)
endif
	$(ECHO) -e "#endif" >> $(LIBLWRISCV_CONFIG_H)
	$(ECHO) -e Generatig config mk
	$(ECHO) -e MK TODO: config generation is really ugly, should be done other way
	$(ECHO) -e $(foreach var,$(sort $(LIBLWRISCV_CONFIG_VARS)),"$(var):=$($(var))\n") > $(LIBLWRISCV_CONFIG_MK)

$(LIBLWRISCV_BUILD_DIR):
	$(MKDIR) -p $(LIBLWRISCV_BUILD_DIR)

config: $(LIBLWRISCV_CONFIG_H)

clean:
	$(RM) -f $(LIBLWRISCV_CONFIG_H) $(OBJS) $(TARGET) $(DEPS)
	
# MK TODO: this is haxxed (rsync)
install: $(TARGET) install_libc_headers
	$(INSTALL) -d $(LIBLWRISCV_INSTALL_DIR)
	$(INSTALL) -d $(LIBLWRISCV_INSTALL_DIR)/inc/liblwriscv
	$(INSTALL) -d $(LIBLWRISCV_INSTALL_DIR)/lib
	$(INSTALL) -t $(LIBLWRISCV_INSTALL_DIR)/lib $(TARGET)
	$(INSTALL) -m 644 -t $(LIBLWRISCV_INSTALL_DIR)/inc/liblwriscv $(LIBLWRISCV_CONFIG_H)
	$(INSTALL) -m 644 -t $(LIBLWRISCV_INSTALL_DIR)/ $(LIBLWRISCV_CONFIG_MK)
	$(RSYNC) -rlv --chmod=u=rwX $(LIBLWRISCV_INC)/ $(LIBLWRISCV_INSTALL_DIR)/inc

# MK TODO: clean dirs
$(DEPS):

-include $(DEPS)
