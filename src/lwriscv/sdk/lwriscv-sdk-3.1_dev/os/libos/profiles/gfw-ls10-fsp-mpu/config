LIBOS_DEBUG=0

# DISABLED
LIBOS_FEATURE_PAGING=0
LIBOS_FEATURE_PARTITION_SWITCH=1
LIBOS_FEATURE_SHUTDOWN=1
LIBOS_CONFIG_PROFILER=0
LIBOS_CONFIG_PROFILER_SAVE_ON_SUSPEND=0
LIBOS_CONFIG_EXTERNAL_INTERRUPT=1
LIBOS_CONFIG_INTEGRITY_MEMERR=0
LIBOS_FEATURE_USERSPACE_TRAPS=0
LIBOS_FEATURE_TIMERS=1

# Turn on priority based scheduling
LIBOS_FEATURE_PRIORITY_SCHEDULER=1
LIBOS_TIMESLICE=5000000

#
# LIBOS uses MUSLC's printf() routines.  Our tiny profile
# removes padding, positional arguments and half-integer types.
# Size is < 512 bytes.
#
LIBOS_CONFIG_PRINTF_TINY=1

# Enable kernel prints through DEBUGINFO register
LIBOS_CONFIG_KERNEL_LOG=0
LIBOS_CONFIG_KERNEL_TRACE=0

LIBOS_LWRISCV=200
LIBOS_CONFIG_RISCV_S_MODE=1
LIBOS_CONFIG_HAS_FBIO=0

LIBOS_CONFIG_IMEM_SIZE=0x37000
LIBOS_CONFIG_DMEM_SIZE=0x27000

LIBOS_CONFIG_IMEM_FIRST=0x101000
LIBOS_CONFIG_DMEM_FIRST=0x181000

LIBOS_CONFIG_MPU_INDEX_FIRST=0
LIBOS_CONFIG_MPU_INDEX_COUNT=128
LIBOS_CONFIG_MPU_PAGESIZE=1024

# Set the kernel stack size (stored in the DMEM page)
# This value is validated across all paths through
# the LIBOS configuration by the unit-tests through
# the stack-depth runtime instrumentation.
#LIBOS_CONFIG_KERNEL_STACK_SIZE=512

# Use large kernel stack to allow for kernel_trace
LIBOS_CONFIG_KERNEL_STACK_SIZE=1024

# LIBOS will map the pri address space at this address
LIBOS_CONFIG_PRI_MAPPING_BASE=0x300000000
LIBOS_CONFIG_PRI_MAPPING_RANGE=0x2000000

LIBOS_CONFIG_PRINTF_UNICODE=0

LIBOS_CONFIG_FLOAT=0
LIBOS_CONFIG_RISCV_COMPRESSED=1
LIBOS_CONFIG_LTO=0

LIBOS_CONFIG_MAX_TABLE_DISPLACEMENT=2

# LIBOS ID's may be 1 or 4 bytes
LIBOS_CONFIG_ID_SIZE=1

LIBOS_CONFIG_TIME_TO_NS(time)=time
LIBOS_CONFIG_TIME_NS(time)=time
