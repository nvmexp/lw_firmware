project Separation_Kernel is
   for Create_Missing_Dirs use "True";

   type Chip_Type is ("ga10x", "ad10x");
   Chip : Chip_Type := external ("Chip", "ga10x");

   type Engine_Type is ("gsp", "pmu");
   Engine : Engine_Type := external ("Engine", "pmu");

   -- LW_SOURCE expected as elw var, or locally modisy the default value which is set to ""
   LW_SOURCE := external("LW_SOURCE", "");

   Common_Sources := ("./src", "./src/common", "./src/error_handling", "./src/hwref/ga102", "./src/intf", "./src/sbi", "./src/separation_kernel",
                      "./src/start", "./src/trap", "./src/types", "./src/dbgctl", LW_SOURCE & "/drivers/common/inc/hwref/ampere/ga102");

   Engine_Sources := ();
   case Engine is
      when "gsp" =>
         Engine_Sources := ("./src/intf/gsp", "./src/separation_kernel/gsp");
      when "pmu" =>
         Engine_Sources := ("./src/intf/pmu", "./src/separation_kernel/pmu");
   end case;

   for Source_Dirs use Common_Sources & Engine_Sources;

   IMEM_START_ADDRESS := external("IMEM_START_ADDRESS", "0x0000000000100000");
   DMEM_START_ADDRESS := external("DMEM_START_ADDRESS", "0x0000000000180000");

   IMEM_LIMIT := external("IMEM_LIMIT", "0x800");
   DMEM_LIMIT := external("DMEM_LIMIT", "0x400");

   for Object_Dir use "obj/" & Engine & "_" & Chip;
   for Main use ("./src/start/sk_init.adb");
   for Target use "riscv64-elf";
   for Runtime ("ada") use "zfp-spike";
   for Languages use ("Ada", "Asm_Cpp");

    -- The following scenario variable might seem like an unused one but that is not the case. There is a case
    -- statement in runtime.xml located at <GNAT_INSTALL>/riscv64-elf/lib/gnat/zfp-spike/ which picks
    -- the default linker scripts when Loader variable is "RAM". We just need to set it to "USER"
   type Loaders is ("RAM", "USER");
   Loader : Loaders := external ("LOADER", "USER");

   package Builder is
      for Global_Configuration_Pragmas use "./config/global_config_pragmas.adc";
      for Global_Compilation_Switches ("ada") use ("-gnateT=" & project'Project_Dir & "./config/riscv64.atp");
   end Builder;

   package Compiler is
      for Local_Configuration_Pragmas use "./config/local_config_pragmas.adc";
      for Default_Switches ("Ada") use (
                                        -- Debug options, don't open these unless you are debugging the code
                                        --"-save-temps", -- Store the normally temporary intermediate files( *.s, *.i, *.o) permanently.
                                        --"-fno-inline", -- Suppresses all back-end inlining, the gnatn and gnatN takes no effect
                                        --"-gnatR", -- Show representation of every object.
                                        --"-gnatG", -- The compiler generates a low-level version of the source program in an Ada-like format.
                                        --"-g", -- Debug symbol
                                        "-fcallgraph-info=su,da", -- Make the compiler output callgraph information on a per file basis.

                                        -- Normal options, shall be always enabled
                                        "-Os",
                                        "-ffunction-sections", "-fdata-sections",  -- Allocate individial sections for each function and data
                                        "-fno-jump-tables", "-fno-tree-switch-colwersion", -- Eliminate rodata for case-when statement
                                        "-gnat12", -- Ada 2012 features enabled
                                        "-gnato", -- Equivalent to -gnato11, causing all intermediate overflows to be handled in strict mode.
                                        "-gnatn2", -- Frontend Inline

                                        --Gnat styles control
                                        "-gnatyB", -- Check boolean operators to force short circuit given the C background everyone has
                                        "-gnatyM180", -- 180 columns permitted.
                                        "-gnatye", -- Ensure that end/exit have labels
                                        "-gnatyf", -- No form feeds or vertical tabs
                                        "-gnatyh", -- No horizontal tabs
                                        "-gnatyi", -- Enforce standardization on if-then layout
                                        "-gnatyI", -- Do not use "in" mode KW
                                        "-gnatyk", -- All keywords must be in lower case
                                        "-gnatyl", -- Check layout
                                        "-gnatyL6", -- Max 6 level deep nesting
                                        "-gnatyn", -- Check casing of entities in Standard
                                        "-gnatyO", -- Check that overriding subprograms are explicitly marked as such
                                        "-gnatyp", -- Check pragma casing
                                        "-gnatyr", -- All identifier references must be cased in the same way as the corresponding declaration
                                        "-gnatyx", -- Avoid unnecessary parentheses
                                        "-gnatyS"); -- Check no statements after then/else

   end Compiler;

   package Linker is
      for Default_Switches ("ada") use ("-Wl,--gc-sections",
                                        "-nostdlib",
                                        "-nostartfiles",
                                        "-T", "separation_kernel.ld",
                                        "-Wl,-M",
                                        "-Wl,--cref",
                                        "-Wl,-Map=link.log",
                                        "-Wl,--defsym=_IMEM_LIMIT=" & IMEM_LIMIT,
                                        "-Wl,--defsym=_DMEM_LIMIT=" & DMEM_LIMIT,
                                        "-Wl,--defsym=_IMEM_START_ADDRESS=" & IMEM_START_ADDRESS,
                                        "-Wl,--defsym=_DMEM_START_ADDRESS=" & DMEM_START_ADDRESS
                                       );
   end Linker;

   package Binder is
      for Default_Switches ("ada") use ("-minimal");
   end Binder;

   package Stack is
      for Switches use ("Object_Dir/**");
   end Stack;

end Separation_Kernel;

