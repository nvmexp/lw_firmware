####################################################################
#
# Config file for hdcp22wired-config.
#

no warnings qw(bareword);
no strict qw(subs);

#
# Profile definitions.
# Each profile is made up of one or more categories which are exelwted
# in the order the category *definition* appears below.
#

#
# Define profiles for each supported chip-family.  Each profile specifies the
# features that are supported in that family which in turn dictacts the source
# files which must be built and included in the image.
#
DEFINE_PROFILE "hdcp22wired-v0205" , qw(default hdcp22wired hdcp22wired-v0205  wrap);
DEFINE_PROFILE "hdcp22wired-v0207" , qw(default hdcp22wired hdcp22wired-v0207  wrap);
DEFINE_PROFILE "hdcp22wired-v0300" , qw(default hdcp22wired hdcp22wired-v0300  wrap);
DEFINE_PROFILE "hdcp22wired-v0400" , qw(default hdcp22wired hdcp22wired-v0400  wrap);
DEFINE_PROFILE "hdcp22wired-v0401" , qw(default hdcp22wired hdcp22wired-v0401  wrap);
DEFINE_PROFILE "hdcp22wired-v0402" , qw(default hdcp22wired hdcp22wired-v0402  wrap);

# Default profile if not specified on command line with --profile.
DEFAULT_PROFILE "hdcp22wired-v0205";

# XXX - not used
CATEGORY "minimal";
{
    # omit features, classes, engines, apis that require unavailable gpu's
    MINIMAL_MODE      ON;
}

CATEGORY "default";
{
    # All default enabled features, engines, classes, apis
    ENABLE_FEATURES   ALL_DEFAULT_ENABLED;
    ENABLE_MODULES    ALL_DEFAULT_ENABLED;

    # Disable all GPUS preparatory to having a specific set enabled
    DISABLE_CHIPS       ( ALL );
}

CATEGORY "hdcp22wired";
{
    ENABLE_FEATURES   ARCH_FALCON;
    ENABLE_MODULES    HDCP22WIRED;
}

CATEGORY "hdcp22wired-v0205";
{
    # If elwvar HDCP22WIREDCFG_GPUS is set, then use that, else default
    if ($ELW{HDCP22WIREDCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{HDCP22WIREDCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GM200);
    }
    ENABLE_FEATURES(
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "hdcp22wired-v0207";
{
    # If elwvar HDCP22WIREDCFG_GPUS is set, then use that, else default
    if ($ELW{HDCP22WIREDCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{HDCP22WIREDCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GP100);
    }
    ENABLE_FEATURES(
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "hdcp22wired-v0300";
{
    # If elwvar HDCP22WIREDCFG_GPUS is set, then use that, else default
    if ($ELW{HDCP22WIREDCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{HDCP22WIREDCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GV100);
    }
    ENABLE_FEATURES(
        HDCP22WIRED_OS_CALLBACK_CENTRALISED,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "hdcp22wired-v0400";
{
    # If elwvar HDCP22WIREDCFG_GPUS is set, then use that, else default
    if ($ELW{HDCP22WIREDCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{HDCP22WIREDCFG_GPUS};
    } else {
        ENABLE_CHIPS    (TU102);
    }
    ENABLE_FEATURES(
        HDCP22WIRED_OS_CALLBACK_CENTRALISED,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "hdcp22wired-v0401";
{
    # If elwvar HDCP22WIREDCFG_GPUS is set, then use that, else default
    if ($ELW{HDCP22WIREDCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{HDCP22WIREDCFG_GPUS};
    } else {
        ENABLE_CHIPS    (GA102);
    }
    ENABLE_FEATURES(
        HDCP22WIRED_OS_CALLBACK_CENTRALISED,
    );
    DISABLE_FEATURES(
    );
}

CATEGORY "hdcp22wired-v0402";
{
    # If elwvar HDCP22WIREDCFG_GPUS is set, then use that, else default
    if ($ELW{HDCP22WIREDCFG_GPUS}) {
        ENABLE_CHIPS    $ELW{HDCP22WIREDCFG_GPUS};
    } else {
        ENABLE_CHIPS    (T234D);
    }
    ENABLE_FEATURES(
        HDCP22WIRED_OS_CALLBACK_CENTRALISED,
    );
    DISABLE_FEATURES(
    );
}

# Look in the environment and our -D args for any special cases.
CATEGORY "wrap";
{
    1;        # must not be empty block
}

1;
