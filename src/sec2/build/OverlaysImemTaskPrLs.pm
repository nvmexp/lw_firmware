
my $imemOverlaysTaskPrLs =
[
    #
    # As first LS overlay defined, this overlay must start on 256-byte aligned address
    #
    PRPREENTRYGDKLS =>
    {
        NAME           => 'prPreEntryGdkLs',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.prPreAllocMemory' ],
            ['*.o'       , '.text.prFreePreAllocMemory' ],
            ['*.o'       , '.text.prLoadLassahsImemOverlays' ],
            ['*.o'       , '.text.prLoadLassahsDmemOverlays' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRPREENTRYGDKLS_44 =>
    {
        NAME           => 'prPreEntryGdkLs_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.prPreAllocMemory' ],
            ['*.o'       , '.text.prFreePreAllocMemory' ],
            ['*.o'       , '.text.prLoadLassahsImemOverlays' ],
            ['*.o'       , '.text.prLoadLassahsDmemOverlays' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRPOSTEXITGDKLS =>
    {
        NAME           => 'prPostExitGdkLs',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRPOSTEXITGDKLS_44 =>
    {
        NAME           => 'prPostExitGdkLs_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRGDKLS1 =>
    {
        NAME           => 'prGdkLs1',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_LPROV_GenerateDeviceKeys' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_FreeKeyArray' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyAES128' ],
            ['*.o'       , '.text.DRM_TEE_KB_FinalizePPKB' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyPPKB' ],
            ['*.o'       , '.text._CryptoData_UnwrapKeys' ],
            ['*.o'       , '.text.prRevalidateImemBlocks' ],
            ['*.o'       , '.text.prUnloadOverlaysIlwalidatedDuringLassahs' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRGDKLS1_44 =>
    {
        NAME           => 'prGdkLs1_44',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_LPROV_GenerateDeviceKeys' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_FreeKeyArray' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyAES128' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_FinalizePPKB' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyPPKB' ],
            ['*.o'       , '.text._CryptoData_UnwrapKeys' ],
            ['*.o'       , '.text.prRevalidateImemBlocks' ],
            ['*.o'       , '.text.prUnloadOverlaysIlwalidatedDuringLassahs' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRGDKLS2 =>
    {
        NAME           => 'prGdkLs2',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.prPreAllocMemory' ],
            ['*.o'       , '.text.prFreePreAllocMemory' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EcbEncryptData' ],
            ['*.o'       , '.text.prLoadLassahsImemOverlays' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Init' ],
            ['*.o'       , '.text.prLoadLassahsDmemOverlays' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Update' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Update' ],
            ['*.o'       , '.text.DRM_SHA256_Update' ],
            ['*.o'       , '.text.DRM_SHA256_UpdateOffset' ],
            ['*.o'       , '.text._SHA256_Transform' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Finalize' ],
            ['*.o'       , '.text._GenerateCertHash' ],
            ['*.o'       , '.text._SignCertTemplate' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_GetTemplateModelCertificatePrivateSigningKey' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_ECDSA_Sign' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SHA256_Sign' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SignHash' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256Impl_LWIDIA' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsModOrderImpl' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AES128ECB_EncryptData' ],
            ['*.o'       , '.text.divide' ],
            ['*.o'       , '.text.mp_extend' ],
            ['*.o'       , '.text.divide_immediate' ],
            ['*.o'       , '.text.div21' ],
            ['*.o'       , '.text.divide_precondition_1' ],
            ['*.o'       , '.text.div21_fast' ],
            ['*.o'       , '.text.estimated_quotient_1' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_GetDeviceCertTemplate' ],
            ['*.o'       , '.text.prGetDeviceCertTemplate' ],
            ['*.o'       , '.text.prGetSL150DeviceCertTemplate_*' ],
            ['*.o'       , '.text.prGetSL3000DeviceCertTemplate_*' ],
            ['*.o'       , '.text.add_same' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Oem_Aes_EcbEncryptData' ],
            ['*.o'       , '.text.DRMCRT_LocalDWORDSetZero' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocateKeyArray' ],
            ['*.o'       , '.text._GenerateNewECCKeys' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.DRM_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenKeyPairPriv' ],
            ['*.o'       , '.text._AllocCryptoContext' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256Impl_LWIDIA' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackImpl' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackOEMCtxImpl' ],
            ['*.o'       , '.text.new_random_mod_nonzero' ],
            ['*.o'       , '.text.compare_immediate' ],
            ['*.o'       , '.text.compare_diff' ],
            ['*.o'       , '.text.random_mod' ],
            ['*.o'       , '.text.random_digits' ],
            ['*.o'       , '.text.random_bytes' ],
            ['*.o'       , '.text.Oem_Broker_Random_GetBytes' ],
            ['*.o'       , '.text.random_digit_interval' ],
            ['*.o'       , '.text.significant_bit_count' ],
            ['*.o'       , '.text.compare_same' ],
            ['*.o'       , '.text.significant_digit_count' ],
            ['*.o'       , '.text.seInitAndAcquireMutex' ],
            ['*.o'       , '.text.seECPointMult' ],
            ['*.o'       , '.text.seMutexReleaseSEMutex' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text.Colwert_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text._FreeCryptoContext' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetAppSpecificHWID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetDeviceUniqueID' ],
            ['*.o'       , '.text.seECDSASignHash' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Finalize' ],
            ['*.o'       , '.text.OEM_TEE_PROV_GenerateRandomECC256KeyPair' ],
            ['*.o'       , '.text.delwmulate' ],
            ['*.o'       , '.text.DRM_SHA256_Finalize' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRGDKLS2_44 =>
    {
        NAME           => 'prGdkLs2_44',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EcbEncryptData' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Update' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Update' ],
            ['*.o'       , '.text.OEM_SHA256_Update' ],
            ['*.o'       , '.text.OEM_SHA256_UpdateOffset' ],
            ['*.o'       , '.text._SHA256_Transform' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Finalize' ],
            ['*.o'       , '.text._GenerateCertHash' ],
            ['*.o'       , '.text._SignCertTemplate' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_GetTemplateModelCertificatePrivateSigningKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECDSA_P256_SignData' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SHA256_Sign' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SignHash' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256Impl_LWIDIA' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsModOrderImpl' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AES128ECB_EncryptData' ],
            ['*.o'       , '.text.divide' ],
            ['*.o'       , '.text.mp_extend' ],
            ['*.o'       , '.text.divide_immediate' ],
            ['*.o'       , '.text.div21' ],
            ['*.o'       , '.text.divide_precondition_1' ],
            ['*.o'       , '.text.div21_fast' ],
            ['*.o'       , '.text.estimated_quotient_1' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_GetDeviceCertTemplate' ],
            ['*.o'       , '.text.prGetDeviceCertTemplate' ],
            ['*.o'       , '.text.prGetSL150DeviceCertTemplate_*' ],
            ['*.o'       , '.text.prGetSL3000DeviceCertTemplate_*' ],
            ['*.o'       , '.text.add_same' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Oem_Aes_EcbEncryptData' ],
            ['*.o'       , '.text.DRMCRT_LocalDWORDSetZero' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocateKeyArray' ],
            ['*.o'       , '.text._GenerateNewECCKeys' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.OEM_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenKeyPairPriv' ],
            ['*.o'       , '.text._AllocCryptoContext' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256Impl_LWIDIA' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackImpl' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackOEMCtxImpl' ],
            ['*.o'       , '.text.new_random_mod_nonzero' ],
            ['*.o'       , '.text.compare_immediate' ],
            ['*.o'       , '.text.compare_diff' ],
            ['*.o'       , '.text.random_mod' ],
            ['*.o'       , '.text.random_digits' ],
            ['*.o'       , '.text.random_bytes' ],
            ['*.o'       , '.text.Oem_Broker_Random_GetBytes' ],
            ['*.o'       , '.text.random_digit_interval' ],
            ['*.o'       , '.text.significant_bit_count' ],
            ['*.o'       , '.text.compare_same' ],
            ['*.o'       , '.text.significant_digit_count' ],
            ['*.o'       , '.text.seECPointMult' ],
            ['*.o'       , '.text.seMutexReleaseSEMutex' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text.Colwert_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text._FreeCryptoContext' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetAppSpecificHWID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetDeviceUniqueID' ],
            ['*.o'       , '.text.seECDSASignHash' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Finalize' ],
            ['*.o'       , '.text.OEM_TEE_PROV_GenerateRandomECC256KeyPair' ],
            ['*.o'       , '.text.delwmulate' ],
            ['*.o'       , '.text.OEM_SHA256_Finalize' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRGDKLS3 =>
    {
        NAME           => 'prGdkLs3',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.prVerifySelwreMode_*' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyWithReconstitution' ],
            ['*.o'       , '.text._KBWithSignature_Parse' ],
            ['*.o'       , '.text.DRM_XB_UnpackBinary' ],
            ['*.o'       , '.text.DRM_XB_UnpackHeader' ],
            ['*.o'       , '.text._DRM_XB_Parse_Object' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORD' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUID' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORDLIST' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text._DRM_XB_Parse_BYTEARRAY' ],
            ['*.o'       , '.text._DRM_XB_Parse_Container' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._DRM_XB_Parse_Unknown' ],
            ['*.o'       , '.text._XB_IsObjectTypeAChildOf' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UNKNOWN_OBJECT' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownObject' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._XB_CreateNewListItem' ],
            ['*.o'       , '.text._DRM_XB_CheckForContainerFillPatern' ],
            ['*.o'       , '.text._DRM_XB_GetMaxContainerDepth' ],
            ['*.o'       , '.text.DRM_XB_FindObject' ],
            ['*.o'       , '.text._XB_FindChild' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetCTKID' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_DeriveTKDFromTK' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_IsKBTypePersistedToDisk' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetKeyDerivationIDSign' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetKeyDerivationIDEncrypt' ],
            ['*.o'       , '.text.OEM_TEE_BASE_VerifyOMAC1Signature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Verify' ],
            ['*.o'       , '.text.Oem_Omac1_Verify' ],
            ['*.o'       , '.text.DRMCRT_LocalAreEqual' ],
            ['*.o'       , '.text._RemapTEEFormatError' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapECC256KeyFromPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_UnwrapKey128' ],
            ['*.o'       , '.text.Oem_Broker_Aes_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromPersistedStorage' ],
            ['*.o'       , '.text._UnwrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromTransientStorage' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRGDKLS3_44 =>
    {
        NAME           => 'prGdkLs3_44',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyWithReconstitution' ],
            ['*.o'       , '.text._KBWithSignature_Parse' ],
            ['*.o'       , '.text.DRM_XB_UnpackBinary' ],
            ['*.o'       , '.text.DRM_XB_UnpackHeader' ],
            ['*.o'       , '.text._DRM_XB_Parse_Object' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORD' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUID' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORDLIST' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text._DRM_XB_Parse_BYTEARRAY' ],
            ['*.o'       , '.text._DRM_XB_Parse_Container' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._DRM_XB_Parse_Unknown' ],
            ['*.o'       , '.text._XB_IsObjectTypeAChildOf' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UNKNOWN_OBJECT' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownObject' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._XB_CreateNewListItem' ],
            ['*.o'       , '.text._DRM_XB_CheckForContainerFillPatern' ],
            ['*.o'       , '.text._DRM_XB_GetMaxContainerDepth' ],
            ['*.o'       , '.text.DRM_XB_FindObject' ],
            ['*.o'       , '.text._XB_FindChild' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetCTKID' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_DeriveTKDFromTK' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_IsKBTypePersistedToDisk' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetKeyDerivationIDSign' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetKeyDerivationIDEncrypt' ],
            ['*.o'       , '.text.OEM_TEE_BASE_VerifyOMAC1Signature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Verify' ],
            ['*.o'       , '.text.Oem_Omac1_Verify' ],
            ['*.o'       , '.text.DRMCRT_LocalAreEqual' ],
            ['*.o'       , '.text._RemapTEEFormatError' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapECC256KeyFromPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_UnwrapKey128' ],
            ['*.o'       , '.text.Oem_Broker_Aes_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromPersistedStorage' ],
            ['*.o'       , '.text._UnwrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromTransientStorage' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRGDKLS4 =>
    {
        NAME           => 'prGdkLs4',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.asm' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Hw_Aes_LWIDIA' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.osSecHSLoadSignature' ],
            ['*.o'       , '.text.osSecHSJumpOverlayStart' ],
            ['*.o'       , '.text._sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.Oem_Broker_Aes_EncryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text._EncryptDecryptOneBlock_HS_LS' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomAES128Key' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildPPKB' ],
            ['*.o'       , '.text._CryptoData_WrapKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapECC256KeyForPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_WrapKey128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForPersistedStorage' ],
            ['*.o'       , '.text._WrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_KB_Build' ],
            ['*.o'       , '.text._KBWithSignature_Start' ],
            ['*.o'       , '.text.DRM_XB_StartFormatFromStack' ],
            ['*.o'       , '.text.DRM_XB_AddEntry' ],
            ['*.o'       , '.text._DRM_XB_AddContainer' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownObjects' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownObject' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetBuilderNode' ],
            ['*.o'       , '.text._DRM_XB_IsNativeObject' ],
            ['*.o'       , '.text._XB_AddHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetParent' ],
            ['*.o'       , '.text._DRM_XB_AddEstimatedAlignmentSize' ],
            ['*.o'       , '.text._DRM_XB_IsDuplicateAllowed' ],
            ['*.o'       , '.text._InsertNodeInChildListSorted' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_GetObjectLength' ],
            ['*.o'       , '.text._DRM_XB_GetElementLength' ],
            ['*.o'       , '.text._DRM_XB_GetDwordListLength' ],
            ['*.o'       , '.text._DRM_XB_GetByteArrayLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructListLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructLength' ],
            ['*.o'       , '.text._KBWithSignature_Finish' ],
            ['*.o'       , '.text.DRM_XB_FinishFormat' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Object' ],
            ['*.o'       , '.text._DRM_XB_Serialize_ElementList' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUID' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BYTEARRAY' ],
            ['*.o'       , '.text.DRM_DWordToWord' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Container' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BaseObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownBaseObject' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignWithOMAC1' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Sign' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocBlobAndTakeOwnership' ],
            ['*.o'       , '.text.DRM_TEE_BASE_TransferBlobOwnership' ],
            ['*.o'       , '.text.DRM_TEE_BASE_FreeBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemHandleFree' ],
            ['*.o'       , '.text._OEM_TEE_BASE_SelwreMemHandleFreeSlot' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text._OEM_TEE_BASE_PageSharedData' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_FreeDeviceCertTemplate' ],
            ['*.o'       , '.text.prGetSharedDataRegionDetails_*' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRGDKLS4_44 =>
    {
        NAME           => 'prGdkLs4_44',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.asm' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomAES128Key' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildPPKB' ],
            ['*.o'       , '.text._CryptoData_WrapKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapECC256KeyForPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_WrapKey128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForPersistedStorage' ],
            ['*.o'       , '.text._WrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_Build' ],
            ['*.o'       , '.text._KBWithSignature_Start' ],
            ['*.o'       , '.text.DRM_XB_StartFormatFromStack' ],
            ['*.o'       , '.text.DRM_XB_AddEntry' ],
            ['*.o'       , '.text._DRM_XB_AddContainer' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownObjects' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownObject' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetBuilderNode' ],
            ['*.o'       , '.text._DRM_XB_IsNativeObject' ],
            ['*.o'       , '.text._DRM_XB_AddHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetParent' ],
            ['*.o'       , '.text._DRM_XB_AddEstimatedAlignmentSize' ],
            ['*.o'       , '.text._DRM_XB_IsDuplicateAllowed' ],
            ['*.o'       , '.text._InsertNodeInChildListSorted' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_GetObjectLength' ],
            ['*.o'       , '.text._DRM_XB_GetElementLength' ],
            ['*.o'       , '.text._DRM_XB_GetDwordListLength' ],
            ['*.o'       , '.text._DRM_XB_GetByteArrayLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructListLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructLength' ],
            ['*.o'       , '.text._KBWithSignature_Finish' ],
            ['*.o'       , '.text.DRM_XB_FinishFormat' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Object' ],
            ['*.o'       , '.text._DRM_XB_Serialize_ElementList' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUID' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BYTEARRAY' ],
            ['*.o'       , '.text.DRM_DWordToWord' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Container' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BaseObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownBaseObject' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignWithOMAC1' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Sign' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocBlobAndTakeOwnership' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_TransferBlobOwnership' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_FreeBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemHandleFree' ],
            ['*.o'       , '.text._OEM_TEE_BASE_SelwreMemHandleFreeSlot' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text._OEM_TEE_BASE_PageSharedData' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_FreeDeviceCertTemplate' ],
            ['*.o'       , '.text.prGetSharedDataRegionDetails_*' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRGDKLS5 =>
    {
        NAME           => 'prGdkLs5',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.asm' ],
            ['*.o'       , '.text.DRM_TEE_BASE_AllocBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_AllocKey' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomBytes' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_RANDOM_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Hw_Aes_LWIDIA' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.osSecHSLoadSignature' ],
            ['*.o'       , '.text.osSecHSJumpOverlayStart' ],
            ['*.o'       , '.text._sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.Oem_Broker_Aes_EncryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text._EncryptDecryptOneBlock_HS_LS' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_HsCommonEntryWrapper' ],
            ['*.o'       , '.text.OEM_TEE_FlcnStatusToDrmStatus' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRGDKLS5_44 =>
    {
        NAME           => 'prGdkLs5_44',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.asm' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_AllocKey' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomBytes' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_RANDOM_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.osSecHSLoadSignature' ],
            ['*.o'       , '.text.osSecHSJumpOverlayStart' ],
            ['*.o'       , '.text._sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.Oem_Broker_Aes_EncryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text._EncryptDecryptOneBlock_HS_LS' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_HsCommonEntryWrapper' ],
            ['*.o'       , '.text.OEM_TEE_FlcnStatusToDrmStatus' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PRGDKLS6 =>
    {
        NAME           => 'prGdkLs6',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyECC256' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PRGDKLS6_44 =>
    {
        NAME           => 'prGdkLs6_44',
        LS_SIG_GROUP   => 1,
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyECC256' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    #
    # This PR overlay is shared between 3.0 and 4.4 as is it used for task creation.
    #
    PR =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.task_pr' ],
            ['*.o'       , '.text.prHandleMessage' ],
            ['*.o'       , '.text.prGetLwrrentTime' ],
            ['*.o'       , '.text.prGetElapsedTime' ],
            ['*.o'       , '.text.prHandleImemMiss' ],
            ['*.o'       , '.text.prInitAutoLoadStructs' ],
            ['*.o'       , '.text._prHandleImemMiss' ],
            ['*.o'       , '.text.prUnloadAllOverlays' ],
            ['*.o'       , '.text.prGetOvlPropFromId' ],
            ['*.o'       , '.text.prGetOvlPropFromPc' ],
            ['*.o'       , '.text.prOverlayFindTotalAvailableBlocks' ],
            ['*.o'       , '.text.prLoadOverlay' ],
            ['*.o'       , '.text.*prIsLwdecInLsMode_*' ],
            ['*.o'       , '.text.prUnloadOverlay' ],
            ['*.o'       , '.text.prIssueDma' ],
            ['*.o'       , '.text.printsig' ],
            ['*.o'       , '.text.printAllSigs' ],
            ['*.o'       , '.text.prLoadUnloadDataOvl' ],
            ['*.o'       , '.text.prLoadUnloadSharedData' ],
            ['*.o'       , '.text.prLoadUnloadHmrData' ],
            ['*.o'       , '.text.prLoadUnloadMthdData' ],
            ['*.o'       , '.text.prvInsertBlockIntoFreeList' ],
            ['*.o'       , '.text.pvPortMalloc' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.prvHeapInit' ],
            ['*.o'       , '.text.getHeapSizeAndOffset' ],
            ['*.o'       , '.ovlcmn*' ],
            ['*.o'       , '.text.startup.main' ],
            ['*.o'       , '.text.DRM_TEE_AES128CTR_IMPL_IsAES128CTRSupported' ],
            ['*.o'       , '.text._SupportedInBaseLibrary' ],
            ['*.o'       , '.text.DRM_TEE_DOM_IMPL_IsDOMSupported' ],
            ['*.o'       , '.text.DRM_TEE_H264_IMPL_IsH264Supported' ],
            ['*.o'       , '.text.DRM_TEE_LICPREP_IMPL_IsLICPREPSupported' ],
            ['*.o'       , '.text.DRM_TEE_LPROV_IMPL_IsLPROVSupported' ],
            ['*.o'       , '.text.DRM_TEE_PRNDRX_IMPL_IsPRNDRXSupported' ],
            ['*.o'       , '.text.DRM_TEE_PRNDTX_IMPL_IsPRNDTXSupported' ],
            ['*.o'       , '.text.DRM_TEE_REVOCATION_IMPL_IsREVOCATIONSupported' ],
            ['*.o'       , '.text.DRM_TEE_RPROV_IMPL_IsRPROVSupported' ],
            ['*.o'       , '.text.DRM_TEE_SAMPLEPROT_IMPL_IsSAMPLEPROTSupported' ],
            ['*.o'       , '.text.DRM_TEE_SELWRESTOP_IMPL_IsSELWRESTOPSupported' ],
            ['*.o'       , '.text.DRM_TEE_SIGN_IMPL_IsSIGNSupported' ],
            ['*.o'       , '.text.DRM_TEE_LICGEN_IMPL_IsLICGENSupported' ],
            ['*.o'       , '.text.falcon_puts' ],
            ['*.o'       , '.text.falc_printf' ],
            ['*.o'       , '.text.skip_atoi' ],
            ['*.o'       , '.text.number' ],
            ['*.o'       , '.text.strnlen' ],
            ['*.o'       , '.text.vsnprintf' ],
            ['*.o'       , '.text.vsprintf' ],
            ['*.o'       , '.text.memcpy' ],
            ['*.o'       , '.text.prIsSharedStructInitialized_*' ],
            ['*.o'       , '.text.OEM_TEE_InitSharedDataStruct' ],
            ['*.o'       , '.text.prBar0WaitIdle' ],
            ['*.o'       , '.text.prReadBar0' ],
            ['*.o'       , '.text.prWriteBar0' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.ComputeDmhash_LS' ],
            ['*.o'       , '.text._LW_CryptoData_SignOrVerify' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_TEE_STUB_HandleMethodRequest' ],
            ['*.o'       , '.text.__builtin_expect' ],
            ['*.o'       , '.text.startup.main' ],
        ],

        ENABLED_ON     => [ GP10X_and_later, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', ],
    },

    PR1 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text._LShift.constprop.*' ],
            ['*.o'       , '.text._KBWithSignature_Finish.constprop.*' ],
            ['*.o'       , '.text.DRM_TEE_STUB_FreeParameters' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text.DRMCRT_LocalAreEqual' ],
            ['*.o'       , '.text.DRM_TEE_BASE_MemFree' ],
            ['*.o'       , '.text.DRM_TEE_BASE_MemAlloc' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text._RemoveEntry' ],
            ['*.o'       , '.text._AddEntry' ],
            ['*.o'       , '.text.DRM_TEE_BASE_AllocBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyAES128' ],
            ['*.o'       , '.text.IsBlobAssigned' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR1_44 =>
    {
        NAME           => 'pr1_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text._LShift.constprop.*' ],
            ['*.o'       , '.text._KBWithSignature_Finish.constprop.*' ],
            ['*.o'       , '.text.DRM_TEE_STUB_FreeParameters' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text.DRMCRT_LocalAreEqual' ],
            ['*.o'       , '.text._VerifyRevocationDataSigningPubKeyAgainstWhitelist' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_MemFree' ],
            ['*.o'       , '.text.DRM_TEE_BASE_MemAlloc' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text.DRM_WordMult' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AES128_SetKey' ],
            ['*.o'       , '.text._RemoveEntry' ],
            ['*.o'       , '.text._AddEntry' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyAES128' ],
            ['*.o'       , '.text.IsBlobAssigned' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR2 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text._prProcessMethod' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalAreEqual' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyAES128' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyRKB' ],
            ['*.o'       , '.text.DRM_TEE_AES128CTR_CreateOEMBlobFromCDKB' ],
            ['*.o'       , '.text.DRM_TEE_KB_FreeCDKBCryptoDataRestrictionArray' ],
            ['*.o'       , '.text.DRM_TEE_SAMPLEPROT_PrepareSampleProtectionKey' ],
            ['*.o'       , '.text.notifyExelwteCompleted' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR2_44  =>
    {
        NAME           => 'pr2_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text._prProcessMethod' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemFree' ],
            ['*.o'       , '.text.DRMCRT_LocalAreEqual' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeKeyAES128' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyRKB' ],
            ['*.o'       , '.text.DRM_TEE_DECRYPT_CreateOEMBlobFromCDKB' ],
            ['*.o'       , '.text.DRM_TEE_KB_FreeCDKBCryptoDataRestrictionArray' ],
            ['*.o'       , '.text.DRM_TEE_SAMPLEPROT_PrepareSampleProtectionKey' ],
            ['*.o'       , '.text.notifyExelwteCompleted' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_LICPREP_DecryptScalableLicenseKeyFromKeyMaterial' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR3 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.prVerifySelwreMode_GP10X' ],
            ['*.o'       , '.text.dmaTransfer' ],
            ['*.o'       , '.text.DRM_TEE_STUB_InitParameters' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEECtxFromXBTEECtx' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEECtxFromBytes' ],
            ['*.o'       , '.text.DRM_TEE_CACHE_ReferenceContext' ],
            ['*.o'       , '.text._FindEntry' ],
            ['*.o'       , '.text.DRM_TEE_STUB_ReadParameters' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEEBlobFromXBBlob' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEEDwordListFromXBDwordList' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEEQwordListFromXBQwordList' ],
            ['*.o'       , '.text.DRM_TEE_AES128CTR_PrepareToDecrypt' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_RemapRequestedDecryptionModeToSupportedDecryptionMode' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifySPKB' ],
            ['*.o'       , '.text._ParseLicenseChain' ],
            ['*.o'       , '.text._ValidateLicenseEncryptionType' ],
            ['*.o'       , '.text._ValidateLicenseChain' ],
            ['*.o'       , '.text._DecryptScalableLicenseKey' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_InitUplinkXKey' ],
            ['*.o'       , '.text._CallwlateKeys_Derived' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_CallwlateContentKeyPrimeWithAES128Key' ],
            ['*.o'       , '.text._CalcOneDerivedKey' ],
            ['*.o'       , '.text._FindNextAuxEntry' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_DeriveScalableKeyWithAES128Key' ],
            ['*.o'       , '.text._TryDeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_UpdateUplinkXKey' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_DecryptContentKeysWithDerivedKeys' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_VerifyLicenseChecksum' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_DecryptContentKeysWithLicenseKey' ],
            ['*.o'       , '.text._ValidateExtensibleRestrictionObjects' ],
            ['*.o'       , '.text._ValidateExtensibleRestrictionContainers' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CopyKeyAES128' ],
            ['*.o'       , '.text._ParseLicenseChainSelwrityLevel' ],
            ['*.o'       , '.text._ValidateDecryptionMode' ],
            ['*.o'       , '.text.DRM_TEE_SAMPLEPROT_IMPL_IsDecryptionModeSupported' ],
            ['*.o'       , '.text._ParseLicensePolicies' ],
            ['*.o'       , '.text._ParseLicenseChainExpiration' ],
            ['*.o'       , '.text._ParseLicenseChainRealTimeExpirationPresent' ],
            ['*.o'       , '.text._ParseLicenseChainOutputProtectionLevels' ],
            ['*.o'       , '.text._ParseLicensePlayEnablers' ],
            ['*.o'       , '.text._ParseLicenseRestrictions' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_EnforcePolicy' ],
            ['*.o'       , '.text.sec2Bar0RegRd32_GM20X' ],
            ['*.o'       , '.text.vPortEnterCritical' ],
            ['*.o'       , '.text._sec2Bar0RegRd32_GM20X' ],
            ['*.o'       , '.text._sec2Bar0WaitIdle_GM20X' ],
            ['*.o'       , '.text.vPortExitCritical' ],
            ['*.o'       , '.text.sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text._sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildCDKB' ],
            ['*.o'       , '.text._FreeLicenseChain' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR3_44  =>
    {
        NAME           => 'pr3_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.prVerifySelwreMode_GP10X' ],
            ['*.o'       , '.text.dmaTransfer' ],
            ['*.o'       , '.text.DRM_TEE_STUB_InitParameters' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEECtxFromXBTEECtx' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEECtxFromBytes' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_CACHE_ReferenceContext' ],
            ['*.o'       , '.text._FindEntry' ],
            ['*.o'       , '.text.DRM_TEE_STUB_ReadParameters' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEEBlobFromXBBlob' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEEDwordListFromXBDwordList' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEEQwordListFromXBQwordList' ],
            ['*.o'       , '.text.DRM_TEE_DECRYPT_PrepareToDecrypt' ],
            ['*.o'       , '.text._AddFixedPolicyAndBuildCDKB' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_RemapRequestedDecryptionModeToSupportedDecryptionMode' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifySPKB' ],
            ['*.o'       , '.text._ParseLicenseChain' ],
            ['*.o'       , '.text._ValidateLicenseEncryptionType' ],
            ['*.o'       , '.text._ValidateLicenseChain' ],
            ['*.o'       , '.text._DecryptScalableLicenseKey' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_InitUplinkXKey' ],
            ['*.o'       , '.text._CallwlateKeys_Derived' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_CallwlateContentKeyPrimeWithAES128Key' ],
            ['*.o'       , '.text._CalcOneDerivedKey' ],
            ['*.o'       , '.text._FindNextAuxEntry' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_DeriveScalableKeyWithAES128Key' ],
            ['*.o'       , '.text._TryDeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_UpdateUplinkXKey' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_DecryptContentKeysWithDerivedKeys' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_VerifyLicenseChecksum' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_DecryptContentKeysWithLicenseKey' ],
            ['*.o'       , '.text._ValidateExtensibleRestrictionObjects' ],
            ['*.o'       , '.text._ValidateExtensibleRestrictionContainers' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CopyKeyAES128' ],
            ['*.o'       , '.text._ParseLicenseChainSelwrityLevel' ],
            ['*.o'       , '.text._ValidateDecryptionMode' ],
            ['*.o'       , '.text._ParseLicensePolicies' ],
            ['*.o'       , '.text._ParseLicenseChainExpiration' ],
            ['*.o'       , '.text._ParseLicenseChainRealTimeExpirationPresent' ],
            ['*.o'       , '.text._ParseLicenseChainOutputProtectionLevels' ],
            ['*.o'       , '.text._ParseLicensePlayEnablers' ],
            ['*.o'       , '.text._ParseLicenseRestrictions' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_DECRYPT_EnforcePolicy' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_EnforcePolicy' ],
            ['*.o'       , '.text.sec2Bar0RegRd32_GM20X' ],
            ['*.o'       , '.text.vPortEnterCritical' ],
            ['*.o'       , '.text._sec2Bar0RegRd32_GM20X' ],
            ['*.o'       , '.text._sec2Bar0WaitIdle_GM20X' ],
            ['*.o'       , '.text.vPortExitCritical' ],
            ['*.o'       , '.text.sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text._sec2Bar0RegWr32NonPosted_GM20X' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildCDKB' ],
            ['*.o'       , '.text._FreeLicenseChain' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SAMPLEPROT_IsDecryptionModeSupported' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR4 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyCDKB' ],
            ['*.o'       , '.text._KB_ParseCDKBCryptoData' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_BuildExternalPolicyCryptoInfo' ],
            ['*.o'       , '.text._LW_CryptoData_SignOrVerify' ],
            ['*.o'       , '.text.ComputeDmhash_LS' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR4_44  =>
    {
        NAME           => 'pr4_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_IMPL_DOM_IsDOMSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_H264_IsH264Supported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_LICPREP_IsLICPREPSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_LPROV_IsLPROVSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_REVOCATION_IsREVOCATIONSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_RPROV_IsRPROVSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SAMPLEPROT_IsSAMPLEPROTSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SELWRESTOP_IsSELWRESTOPSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SIGN_IsSIGNSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_LICGEN_IsLICGENSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SELWRESTOP2_IsSELWRESTOP2Supported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_AES128CTR_IsAES128CTRSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_DECRYPT_ParseAndVerifyCDKB' ],
            ['*.o'       , '.text._KB_ParseCDKBCryptoData' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_BuildExternalPolicyCryptoInfo' ],
            ['*.o'       , '.text._LW_CryptoData_SignOrVerify' ],
            ['*.o'       , '.text.ComputeDmhash_LS' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_AES128CBC_IsAES128CBCSupported' ],
            ['*.o'       , '.text.ComputeDmhash_LS' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR5 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_BASE_SignDataWithSelwreStoreKey' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyPPKB' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_LocateKeyInPPKBWeakRef' ],
            ['*.o'       , '.text.DRM_TEE_BASE_CheckDeviceKeys' ],
            ['*.o'       , '.text.DRM_TEE_BASE_AllocTEEContext' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocTEEContext' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeTEEContext' ],
            ['*.o'       , '.text._ParseApplicationInfo' ],
            ['*.o'       , '.text._ValidateAndInitializeSystemInfo' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetVersionInformation' ],
            ['*.o'       , '.text.prGetTeeVersionInfo_*' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetAppSpecificHWID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetDeviceUniqueID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AES128ECB_EncryptData' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetPKVersion' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetVersion' ],
            ['*.o'       , '.text.DRM_TEE_BASE_FreeTEEContext' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GetDebugInformation' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GenerateNonce' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_SelwreClockNeedsReSync' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildNKB' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GetSystemTime' ],
            ['*.o'       , '.text.DRM_TEE_DOM_PackageKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECC256_Decrypt_AES128Keys' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_Decrypt' ],
            ['*.o'       , '.text.OEM_ECC_Decrypt_P256' ],
            ['*.o'       , '.text.OEM_ECC_Decrypt_P256Impl' ],
            ['*.o'       , '.text.Colwert_P256_PointToPlaintextImpl' ],
            ['*.o'       , '.text._TEE_DOM_ParsePrivateKey' ],
            ['*.o'       , '.text.OEM_TEE_DOM_DecryptDomainKeyWithSessionKeys' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_SetKey' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildDKB' ],
            ['*.o'       , '.text.DRM_TEE_LICPREP_PackageKey' ],
            ['*.o'       , '.text._VerifyInMemoryLicenseNonce' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyNKB' ],
            ['*.o'       , '.text.DRM_NONCE_VerifyNonce' ],
            ['*.o'       , '.text.DRM_UTL_IncrementID' ],
            ['*.o'       , '.text.DRM_TEE_LICGEN_IMPL_IsLICGENSupported' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyDKB' ],
            ['*.o'       , '.text.OEM_TEE_AES128CTR_UnshuffleScalableContentKeys' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildLKB' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_GetDeviceCertTemplate' ],
            ['*.o'       , '.text._GenerateNewECCKeys' ],
            ['*.o'       , '.text.OEM_TEE_PROV_GenerateRandomECC256KeyPair' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenKeyPairPriv' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256Impl' ],
            ['*.o'       , '.text._GenerateCertHash' ],
            ['*.o'       , '.text._SignCertTemplate' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_GetTemplateModelCertificatePrivateSigningKey' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_ECDSA_Sign' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SHA256_Sign' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SignHash' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256Impl' ],
            ['*.o'       , '.text.DRM_TEE_KB_FinalizePPKB' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildPPKB' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_FreeDeviceCertTemplate' ],
            ['*.o'       , '.text.DRM_TEE_SIGN_SignHash' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignHashWithDeviceSigningKey' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR5_44  =>
    {
        NAME           => 'pr5_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_BASE_SignDataWithSelwreStoreKey' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyPPKB' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_LocateKeyInPPKBWeakRef' ],
            ['*.o'       , '.text.DRM_TEE_BASE_CheckDeviceKeys' ],
            ['*.o'       , '.text.DRM_TEE_BASE_AllocTEEContext' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocTEEContext' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_DECRYPT_IsDECRYPTSupported' ],
            ['*.o'       , '.text.OEM_TEE_BASE_FreeTEEContext' ],
            ['*.o'       , '.text._ParseApplicationInfo' ],
            ['*.o'       , '.text._ValidateAndInitializeSystemInfo' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetVersionInformation' ],
            ['*.o'       , '.text.prGetTeeVersionInfo_*' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetAppSpecificHWID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetDeviceUniqueID' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AES128ECB_EncryptData' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetPKVersion' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetVersion' ],
            ['*.o'       , '.text.DRM_TEE_BASE_FreeTEEContext' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GetDebugInformation' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GenerateNonce' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_SelwreClockNeedsReSync' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildNKB' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GetSystemTime' ],
            ['*.o'       , '.text.DRM_TEE_DOM_PackageKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECC256_Decrypt_AES128Keys' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_Decrypt' ],
            ['*.o'       , '.text.OEM_ECC_Decrypt_P256' ],
            ['*.o'       , '.text.OEM_ECC_Decrypt_P256Impl' ],
            ['*.o'       , '.text.Colwert_P256_PointToPlaintextImpl' ],
            ['*.o'       , '.text._TEE_DOM_ParsePrivateKey' ],
            ['*.o'       , '.text.OEM_TEE_DOM_DecryptDomainKeyWithSessionKeys' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_SetKey' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildDKB' ],
            ['*.o'       , '.text.DRM_TEE_LICPREP_PackageKey' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_ParseLicenseAlloc' ],
            ['*.o'       , '.text._VerifyInMemoryLicenseNonce' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyNKB' ],
            ['*.o'       , '.text.DRM_NONCE_VerifyNonce' ],
            ['*.o'       , '.text.DRM_UTL_IncrementID' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_LICGEN_IsLICGENSupported' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyDKB' ],
            ['*.o'       , '.text.OEM_TEE_DECRYPT_UnshuffleScalableContentKeys' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildLKB' ],
            ['*.o'       , '.text._GenerateNewECCKeys' ],
            ['*.o'       , '.text.OEM_TEE_PROV_GenerateRandomECC256KeyPair' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenKeyPairPriv' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256' ],
            ['*.o'       , '.text.OEM_ECC_GenKeyPair_P256Impl' ],
            ['*.o'       , '.text._GenerateCertHash' ],
            ['*.o'       , '.text._SignCertTemplate' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_UnprotectModelCertificatePrivateSigningKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECDSA_P256_SignData' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SHA256_Sign' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SignHash' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256' ],
            ['*.o'       , '.text.OEM_ECDSA_SignHash_P256Impl' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_FinalizePPKB' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildPPKB' ],
            ['*.o'       , '.text.OEM_TEE_LPROV_FreeDeviceCertTemplate' ],
            ['*.o'       , '.text.DRM_TEE_SIGN_SignHash' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignHashWithDeviceSigningKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECDSA_P256_SignHash' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR6 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerify' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyWithReconstitution' ],
            ['*.o'       , '.text._KBWithSignature_Parse' ],
            ['*.o'       , '.text.OEM_TEE_BASE_VerifyOMAC1Signature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Verify' ],
            ['*.o'       , '.text.Oem_Omac1_Verify' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_GetSelwrelySetSystemTime' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR6_44  =>
    {
        NAME           => 'pr6_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyPPKB' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyWithReconstitution' ],
            ['*.o'       , '.text._KBWithSignature_Parse' ],
            ['*.o'       , '.text.OEM_TEE_BASE_VerifyOMAC1Signature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Verify' ],
            ['*.o'       , '.text.Oem_Omac1_Verify' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_GetSelwrelySetSystemTime' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyCDKBDoNotCallDirectly' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR7 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_BASE_AllocBlob' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_GetKey' ],
            ['*.o'       , '.text.falc_stx_i' ],
            ['*.o'       , '.text._CryptoData_WrapKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapECC256KeyForPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_RANDOM_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.falc_scp_rand' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_WrapKey128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForPersistedStorage' ],
            ['*.o'       , '.text._WrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_KB_Build' ],
            ['*.o'       , '.text._KBWithSignature_Start' ],
            ['*.o'       , '.text.DRM_XB_StartFormatFromStack' ],
            ['*.o'       , '.text.DRM_XB_AddEntry' ],
            ['*.o'       , '.text._DRM_XB_AddContainer' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownObjects' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownObject' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetBuilderNode' ],
            ['*.o'       , '.text._DRM_XB_IsNativeObject' ],
            ['*.o'       , '.text._XB_AddHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetParent' ],
            ['*.o'       , '.text._DRM_XB_AddEstimatedAlignmentSize' ],
            ['*.o'       , '.text._DRM_XB_IsDuplicateAllowed' ],
            ['*.o'       , '.text._InsertNodeInChildListSorted' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_GetObjectLength' ],
            ['*.o'       , '.text._DRM_XB_GetElementLength' ],
            ['*.o'       , '.text._DRM_XB_GetDwordListLength' ],
            ['*.o'       , '.text._DRM_XB_GetByteArrayLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructListLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructLength' ],
            ['*.o'       , '.text._KBWithSignature_Finish' ],
            ['*.o'       , '.text.DRM_XB_FinishFormat' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Object' ],
            ['*.o'       , '.text._DRM_XB_Serialize_ElementList' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUID' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BYTEARRAY' ],
            ['*.o'       , '.text.DRM_DWordToWord' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Container' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BaseObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownBaseObject' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignWithOMAC1' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Sign' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocBlobAndTakeOwnership' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECC256_Encrypt_AES128Keys' ],
            ['*.o'       , '.text._GenerateKeyForECCEncryptableKeyPair' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenerateHMACKey' ],
            ['*.o'       , '.text.OEM_ECC_GenerateHMACKey_P256' ],
            ['*.o'       , '.text.OEM_ECC_GenerateHMACKey_P256Impl' ],
            ['*.o'       , '.text.OEM_ECC_CanMapToPoint_P256Impl' ],
            ['*.o'       , '.text.OEM_ECC_MapX2PointP256Impl' ],
            ['*.o'       , '.text.Kmuladd' ],
            ['*.o'       , '.text.Kprime_sqrter' ],
            ['*.o'       , '.text.mod_sqrt' ],
            ['*.o'       , '.text.mp_shift' ],
            ['*.o'       , '.text.mod_exp' ],
            ['*.o'       , '.text._bucket_multiply' ],
            ['*.o'       , '.text._basepower_squaring' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_Encrypt' ],
            ['*.o'       , '.text.OEM_ECC_Encrypt_P256' ],
            ['*.o'       , '.text.OEM_ECC_Encrypt_P256Impl' ],
            ['*.o'       , '.text.Colwert_P256_PlaintextToPoint' ],
            ['*.o'       , '.text._Colwert_P256_BigEndianBytesToModular' ],
            ['*.o'       , '.text.OEM_ECC_Encrypt_P256CoreImpl' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildSPKB' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR7_44  =>
    {
        NAME           => 'pr7_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_BASE_AllocBlob' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_GetKey' ],
            ['*.o'       , '.text.falc_stx_i' ],
            ['*.o'       , '.text._CryptoData_WrapKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapECC256KeyForPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_RANDOM_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.falc_scp_rand' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_WrapKey128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForPersistedStorage' ],
            ['*.o'       , '.text._WrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_KB_Build' ],
            ['*.o'       , '.text._KBWithSignature_Start' ],
            ['*.o'       , '.text.DRM_XB_SetExtendedHeader' ],
            ['*.o'       , '.text.DRM_XB_StartFormatFromStack' ],
            ['*.o'       , '.text.DRM_XB_AddEntry' ],
            ['*.o'       , '.text._DRM_XB_AddContainer' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownObjects' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownObject' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetBuilderNode' ],
            ['*.o'       , '.text._DRM_XB_IsNativeObject' ],
            ['*.o'       , '.text._DRM_XB_AddHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetParent' ],
            ['*.o'       , '.text._DRM_XB_AddEstimatedAlignmentSize' ],
            ['*.o'       , '.text._DRM_XB_IsDuplicateAllowed' ],
            ['*.o'       , '.text._InsertNodeInChildListSorted' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_GetObjectLength' ],
            ['*.o'       , '.text._DRM_XB_GetElementLength' ],
            ['*.o'       , '.text._DRM_XB_GetDwordListLength' ],
            ['*.o'       , '.text._DRM_XB_GetByteArrayLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructListLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructLength' ],
            ['*.o'       , '.text._KBWithSignature_Finish' ],
            ['*.o'       , '.text.DRM_XB_FinishFormat' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Object' ],
            ['*.o'       , '.text._DRM_XB_Serialize_ElementList' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUID' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BYTEARRAY' ],
            ['*.o'       , '.text.DRM_DWordToWord' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Container' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BaseObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownBaseObject' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignWithOMAC1' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Sign' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocBlobAndTakeOwnership' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECC256_Encrypt_AES128Keys' ],
            ['*.o'       , '.text._GenerateKeyForECCEncryptableKeyPair' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenerateHMACKey' ],
            ['*.o'       , '.text.OEM_ECC_GenerateHMACKey_P256' ],
            ['*.o'       , '.text.OEM_ECC_GenerateHMACKey_P256Impl' ],
            ['*.o'       , '.text.OEM_ECC_CanMapToPoint_P256Impl' ],
            ['*.o'       , '.text.OEM_ECC_MapX2PointP256Impl' ],
            ['*.o'       , '.text.Kmuladd' ],
            ['*.o'       , '.text.Kprime_sqrter' ],
            ['*.o'       , '.text.mod_sqrt' ],
            ['*.o'       , '.text.mp_shift' ],
            ['*.o'       , '.text.mod_exp' ],
            ['*.o'       , '.text._bucket_multiply' ],
            ['*.o'       , '.text._basepower_squaring' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_Encrypt' ],
            ['*.o'       , '.text.OEM_ECC_Encrypt_P256' ],
            ['*.o'       , '.text.OEM_ECC_Encrypt_P256Impl' ],
            ['*.o'       , '.text.Colwert_P256_PlaintextToPoint' ],
            ['*.o'       , '.text._Colwert_P256_BigEndianBytesToModular' ],
            ['*.o'       , '.text.OEM_ECC_Encrypt_P256CoreImpl' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildSPKB' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR8 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_BASE_MemFree' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.DRM_TEE_BASE_MemAlloc' ],
            ['*.o'       , '.text.DRM_TEE_BASE_TransferBlobOwnership' ],
            ['*.o'       , '.text.DRM_TEE_BASE_FreeBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemHandleFree' ],
            ['*.o'       , '.text._OEM_TEE_BASE_SelwreMemHandleFreeSlot' ],
            ['*.o'       , '.text._AllocCryptoContext' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackImpl' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackOEMCtxImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToPointImpl' ],
            ['*.o'       , '.text.to_modular' ],
            ['*.o'       , '.text.compare_diff' ],
            ['*.o'       , '.text.digit_allocate' ],
            ['*.o'       , '.text.bignum_alloc' ],
            ['*.o'       , '.text.divide' ],
            ['*.o'       , '.text.mp_extend' ],
            ['*.o'       , '.text.divide_immediate' ],
            ['*.o'       , '.text.div21' ],
            ['*.o'       , '.text.divide_precondition_1' ],
            ['*.o'       , '.text.significant_bit_count' ],
            ['*.o'       , '.text.div21_fast' ],
            ['*.o'       , '.text.estimated_quotient_1' ],
            ['*.o'       , '.text.compare_same' ],
            ['*.o'       , '.text.delwmulate' ],
            ['*.o'       , '.text.add_same' ],
            ['*.o'       , '.text.significant_digit_count' ],
            ['*.o'       , '.text.mod_shift' ],
            ['*.o'       , '.text.validate_modular_data' ],
            ['*.o'       , '.text.mp_shift_lost' ],
            ['*.o'       , '.text.sub_same' ],
            ['*.o'       , '.text.accumulate' ],
            ['*.o'       , '.text.bignum_free' ],
            ['*.o'       , '.text.ecaffine_exponentiation' ],
            ['*.o'       , '.text.mp_significant_bit_count' ],
            ['*.o'       , '.text.ecaffine_PPQ' ],
            ['*.o'       , '.text.ecaffine_is_infinite' ],
            ['*.o'       , '.text.Kiszeroer_default' ],
            ['*.o'       , '.text.Kequaler_default' ],
            ['*.o'       , '.text.ecaffine_multiply_pm1' ],
            ['*.o'       , '.text.ecaffine_negate' ],
            ['*.o'       , '.text.Kprime_negater' ],
            ['*.o'       , '.text.neg_mod' ],
            ['*.o'       , '.text.ecaffine_addition' ],
            ['*.o'       , '.text.ecaffine_set_infinite' ],
            ['*.o'       , '.text.Kzeroizer_default' ],
            ['*.o'       , '.text.Kprime_adder' ],
            ['*.o'       , '.text.add_mod' ],
            ['*.o'       , '.text.compare_sum_same' ],
            ['*.o'       , '.text.add_sub_same' ],
            ['*.o'       , '.text.Kmul_many' ],
            ['*.o'       , '.text.possible_digit_allocate' ],
            ['*.o'       , '.text.Kprime_multiplier1' ],
            ['*.o'       , '.text.mod_mul' ],
            ['*.o'       , '.text.modmul_from_right_default_modulo8_P256' ],
            ['*.o'       , '.text.sub_mod' ],
            ['*.o'       , '.text.Kilwert' ],
            ['*.o'       , '.text.Kprime_ilwerter1' ],
            ['*.o'       , '.text.mp_ilwert' ],
            ['*.o'       , '.text.mp_ilwert_ntemps' ],
            ['*.o'       , '.text.mp_gcdex_ntemps' ],
            ['*.o'       , '.text.mp_gcdex' ],
            ['*.o'       , '.text.mp_mul22u' ],
            ['*.o'       , '.text.multiply' ],
            ['*.o'       , '.text.multiply_immediate' ],
            ['*.o'       , '.text.add_full' ],
            ['*.o'       , '.text.add_diff' ],
            ['*.o'       , '.text.add_immediate' ],
            ['*.o'       , '.text.lehmer_mat22' ],
            ['*.o'       , '.text.mp_mul22s' ],
            ['*.o'       , '.text.SDBLINT' ],
            ['*.o'       , '.text.Kprime_subtracter' ],
            ['*.o'       , '.text.ecaffine_addition_subtraction' ],
            ['*.o'       , '.text.mp_getbit' ],
            ['*.o'       , '.text.mp_setbit' ],
            ['*.o'       , '.text.from_modular' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text.Colwert_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text._FreeCryptoContext' ],
            ['*.o'       , '.text.DRM_TEE_REVOCATION_IngestRevocationInfo' ],
            ['*.o'       , '.text.DRM_RVK_VerifyRevocationInfoV2Only' ],
            ['*.o'       , '.text.DRM_RVK_ParseRevocationInfo' ],
            ['*.o'       , '.text.DRM_RVK_ParseRevocationInfoHeader' ],
            ['*.o'       , '.text.DRM_BCrl_VerifySignature' ],
            ['*.o'       , '.text.Oem_Broker_Clock_GetSystemTimeAsFileTime' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_GetSystemTime' ],
            ['*.o'       , '.text._GetPublicKeySelwreWorld' ],
            ['*.o'       , '.text.DRM_RVK_FindEntryInRevInfo' ],
            ['*.o'       , '.text.DRM_UInt64Add' ],
            ['*.o'       , '.text._ParseAndVerifyCRL' ],
            ['*.o'       , '.text.DRM_BCrl_ParseSignedCrl' ],
            ['*.o'       , '.text.DRM_BCrl_ParseUnsignedCrl' ],
            ['*.o'       , '.text.DRM_TEE_KB_BuildRKB' ],
            ['*.o'       , '.text.DRM_TEE_STUB_GenerateOutput' ],
            ['*.o'       , '.text.DRM_TEE_CACHE_Initialize' ],
            ['*.o'       , '.text.DRM_HASHCACHE_Initialize' ],
            ['*.o'       , '.text.DRM_TEE_CACHE_AddContext' ],
            ['*.o'       , '.text._GetEntry' ],
            ['*.o'       , '.text._FreeEntry' ],
            ['*.o'       , '.text.DRM_TEE_PROXYSTUB_AddParameter' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_AddEntryTEEContext' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEECtxToBytes' ],
            ['*.o'       , '.text.DRM_TEE_PROXYSTUB_AddMethodInfo' ],
            ['*.o'       , '.text.DRM_TEE_STUB_FreeParameters' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR8_44  =>
    {
        NAME           => 'pr8_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_MemFree' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_MemAlloc' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_TransferBlobOwnership' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_FreeBlob' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemHandleFree' ],
            ['*.o'       , '.text._OEM_TEE_BASE_SelwreMemHandleFreeSlot' ],
            ['*.o'       , '.text._AllocCryptoContext' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackImpl' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackOEMCtxImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToPointImpl' ],
            ['*.o'       , '.text.to_modular' ],
            ['*.o'       , '.text.compare_diff' ],
            ['*.o'       , '.text.digit_allocate' ],
            ['*.o'       , '.text.bignum_alloc' ],
            ['*.o'       , '.text.divide' ],
            ['*.o'       , '.text.mp_extend' ],
            ['*.o'       , '.text.divide_immediate' ],
            ['*.o'       , '.text.div21' ],
            ['*.o'       , '.text.divide_precondition_1' ],
            ['*.o'       , '.text.significant_bit_count' ],
            ['*.o'       , '.text.div21_fast' ],
            ['*.o'       , '.text.estimated_quotient_1' ],
            ['*.o'       , '.text.compare_same' ],
            ['*.o'       , '.text.delwmulate' ],
            ['*.o'       , '.text.add_same' ],
            ['*.o'       , '.text.significant_digit_count' ],
            ['*.o'       , '.text.mod_shift' ],
            ['*.o'       , '.text.validate_modular_data' ],
            ['*.o'       , '.text.mp_shift_lost' ],
            ['*.o'       , '.text.sub_same' ],
            ['*.o'       , '.text.accumulate' ],
            ['*.o'       , '.text.bignum_free' ],
            ['*.o'       , '.text.ecaffine_exponentiation' ],
            ['*.o'       , '.text.mp_significant_bit_count' ],
            ['*.o'       , '.text.ecaffine_PPQ' ],
            ['*.o'       , '.text.ecaffine_is_infinite' ],
            ['*.o'       , '.text.Kiszeroer_default' ],
            ['*.o'       , '.text.Kequaler_default' ],
            ['*.o'       , '.text.ecaffine_multiply_pm1' ],
            ['*.o'       , '.text.ecaffine_negate' ],
            ['*.o'       , '.text.Kprime_negater' ],
            ['*.o'       , '.text.neg_mod' ],
            ['*.o'       , '.text.ecaffine_addition' ],
            ['*.o'       , '.text.ecaffine_set_infinite' ],
            ['*.o'       , '.text.Kzeroizer_default' ],
            ['*.o'       , '.text.Kprime_adder' ],
            ['*.o'       , '.text.add_mod' ],
            ['*.o'       , '.text.compare_sum_same' ],
            ['*.o'       , '.text.add_sub_same' ],
            ['*.o'       , '.text.Kmul_many' ],
            ['*.o'       , '.text.possible_digit_allocate' ],
            ['*.o'       , '.text.Kprime_multiplier1' ],
            ['*.o'       , '.text.mod_mul' ],
            ['*.o'       , '.text.modmul_from_right_default_modulo8_P256' ],
            ['*.o'       , '.text.sub_mod' ],
            ['*.o'       , '.text.Kilwert' ],
            ['*.o'       , '.text.Kprime_ilwerter1' ],
            ['*.o'       , '.text.mp_ilwert' ],
            ['*.o'       , '.text.mp_ilwert_ntemps' ],
            ['*.o'       , '.text.mp_gcdex_ntemps' ],
            ['*.o'       , '.text.mp_gcdex' ],
            ['*.o'       , '.text.mp_mul22u' ],
            ['*.o'       , '.text.multiply' ],
            ['*.o'       , '.text.multiply_immediate' ],
            ['*.o'       , '.text.add_full' ],
            ['*.o'       , '.text.add_diff' ],
            ['*.o'       , '.text.add_immediate' ],
            ['*.o'       , '.text.lehmer_mat22' ],
            ['*.o'       , '.text.mp_mul22s' ],
            ['*.o'       , '.text.SDBLINT' ],
            ['*.o'       , '.text.Kprime_subtracter' ],
            ['*.o'       , '.text.ecaffine_addition_subtraction' ],
            ['*.o'       , '.text.mp_getbit' ],
            ['*.o'       , '.text.mp_setbit' ],
            ['*.o'       , '.text.from_modular' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text.Colwert_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text._FreeCryptoContext' ],
            ['*.o'       , '.text.DRM_TEE_REVOCATION_IngestRevocationInfo' ],
            ['*.o'       , '.text.DRM_RVK_VerifyRevocationInfoV2Only' ],
            ['*.o'       , '.text.DRM_RVK_ParseRevocationInfo' ],
            ['*.o'       , '.text.DRM_RVK_ParseRevocationInfoHeader' ],
            ['*.o'       , '.text.DRM_BCrl_VerifySignature' ],
            ['*.o'       , '.text.Oem_Broker_Clock_GetSystemTimeAsFileTime' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_GetTimestamp' ],
            ['*.o'       , '.text._GetPublicKeySelwreWorld' ],
            ['*.o'       , '.text.DRM_RVK_FindEntryInRevInfo' ],
            ['*.o'       , '.text.DRM_UInt64Add' ],
            ['*.o'       , '.text._ParseAndVerifyCRL' ],
            ['*.o'       , '.text.DRM_BCrl_ParseSignedCrl' ],
            ['*.o'       , '.text.DRM_BCrl_ParseUnsignedCrl' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_BuildRKB' ],
            ['*.o'       , '.text.DRM_TEE_STUB_GenerateOutput' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_CACHE_Initialize' ],
            ['*.o'       , '.text.DRM_HASHCACHE_Initialize' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SELWRESTOP2_InitializeNotThreadSafe' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SELWRESTOP2_VerifyDecryptionNotStopped' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_SELWRESTOP2_StartDecryption' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_CACHE_AddContext' ],
            ['*.o'       , '.text._GetEntry' ],
            ['*.o'       , '.text._FreeEntry' ],
            ['*.o'       , '.text.DRM_TEE_PROXYSTUB_AddParameter' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_AddEntryTEEContext' ],
            ['*.o'       , '.text.DRM_TEE_STUB_XB_TEECtxToBytes' ],
            ['*.o'       , '.text.DRM_TEE_PROXYSTUB_AddMethodInfo' ],
            ['*.o'       , '.text.DRM_TEE_STUB_FreeParameters' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR9 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.falc_ldx_i' ],
            ['*.o'       , '.text.pvPortMalloc' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.DRM_TEE_BASE_MemFree' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.DRM_TEE_BASE_MemAlloc' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_XB_UnpackBinary' ],
            ['*.o'       , '.text.DRM_XB_UnpackHeader' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text._DRM_XB_Parse_Object' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORD' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUID' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUIDLIST' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORDLIST' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text._DRM_XB_Parse_BYTEARRAY' ],
            ['*.o'       , '.text._DRM_XB_Parse_Container' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._DRM_XB_Parse_Unknown' ],
            ['*.o'       , '.text._XB_IsObjectTypeAChildOf' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UNKNOWN_OBJECT' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownObject' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._XB_CreateNewListItem' ],
            ['*.o'       , '.text._DRM_XB_CheckForContainerFillPatern' ],
            ['*.o'       , '.text._DRM_XB_GetMaxContainerDepth' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text._InitializeTKeys' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_BASE_GetStaticKeyHistoryKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.DRM_TEE_BASE_AllocBlob' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerify' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyWithReconstitution' ],
            ['*.o'       , '.text._KBWithSignature_Parse' ],
            ['*.o'       , '.text.DRM_XB_FindObject' ],
            ['*.o'       , '.text._XB_FindChild' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetCTKID' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_CopyKey' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_DeriveTKDFromTK' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_IsKBTypePersistedToDisk' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetKeyDerivationIDSign' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetKeyDerivationIDEncrypt' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.Oem_Broker_Aes_EncryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text.falc_scp_trap' ],
            ['*.o'       , '.text.falc_trapped_dmwrite' ],
            ['*.o'       , '.text.falc_sethi_i' ],
            ['*.o'       , '.text.falc_dmwait' ],
            ['*.o'       , '.text.falc_scp_secret' ],
            ['*.o'       , '.text.falc_scp_mov' ],
            ['*.o'       , '.text.falc_scp_rkey10' ],
            ['*.o'       , '.text.falc_scp_key' ],
            ['*.o'       , '.text.falc_scp_encrypt' ],
            ['*.o'       , '.text.falc_scp_decrypt' ],
            ['*.o'       , '.text.falc_trapped_dmread' ],
            ['*.o'       , '.text.falc_scp_xor' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.falc_stxb_i' ],
            ['*.o'       , '.text.falc_halt' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_VerifyOMAC1Signature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Verify' ],
            ['*.o'       , '.text.Oem_Omac1_Verify' ],
            ['*.o'       , '.text._RemapTEEFormatError' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocateKeyArray' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_FreeKeyArray' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_FreeKey' ],
            ['*.o'       , '.text._CryptoData_UnwrapKeys' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapECC256KeyFromPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_UnwrapKey128' ],
            ['*.o'       , '.text.Oem_Broker_Aes_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromPersistedStorage' ],
            ['*.o'       , '.text._UnwrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_ParseLicense' ],
            ['*.o'       , '.text.DRM_XMRFORMAT_Parse' ],
            ['*.o'       , '.text._XMRFORMAT_ValidateLicenseObjects' ],
            ['*.o'       , '.text.DRM_TEE_KB_ParseAndVerifyLKB' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_CheckLicenseSignature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_GetKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EcbEncryptData' ],
            ['*.o'       , '.text.Oem_Aes_EcbEncryptData' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EcbDecryptData' ],
            ['*.o'       , '.text.Oem_Aes_EcbDecryptData' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_ValidateLicenseExpiration' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_GetSelwrelySetSystemTime' ],
            ['*.o'       , '.text.falc_stx_i' ],
            ['*.o'       , '.text._CryptoData_WrapKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapECC256KeyForPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_RANDOM_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.falc_scp_rand' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_WrapKey128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForPersistedStorage' ],
            ['*.o'       , '.text._WrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_KB_Build' ],
            ['*.o'       , '.text._KBWithSignature_Start' ],
            ['*.o'       , '.text.DRM_XB_StartFormatFromStack' ],
            ['*.o'       , '.text.DRM_XB_AddEntry' ],
            ['*.o'       , '.text._DRM_XB_AddContainer' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownObjects' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownObject' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetBuilderNode' ],
            ['*.o'       , '.text._DRM_XB_IsNativeObject' ],
            ['*.o'       , '.text._XB_AddHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetParent' ],
            ['*.o'       , '.text._DRM_XB_AddEstimatedAlignmentSize' ],
            ['*.o'       , '.text._DRM_XB_IsDuplicateAllowed' ],
            ['*.o'       , '.text._InsertNodeInChildListSorted' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_GetObjectLength' ],
            ['*.o'       , '.text._DRM_XB_GetElementLength' ],
            ['*.o'       , '.text._DRM_XB_GetDwordListLength' ],
            ['*.o'       , '.text._DRM_XB_GetByteArrayLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructListLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructLength' ],
            ['*.o'       , '.text._KBWithSignature_Finish' ],
            ['*.o'       , '.text.DRM_XB_FinishFormat' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Object' ],
            ['*.o'       , '.text._DRM_XB_Serialize_ElementList' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUID' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BYTEARRAY' ],
            ['*.o'       , '.text.DRM_DWordToWord' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Container' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BaseObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownBaseObject' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignWithOMAC1' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Sign' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocBlobAndTakeOwnership' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR9_44  =>
    {
        NAME           => 'pr9_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.falc_ldx_i' ],
            ['*.o'       , '.text.pvPortMalloc' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_MemFree' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_MemAlloc' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_MemAlloc' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_XB_UnpackBinary' ],
            ['*.o'       , '.text.DRM_XB_UnpackHeader' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text._DRM_XB_Parse_Object' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORD' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUID' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUIDLIST' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORDLIST' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text._DRM_XB_Parse_BYTEARRAY' ],
            ['*.o'       , '.text._DRM_XB_Parse_Container' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._DRM_XB_Parse_Unknown' ],
            ['*.o'       , '.text._XB_IsObjectTypeAChildOf' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UNKNOWN_OBJECT' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownObject' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._XB_CreateNewListItem' ],
            ['*.o'       , '.text._DRM_XB_CheckForContainerFillPatern' ],
            ['*.o'       , '.text._DRM_XB_GetMaxContainerDepth' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text._InitializeTKeys' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_BASE_GetStaticKeyHistoryKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocBlob' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerify' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyWithReconstitution' ],
            ['*.o'       , '.text._KBWithSignature_Parse' ],
            ['*.o'       , '.text.DRM_XB_FindObject' ],
            ['*.o'       , '.text._XB_FindChild' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetCTKID' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_CopyKey' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_DeriveTKDFromTK' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_IsKBTypePersistedToDisk' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetKeyDerivationIDSign' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetKeyDerivationIDEncrypt' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text.falc_scp_trap' ],
            ['*.o'       , '.text.falc_trapped_dmwrite' ],
            ['*.o'       , '.text.falc_sethi_i' ],
            ['*.o'       , '.text.falc_dmwait' ],
            ['*.o'       , '.text.falc_scp_secret' ],
            ['*.o'       , '.text.falc_scp_mov' ],
            ['*.o'       , '.text.falc_scp_rkey10' ],
            ['*.o'       , '.text.falc_scp_key' ],
            ['*.o'       , '.text.falc_scp_encrypt' ],
            ['*.o'       , '.text.falc_scp_decrypt' ],
            ['*.o'       , '.text.falc_trapped_dmread' ],
            ['*.o'       , '.text.falc_scp_xor' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.falc_stxb_i' ],
            ['*.o'       , '.text.falc_halt' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_VerifyOMAC1Signature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Verify' ],
            ['*.o'       , '.text.Oem_Omac1_Verify' ],
            ['*.o'       , '.text._RemapTEEFormatError' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocateKeyArray' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_FreeKeyArray' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_FreeKey' ],
            ['*.o'       , '.text._CryptoData_UnwrapKeys' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyECC256' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapECC256KeyFromPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_UnwrapKey128' ],
            ['*.o'       , '.text.Oem_Broker_Aes_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_DecryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromPersistedStorage' ],
            ['*.o'       , '.text._UnwrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_UnwrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_UnwrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_UnwrapAES128KeyFromTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_ParseLicense' ],
            ['*.o'       , '.text.DRM_XMRFORMAT_Parse' ],
            ['*.o'       , '.text._XMRFORMAT_ValidateLicenseObjects' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_ParseAndVerifyLKB' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_CheckLicenseSignature' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_GetKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EcbEncryptData' ],
            ['*.o'       , '.text.Oem_Aes_EcbEncryptData' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AES128ECB_DecryptData' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EcbDecryptData' ],
            ['*.o'       , '.text.Oem_Aes_EcbDecryptData' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_ValidateLicenseExpiration' ],
            ['*.o'       , '.text.OEM_TEE_CLOCK_GetSelwrelySetSystemTime' ],
            ['*.o'       , '.text.falc_stx_i' ],
            ['*.o'       , '.text._CryptoData_WrapKeys' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapECC256KeyForPersistedStorage' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_RANDOM_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetBytes' ],
            ['*.o'       , '.text.Oem_Random_GetRand128' ],
            ['*.o'       , '.text.falc_scp_rand' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyECC256' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyECC256' ],
            ['*.o'       , '.text._AesKeyWrap_WrapKey128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForPersistedStorage' ],
            ['*.o'       , '.text._WrapAES128Key' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AESKEYWRAP_WrapKeyAES128' ],
            ['*.o'       , '.text.Oem_AesKeyWrap_WrapKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_WrapAES128KeyForTransientStorage' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_KB_Build' ],
            ['*.o'       , '.text._KBWithSignature_Start' ],
            ['*.o'       , '.text.DRM_XB_StartFormatFromStack' ],
            ['*.o'       , '.text.DRM_XB_AddEntry' ],
            ['*.o'       , '.text._DRM_XB_AddContainer' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownObjects' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownObject' ],
            ['*.o'       , '.text.DRM_XB_AddUnknownHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetBuilderNode' ],
            ['*.o'       , '.text._DRM_XB_IsNativeObject' ],
            ['*.o'       , '.text._DRM_XB_AddHierarchy' ],
            ['*.o'       , '.text._DRM_XB_GetParent' ],
            ['*.o'       , '.text._DRM_XB_AddEstimatedAlignmentSize' ],
            ['*.o'       , '.text._DRM_XB_IsDuplicateAllowed' ],
            ['*.o'       , '.text._InsertNodeInChildListSorted' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text._DRM_XB_AddUnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_GetObjectLength' ],
            ['*.o'       , '.text._DRM_XB_GetElementLength' ],
            ['*.o'       , '.text._DRM_XB_GetDwordListLength' ],
            ['*.o'       , '.text._DRM_XB_GetByteArrayLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructListLength' ],
            ['*.o'       , '.text._DRM_XB_GetStructLength' ],
            ['*.o'       , '.text._KBWithSignature_Finish' ],
            ['*.o'       , '.text.DRM_XB_FinishFormat' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Object' ],
            ['*.o'       , '.text._DRM_XB_Serialize_ElementList' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUID' ],
            ['*.o'       , '.text._DRM_XB_Serialize_GUIDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_WORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BYTEARRAY' ],
            ['*.o'       , '.text.DRM_DWordToWord' ],
            ['*.o'       , '.text._DRM_XB_Serialize_Container' ],
            ['*.o'       , '.text._DRM_XB_Serialize_BaseObject' ],
            ['*.o'       , '.text._DRM_XB_Serialize_UnknownBaseObject' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SignWithOMAC1' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_OMAC1_Sign' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocBlobAndTakeOwnership' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR10 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomBytes' ],
            ['*.o'       , '.text._AllocCryptoContext' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackImpl' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackOEMCtxImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToPointImpl' ],
            ['*.o'       , '.text.to_modular' ],
            ['*.o'       , '.text.compare_diff' ],
            ['*.o'       , '.text.digit_allocate' ],
            ['*.o'       , '.text.bignum_alloc' ],
            ['*.o'       , '.text.divide' ],
            ['*.o'       , '.text.mp_extend' ],
            ['*.o'       , '.text.divide_immediate' ],
            ['*.o'       , '.text.div21' ],
            ['*.o'       , '.text.divide_precondition_1' ],
            ['*.o'       , '.text.significant_bit_count' ],
            ['*.o'       , '.text.div21_fast' ],
            ['*.o'       , '.text.estimated_quotient_1' ],
            ['*.o'       , '.text.compare_same' ],
            ['*.o'       , '.text.delwmulate' ],
            ['*.o'       , '.text.add_same' ],
            ['*.o'       , '.text.significant_digit_count' ],
            ['*.o'       , '.text.mod_shift' ],
            ['*.o'       , '.text.validate_modular_data' ],
            ['*.o'       , '.text.mp_shift_lost' ],
            ['*.o'       , '.text.sub_same' ],
            ['*.o'       , '.text.accumulate' ],
            ['*.o'       , '.text.bignum_free' ],
            ['*.o'       , '.text.ecaffine_exponentiation' ],
            ['*.o'       , '.text.mp_significant_bit_count' ],
            ['*.o'       , '.text.ecaffine_PPQ' ],
            ['*.o'       , '.text.ecaffine_is_infinite' ],
            ['*.o'       , '.text.Kiszeroer_default' ],
            ['*.o'       , '.text.Kequaler_default' ],
            ['*.o'       , '.text.ecaffine_multiply_pm1' ],
            ['*.o'       , '.text.ecaffine_negate' ],
            ['*.o'       , '.text.Kprime_negater' ],
            ['*.o'       , '.text.neg_mod' ],
            ['*.o'       , '.text.ecaffine_addition' ],
            ['*.o'       , '.text.ecaffine_set_infinite' ],
            ['*.o'       , '.text.Kzeroizer_default' ],
            ['*.o'       , '.text.Kprime_adder' ],
            ['*.o'       , '.text.add_mod' ],
            ['*.o'       , '.text.compare_sum_same' ],
            ['*.o'       , '.text.add_sub_same' ],
            ['*.o'       , '.text.Kmul_many' ],
            ['*.o'       , '.text.possible_digit_allocate' ],
            ['*.o'       , '.text.Kprime_multiplier1' ],
            ['*.o'       , '.text.mod_mul' ],
            ['*.o'       , '.text.modmul_from_right_default_modulo8_P256' ],
            ['*.o'       , '.text.sub_mod' ],
            ['*.o'       , '.text.Kilwert' ],
            ['*.o'       , '.text.Kprime_ilwerter1' ],
            ['*.o'       , '.text.mp_ilwert' ],
            ['*.o'       , '.text.mp_ilwert_ntemps' ],
            ['*.o'       , '.text.mp_gcdex_ntemps' ],
            ['*.o'       , '.text.mp_gcdex' ],
            ['*.o'       , '.text.mp_mul22u' ],
            ['*.o'       , '.text.multiply' ],
            ['*.o'       , '.text.multiply_immediate' ],
            ['*.o'       , '.text.add_full' ],
            ['*.o'       , '.text.add_diff' ],
            ['*.o'       , '.text.add_immediate' ],
            ['*.o'       , '.text.lehmer_mat22' ],
            ['*.o'       , '.text.mp_mul22s' ],
            ['*.o'       , '.text.SDBLINT' ],
            ['*.o'       , '.text.Kprime_subtracter' ],
            ['*.o'       , '.text.ecaffine_addition_subtraction' ],
            ['*.o'       , '.text.mp_getbit' ],
            ['*.o'       , '.text.mp_setbit' ],
            ['*.o'       , '.text.from_modular' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text.Colwert_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text._FreeCryptoContext' ],
            ['*.o'       , '.text.new_random_mod_nonzero' ],
            ['*.o'       , '.text.compare_immediate' ],
            ['*.o'       , '.text.random_mod' ],
            ['*.o'       , '.text.random_digits' ],
            ['*.o'       , '.text.random_bytes' ],
            ['*.o'       , '.text.Oem_Broker_Random_GetBytes' ],
            ['*.o'       , '.text.random_digit_interval' ],
            ['*.o'       , '.text.ecaffine_on_lwrve' ],
            ['*.o'       , '.text.Colwert_P256_PointToBigEndianBytes' ],
            ['*.o'       , '.text.DRMCRT_LocalDWORDSetZero' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomAES128Key' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR10_44  =>
    {
        NAME           => 'pr10_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomBytes' ],
            ['*.o'       , '.text._AllocCryptoContext' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackImpl' ],
            ['*.o'       , '.text.OEM_ECC_InitializeBignumStackOEMCtxImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigitsImpl' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToPointImpl' ],
            ['*.o'       , '.text.to_modular' ],
            ['*.o'       , '.text.compare_diff' ],
            ['*.o'       , '.text.digit_allocate' ],
            ['*.o'       , '.text.bignum_alloc' ],
            ['*.o'       , '.text.divide' ],
            ['*.o'       , '.text.mp_extend' ],
            ['*.o'       , '.text.divide_immediate' ],
            ['*.o'       , '.text.div21' ],
            ['*.o'       , '.text.divide_precondition_1' ],
            ['*.o'       , '.text.significant_bit_count' ],
            ['*.o'       , '.text.div21_fast' ],
            ['*.o'       , '.text.estimated_quotient_1' ],
            ['*.o'       , '.text.compare_same' ],
            ['*.o'       , '.text.delwmulate' ],
            ['*.o'       , '.text.add_same' ],
            ['*.o'       , '.text.significant_digit_count' ],
            ['*.o'       , '.text.mod_shift' ],
            ['*.o'       , '.text.validate_modular_data' ],
            ['*.o'       , '.text.mp_shift_lost' ],
            ['*.o'       , '.text.sub_same' ],
            ['*.o'       , '.text.accumulate' ],
            ['*.o'       , '.text.bignum_free' ],
            ['*.o'       , '.text.ecaffine_exponentiation' ],
            ['*.o'       , '.text.mp_significant_bit_count' ],
            ['*.o'       , '.text.ecaffine_PPQ' ],
            ['*.o'       , '.text.ecaffine_is_infinite' ],
            ['*.o'       , '.text.Kiszeroer_default' ],
            ['*.o'       , '.text.Kequaler_default' ],
            ['*.o'       , '.text.ecaffine_multiply_pm1' ],
            ['*.o'       , '.text.ecaffine_negate' ],
            ['*.o'       , '.text.Kprime_negater' ],
            ['*.o'       , '.text.neg_mod' ],
            ['*.o'       , '.text.ecaffine_addition' ],
            ['*.o'       , '.text.ecaffine_set_infinite' ],
            ['*.o'       , '.text.Kzeroizer_default' ],
            ['*.o'       , '.text.Kprime_adder' ],
            ['*.o'       , '.text.add_mod' ],
            ['*.o'       , '.text.compare_sum_same' ],
            ['*.o'       , '.text.add_sub_same' ],
            ['*.o'       , '.text.Kmul_many' ],
            ['*.o'       , '.text.possible_digit_allocate' ],
            ['*.o'       , '.text.Kprime_multiplier1' ],
            ['*.o'       , '.text.mod_mul' ],
            ['*.o'       , '.text.modmul_from_right_default_modulo8_P256' ],
            ['*.o'       , '.text.sub_mod' ],
            ['*.o'       , '.text.Kilwert' ],
            ['*.o'       , '.text.Kprime_ilwerter1' ],
            ['*.o'       , '.text.mp_ilwert' ],
            ['*.o'       , '.text.mp_ilwert_ntemps' ],
            ['*.o'       , '.text.mp_gcdex_ntemps' ],
            ['*.o'       , '.text.mp_gcdex' ],
            ['*.o'       , '.text.mp_mul22u' ],
            ['*.o'       , '.text.multiply' ],
            ['*.o'       , '.text.multiply_immediate' ],
            ['*.o'       , '.text.add_full' ],
            ['*.o'       , '.text.add_diff' ],
            ['*.o'       , '.text.add_immediate' ],
            ['*.o'       , '.text.lehmer_mat22' ],
            ['*.o'       , '.text.mp_mul22s' ],
            ['*.o'       , '.text.SDBLINT' ],
            ['*.o'       , '.text.Kprime_subtracter' ],
            ['*.o'       , '.text.ecaffine_addition_subtraction' ],
            ['*.o'       , '.text.mp_getbit' ],
            ['*.o'       , '.text.mp_setbit' ],
            ['*.o'       , '.text.from_modular' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text.Colwert_DigitsToBigEndianBytesImpl' ],
            ['*.o'       , '.text._FreeCryptoContext' ],
            ['*.o'       , '.text.new_random_mod_nonzero' ],
            ['*.o'       , '.text.compare_immediate' ],
            ['*.o'       , '.text.random_mod' ],
            ['*.o'       , '.text.random_digits' ],
            ['*.o'       , '.text.random_bytes' ],
            ['*.o'       , '.text.Oem_Broker_Random_GetBytes' ],
            ['*.o'       , '.text.random_digit_interval' ],
            ['*.o'       , '.text.ecaffine_on_lwrve' ],
            ['*.o'       , '.text.Colwert_P256_PointToBigEndianBytes' ],
            ['*.o'       , '.text.DRMCRT_LocalDWORDSetZero' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GenerateRandomAES128Key' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR11 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_XB_StartFormat' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Init' ],
            ['*.o'       , '.text.DRM_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Update' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Update' ],
            ['*.o'       , '.text.DRM_SHA256_Update' ],
            ['*.o'       , '.text.DRM_SHA256_UpdateOffset' ],
            ['*.o'       , '.text._SHA256_Transform' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Finalize' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Finalize' ],
            ['*.o'       , '.text.DRM_SHA256_Finalize' ],
            ['*.o'       , '.text.DRMCRT_memcmp' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsModOrderImpl' ],
            ['*.o'       , '.text.Colwert_P256_ModularIntToDigitsModOrderImpl' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR11_44  =>
    {
        NAME           => 'pr11_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_XB_StartFormat' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Init' ],
            ['*.o'       , '.text.OEM_SHA256_Init' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Update' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Update' ],
            ['*.o'       , '.text.OEM_SHA256_Update' ],
            ['*.o'       , '.text.OEM_SHA256_UpdateOffset' ],
            ['*.o'       , '.text._SHA256_Transform' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SHA256_Finalize' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_SHA256_Finalize' ],
            ['*.o'       , '.text.DRM_SHA256_Finalize' ],
            ['*.o'       , '.text.DRMCRT_memcmp' ],
            ['*.o'       , '.text.Colwert_P256_BigEndianBytesToDigitsModOrderImpl' ],
            ['*.o'       , '.text.Colwert_P256_ModularIntToDigitsModOrderImpl' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR12 =>
    {
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.falc_ldx_i' ],
            ['*.o'       , '.text.pvPortMalloc' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_XB_UnpackBinary' ],
            ['*.o'       , '.text.DRM_XB_UnpackHeader' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text._DRM_XB_Parse_Object' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORD' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUID' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUIDLIST' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORDLIST' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text._DRM_XB_Parse_BYTEARRAY' ],
            ['*.o'       , '.text._DRM_XB_Parse_Container' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._DRM_XB_Parse_Unknown' ],
            ['*.o'       , '.text._XB_IsObjectTypeAChildOf' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UNKNOWN_OBJECT' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownObject' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._XB_CreateNewListItem' ],
            ['*.o'       , '.text._DRM_XB_CheckForContainerFillPatern' ],
            ['*.o'       , '.text._DRM_XB_GetMaxContainerDepth' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.DRM_XB_FindObject' ],
            ['*.o'       , '.text._XB_FindChild' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetCTKID' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_CopyKey' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_DeriveTKDFromTK' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_IsKBTypePersistedToDisk' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetKeyDerivationIDSign' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetKeyDerivationIDEncrypt' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.Oem_Broker_Aes_EncryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text.falc_scp_trap' ],
            ['*.o'       , '.text.falc_trapped_dmwrite' ],
            ['*.o'       , '.text.falc_sethi_i' ],
            ['*.o'       , '.text.falc_dmwait' ],
            ['*.o'       , '.text.falc_scp_secret' ],
            ['*.o'       , '.text.falc_scp_mov' ],
            ['*.o'       , '.text.falc_scp_rkey10' ],
            ['*.o'       , '.text.falc_scp_key' ],
            ['*.o'       , '.text.falc_scp_encrypt' ],
            ['*.o'       , '.text.falc_scp_decrypt' ],
            ['*.o'       , '.text.falc_trapped_dmread' ],
            ['*.o'       , '.text.falc_scp_xor' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.falc_stxb_i' ],
            ['*.o'       , '.text.falc_halt' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text._RemapTEEFormatError' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_ParseCertificateChain' ],
            ['*.o'       , '.text.DRM_BCERTFORMAT_ParseCertificateChainData' ],
            ['*.o'       , '.text._ParseCertificateChain' ],
            ['*.o'       , '.text.Oem_Broker_MemAlloc' ],
            ['*.o'       , '.text._DRM_BCERTFORMAT_ParseCertificate' ],
            ['*.o'       , '.text._VerifySignature' ],
            ['*.o'       , '.text.Oem_Broker_ECDSA_P256_Verify' ],
            ['*.o'       , '.text.DRM_TEE_CACHE_CheckHash' ],
            ['*.o'       , '.text.DRM_HASHCACHE_CheckHash' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECDSA_P256_Verify' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SHA256_Verify' ],
            ['*.o'       , '.text.OEM_ECDSA_Verify_P256' ],
            ['*.o'       , '.text.OEM_ECDSA_Verify_P256Impl' ],
            ['*.o'       , '.text._Colwert_P256_ModularIntToBigEndianBytesModOrder' ],
            ['*.o'       , '.text.DRM_TEE_CACHE_AddHash' ],
            ['*.o'       , '.text.DRM_HASHCACHE_AddHash' ],
            ['*.o'       , '.text.DRM_STR_UTF8_IsUTF8NullTerminatedData' ],
            ['*.o'       , '.text.DRM_STR_UTF8_VerifyBytes' ],
            ['*.o'       , '.text.DRM_STR_UTF8_ReadCodePoint8' ],
            ['*.o'       , '.text.Oem_Broker_SHA256_CreateDigest' ],
            ['*.o'       , '.text._DRM_BCERTFORMAT_VerifyAdjacentCerts' ],
            ['*.o'       , '.text.DRM_BCERTFORMAT_VerifyChildUsage' ],
            ['*.o'       , '.text._GetChainDataFromCert' ],
            ['*.o'       , '.text._ValidateRootPublicKey' ],
            ['*.o'       , '.text.DRM_BCERTFORMAT_GetCertificate' ],
            ['*.o'       , '.text.Oem_Broker_MemFree' ],
        ],

        ENABLED_ON     => [ GP10X_thru_TURING, ],
        PROFILES       => [ 'sec2-*', '-sec2-tu10a', '-sec2-*_nouveau*', '-sec2-ga*', '-sec2-gh*', ],
    },

    PR12_44  =>
    {
        NAME           => 'pr12_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.falc_ldx_i' ],
            ['*.o'       , '.text.pvPortMalloc' ],
            ['*.o'       , '.text.DRMCRT_memset' ],
            ['*.o'       , '.text.DRM_DWordAddSame' ],
            ['*.o'       , '.text.DRM_UInt64ToDWord' ],
            ['*.o'       , '.text.vPortFree' ],
            ['*.o'       , '.text.OEM_TEE_BASE_SelwreMemAlloc' ],
            ['*.o'       , '.text.DRM_STK_Init' ],
            ['*.o'       , '.text.DRM_XB_UnpackBinary' ],
            ['*.o'       , '.text.DRM_XB_UnpackHeader' ],
            ['*.o'       , '.text.DRM_DWordSub' ],
            ['*.o'       , '.text.DRM_DWordAdd' ],
            ['*.o'       , '.text._DRM_XB_Parse_Object' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORD' ],
            ['*.o'       , '.text.DRM_DWordSubSame' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORD' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUID' ],
            ['*.o'       , '.text.DRMCRT_memcpy' ],
            ['*.o'       , '.text._DRM_XB_Parse_GUIDLIST' ],
            ['*.o'       , '.text.DRM_DWordMult' ],
            ['*.o'       , '.text._DRM_XB_Parse_WORDLIST' ],
            ['*.o'       , '.text.DRM_STK_Alloc' ],
            ['*.o'       , '.text._DRM_XB_Parse_DWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_QWORDLIST' ],
            ['*.o'       , '.text._DRM_XB_Parse_STRUCTLIST' ],
            ['*.o'       , '.text._DRM_XB_AlignData' ],
            ['*.o'       , '.text._DRM_XB_Parse_BYTEARRAY' ],
            ['*.o'       , '.text._DRM_XB_Parse_Container' ],
            ['*.o'       , '.text._XB_IsKnownObjectType' ],
            ['*.o'       , '.text._DRM_XB_Parse_Unknown' ],
            ['*.o'       , '.text._XB_IsObjectTypeAChildOf' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UnknownContainer' ],
            ['*.o'       , '.text._DRM_XB_Parse_UNKNOWN_OBJECT' ],
            ['*.o'       , '.text._XB_CreateNewListItem_UnknownObject' ],
            ['*.o'       , '.text._XB_MapObjectTypeToEntryDescriptionIndex' ],
            ['*.o'       , '.text._XB_CreateNewListItem' ],
            ['*.o'       , '.text._DRM_XB_CheckForContainerFillPatern' ],
            ['*.o'       , '.text._DRM_XB_GetMaxContainerDepth' ],
            ['*.o'       , '.text.DRMCRT_ScrubMemory' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Enter' ],
            ['*.o'       , '.text.OEM_TEE_BASE_CRITSEC_Leave' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_SetKey' ],
            ['*.o'       , '.text.DRM_XB_FindObject' ],
            ['*.o'       , '.text._XB_FindChild' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetCTKID' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_BASE_AllocKeyAES128' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_AllocKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetTKByID' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_CopyKey' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_DeriveTKDFromTK' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_IsKBTypePersistedToDisk' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetKeyDerivationIDSign' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_GetKeyDerivationIDEncrypt' ],
            ['*.o'       , '.text.OEM_TEE_BASE_DeriveKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_KDFCTR_r8_L128' ],
            ['*.o'       , '.text.Oem_Aes_AES128KDFCTR_r8_L128' ],
            ['*.o'       , '.text.DRMCRT_LocalMemcpy' ],
            ['*.o'       , '.text.Oem_Omac1_Sign' ],
            ['*.o'       , '.text._Omac1_GenerateSignInfo' ],
            ['*.o'       , '.text.Oem_Broker_Aes_EncryptOneBlock' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_EncryptOneBlock' ],
            ['*.o'       , '.text.Oem_Aes_EncryptDecryptOneBlock_LWIDIA_LS' ],
            ['*.o'       , '.text._Oem_Aes_EncryptDecryptOneBlockWithSuppliedKey_LWIDIA_LS' ],
            ['*.o'       , '.text.falc_scp_trap' ],
            ['*.o'       , '.text.falc_trapped_dmwrite' ],
            ['*.o'       , '.text.falc_sethi_i' ],
            ['*.o'       , '.text.falc_dmwait' ],
            ['*.o'       , '.text.falc_scp_secret' ],
            ['*.o'       , '.text.falc_scp_mov' ],
            ['*.o'       , '.text.falc_scp_rkey10' ],
            ['*.o'       , '.text.falc_scp_key' ],
            ['*.o'       , '.text.falc_scp_encrypt' ],
            ['*.o'       , '.text.falc_scp_decrypt' ],
            ['*.o'       , '.text.falc_trapped_dmread' ],
            ['*.o'       , '.text.falc_scp_xor' ],
            ['*.o'       , '.text.DRMCRT_LocalMemset' ],
            ['*.o'       , '.text._LShift' ],
            ['*.o'       , '.text._Omac1_GenerateSignTag' ],
            ['*.o'       , '.text.Oem_Broker_IsTEE' ],
            ['*.o'       , '.text.doCleanupAndHalt' ],
            ['*.o'       , '.text.falc_stxb_i' ],
            ['*.o'       , '.text.falc_halt' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_AES128_FreeKey' ],
            ['*.o'       , '.text._RemapTEEFormatError' ],
            ['*.o'       , '.text.DRM_STK_Free' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_BASE_ParseCertificateChain' ],
            ['*.o'       , '.text.DRM_BCERTFORMAT_ParseCertificateChainData' ],
            ['*.o'       , '.text._ParseCertificateChain' ],
            ['*.o'       , '.text.Oem_Broker_MemAlloc' ],
            ['*.o'       , '.text._DRM_BCERTFORMAT_ParseCertificate' ],
            ['*.o'       , '.text._VerifySignature' ],
            ['*.o'       , '.text.Oem_Broker_ECDSA_P256_Verify' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_CACHE_CheckHash' ],
            ['*.o'       , '.text.DRM_HASHCACHE_CheckHash' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECDSA_P256_Verify' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_ECDSA_SHA256_Verify' ],
            ['*.o'       , '.text.OEM_ECDSA_Verify_P256' ],
            ['*.o'       , '.text.OEM_ECDSA_Verify_P256Impl' ],
            ['*.o'       , '.text._Colwert_P256_ModularIntToBigEndianBytesModOrder' ],
            ['*.o'       , '.text.DRM_TEE_IMPL_CACHE_AddHash' ],
            ['*.o'       , '.text.DRM_HASHCACHE_AddHash' ],
            ['*.o'       , '.text.DRM_STR_UTF8_IsUTF8NullTerminatedData' ],
            ['*.o'       , '.text.DRM_STR_UTF8_VerifyBytes' ],
            ['*.o'       , '.text.DRM_STR_UTF8_ReadCodePoint8' ],
            ['*.o'       , '.text.Oem_Broker_SHA256_CreateDigest' ],
            ['*.o'       , '.text._DRM_BCERTFORMAT_VerifyAdjacentCerts' ],
            ['*.o'       , '.text.DRM_BCERTFORMAT_VerifyChildUsage' ],
            ['*.o'       , '.text._GetChainDataFromCert' ],
            ['*.o'       , '.text._ValidateRootPublicKey' ],
            ['*.o'       , '.text.DRM_BCERTFORMAT_GetCertificate' ],
            ['*.o'       , '.text.Oem_Broker_MemFree' ],
        ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },

    PR13_44  =>
    {
        NAME           => 'pr13_44',
        ALIGNMENT      => 256,
        INPUT_SECTIONS =>
        [
            ['*.o'       , '.text.DRM_B64_EncodeA' ],
            ['*.o'       , '.text.DRM_STR_StringCchCatA' ],
            ['*.o'       , '.text._DRM_XB_AddHierarchy' ],
            ['*.o'       , '.text.Colwert_P256_DigitsToBigEndianBytes' ],
            ['*.o'       , '.text.Colwert_BigEndianBytesToDigits' ],
            ['*.o'       , '.text.OEM_TEE_BASE_ECC256_GenerateTeeSigningPrivateKey' ],
            ['*.o'       , '.text.OEM_TEE_CRYPTO_ECC256_GenerateTeeSigningPrivateKey' ],
            ['*.o'       , '.text.OEM_TEE_BASE_GetExtendedVersion' ],
            ['*.o'       , '.text.DRM_TEE_BASE_IMPL_GetVersionInformation' ],
            ['*.o'       , '.text.DRM_TEE_BASE_GetFeatureInformation' ],
            ['*.o'       , '.text._VerifyRevocationDataSigningPubKeyAgainstAllowList' ],
       ],

        ENABLED_ON     => [ GA102_and_later, ],
        PROFILES       => [ 'sec2-ga*', '-sec2-gh*', '-sec2-*_nouveau*', ],
    },
];

# return the data of PR LS Overlays definition
return $imemOverlaysTaskPrLs;

