
 /*
  * Copyright 2021 by LWPU Corporation.  All rights reserved.  All
  * information contained herein is proprietary and confidential to LWPU
  * Corporation.  Any use, reproduction, or disclosure without the written
  * permission of LWPU Corporation is prohibited.
  */

/*
 * DO NOT EDIT - THIS FILE WAS AUTOMATICALLY GENERATED by x509_cert_to_c.py.
 */

#ifndef _X509_CERT_TO_C_H
#define _X509_CERT_TO_C_H

typedef struct Cert_Structure
{
     LwU16 length;
     LwU16 reserved;
     LwU8  root_hash[32];
     unsigned char Fmc_X509_Ak_Nonca_Cert_Ro_Data[1024];
} CERT_STRUCT;

CERT_STRUCT Ak_Cert_Structure GCC_ATTRIB_SECTION("dmem_spdm", "_Ak_Cert_Structure") = 
{
    0,
    0,
    { 0 },
    {
0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x90, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x61, 0x53, 0xbc, 0x26, 0x12, 0x59, 0x80, 0x0f, 0x4b, 0x54, 0xf9, 0xbc, 0xe7, 0x56, 0x1e, 0x4f, 0x75, 0x5d, 0xc1, 0x9c, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x4a, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x1b, 0x30, 0x19, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x12, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x1e, 0x30, 0x1c, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x15, 0x47, 0x41, 0x31, 0x30, 0x30, 0x20, 0x41, 0x50, 0x4d, 0x20, 0x44, 0x65, 0x76, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31, 0x31, 0x30, 0x32, 0x31, 0x30, 0x39, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0x0f, 0x32, 0x30, 0x32, 0x32, 0x31, 0x30, 0x32, 0x31, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x4a, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x1b, 0x30, 0x19, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x12, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x20, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x1e, 0x30, 0x1c, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x15, 0x47, 0x41, 0x31, 0x30, 0x30, 0x20, 0x41, 0x50, 0x4d, 0x20, 0x44, 0x65, 0x76, 0x20, 0x41, 0x4b, 0x20, 0x43, 0x65, 0x72, 0x74, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x93, 0xec, 0x4d, 0x02, 0xd2, 0xa7, 0x96, 0x6c, 0x70, 0x0d, 0x14, 0x23, 0x83, 0xd8, 0xc9, 0xc4, 0xc7, 0x39, 0x82, 0xae, 0x39, 0xfa, 0x9b, 0x63, 0xf3, 0xa4, 0xc3, 0x13, 0xef, 0x7c, 0xca, 0x88, 0x44, 0x00, 0x61, 0x39, 0x86, 0x6b, 0x2e, 0x33, 0x7e, 0x1c, 0x06, 0xcd, 0x41, 0xf3, 0x55, 0x20, 0xe3, 0x15, 0x06, 0x43, 0x28, 0x59, 0x1d, 0x96, 0x5f, 0xa4, 0xb3, 0x05, 0x64, 0x16, 0x00, 0x77, 0xa3, 0x52, 0x30, 0x50, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x04, 0xb0, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x54, 0x5e, 0xb1, 0xfd, 0xda, 0x6e, 0x46, 0xa1, 0x81, 0x0b, 0x76, 0x2f, 0x6c, 0x5d, 0x17, 0xa5, 0x92, 0x34, 0x42, 0x16, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xaf, 0x0d, 0x35, 0x89, 0xb9, 0x2c, 0xff, 0x5f, 0x8f, 0xa3, 0xaa, 0x8b, 0x07, 0xef, 0x2c, 0x5b, 0x26, 0x86, 0x4e, 0x31, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xac, 0xe8, 0xf4, 0xa3, 0xa8, 0x90, 0x9b, 0xea, 0x4b, 0x02, 0xfb, 0xd4, 0xc4, 0x7d, 0x2d, 0x98, 0x31, 0xf3, 0xe0, 0xb3, 0x21, 0xec, 0x34, 0x79, 0xc4, 0xd8, 0x17, 0x21, 0xbf, 0xf0, 0xa5, 0x0c, 0x02, 0x20, 0x6d, 0xe6, 0x8f, 0x62, 0xa8, 0x17, 0x5e, 0x46, 0x0e, 0x84, 0x8a, 0xff, 0x02, 0xc3, 0x08, 0xd9, 0x3d, 0x2a, 0xc6, 0xc1, 0xb5, 0x37, 0xb4, 0x1d, 0xab, 0xb7, 0x2e, 0xad, 0xbc, 0xb2, 0x6c, 0x9b,
    }
};


// signature_value
#define OctetBitString_0_2_Offset  420
#define OctetBitString_0_2_Len_In_Byte  74
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[72]; 
}  __attribute__((packed)) OctetBitString_0_2;



//for OctetBitString_0_2 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 591;
//end record;


// sha256_ecdsa
#define SignedDigestAlgorithmId_0_1_0_Offset  410
#define SignedDigestAlgorithmId_0_1_0_Len_In_Byte  10
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[8]; 
}  __attribute__((packed)) SignedDigestAlgorithmId_0_1_0;



//for SignedDigestAlgorithmId_0_1_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 79;
//end record;



#define SignedDigestAlgorithm_0_1_Offset  408
#define SignedDigestAlgorithm_0_1_Len_In_Byte  12
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    SignedDigestAlgorithmId_0_1_0  Val0; // sha256_ecdsa
}  __attribute__((packed)) SignedDigestAlgorithm_0_1;



//for SignedDigestAlgorithm_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 95;
//end record;


// key_identifier
#define OctetString_0_0_7_2_1_0_0_Offset  386
#define OctetString_0_0_7_2_1_0_0_Len_In_Byte  22
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[20]; 
}  __attribute__((packed)) OctetString_0_0_7_2_1_0_0;



//for OctetString_0_0_7_2_1_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 175;
//end record;



#define AuthorityKeyIdentifier_0_0_7_2_1_0_Offset  384
#define AuthorityKeyIdentifier_0_0_7_2_1_0_Len_In_Byte  24
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    OctetString_0_0_7_2_1_0_0  Val0; // key_identifier
}  __attribute__((packed)) AuthorityKeyIdentifier_0_0_7_2_1_0;



//for AuthorityKeyIdentifier_0_0_7_2_1_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 191;
//end record;


// extn_value
#define ParsableOctetString_0_0_7_2_1_Offset  382
#define ParsableOctetString_0_0_7_2_1_Len_In_Byte  26
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    AuthorityKeyIdentifier_0_0_7_2_1_0  Val0; 
}  __attribute__((packed)) ParsableOctetString_0_0_7_2_1;



//for ParsableOctetString_0_0_7_2_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 207;
//end record;


// authority_key_identifier
#define ExtensionId_0_0_7_2_0_Offset  377
#define ExtensionId_0_0_7_2_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) ExtensionId_0_0_7_2_0;



//for ExtensionId_0_0_7_2_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define Extension_0_0_7_2_Offset  375
#define Extension_0_0_7_2_Len_In_Byte  33
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    ExtensionId_0_0_7_2_0  Val0; // authority_key_identifier
    ParsableOctetString_0_0_7_2_1  Val1; // extn_value
}  __attribute__((packed)) Extension_0_0_7_2;



//for Extension_0_0_7_2 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 263;
//end record;


// extn_value
#define ParsableOctetString_0_0_7_1_1_Offset  351
#define ParsableOctetString_0_0_7_1_1_Len_In_Byte  24
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[22]; 
}  __attribute__((packed)) ParsableOctetString_0_0_7_1_1;



//for ParsableOctetString_0_0_7_1_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 191;
//end record;


// key_identifier
#define ExtensionId_0_0_7_1_0_Offset  346
#define ExtensionId_0_0_7_1_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) ExtensionId_0_0_7_1_0;



//for ExtensionId_0_0_7_1_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define Extension_0_0_7_1_Offset  344
#define Extension_0_0_7_1_Len_In_Byte  31
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    ExtensionId_0_0_7_1_0  Val0; // key_identifier
    ParsableOctetString_0_0_7_1_1  Val1; // extn_value
}  __attribute__((packed)) Extension_0_0_7_1;



//for Extension_0_0_7_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 247;
//end record;



#define KeyUsage_0_0_7_0_2_0_Offset  340
#define KeyUsage_0_0_7_0_2_0_Len_In_Byte  4
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[2]; 
}  __attribute__((packed)) KeyUsage_0_0_7_0_2_0;



//for KeyUsage_0_0_7_0_2_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 31;
//end record;


// extn_value
#define ParsableOctetString_0_0_7_0_2_Offset  338
#define ParsableOctetString_0_0_7_0_2_Len_In_Byte  6
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    KeyUsage_0_0_7_0_2_0  Val0; 
}  __attribute__((packed)) ParsableOctetString_0_0_7_0_2;



//for ParsableOctetString_0_0_7_0_2 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 47;
//end record;


// critical
#define Boolean_0_0_7_0_1_Offset  335
#define Boolean_0_0_7_0_1_Len_In_Byte  3
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0; 
}  __attribute__((packed)) Boolean_0_0_7_0_1;



//for Boolean_0_0_7_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 23;
//end record;


// key_usage
#define ExtensionId_0_0_7_0_0_Offset  330
#define ExtensionId_0_0_7_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) ExtensionId_0_0_7_0_0;



//for ExtensionId_0_0_7_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define Extension_0_0_7_0_Offset  328
#define Extension_0_0_7_0_Len_In_Byte  16
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    ExtensionId_0_0_7_0_0  Val0; // key_usage
    Boolean_0_0_7_0_1  Val1; // critical
    ParsableOctetString_0_0_7_0_2  Val2; // extn_value
}  __attribute__((packed)) Extension_0_0_7_0;



//for Extension_0_0_7_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 79;
//    Val2 at 0  range 80 .. 127;
//end record;



#define Extensions_0_0_7_Offset  324
#define Extensions_0_0_7_Len_In_Byte  84
typedef struct {
    LwU8  Tag; 
    LwU8  Len[3]; 
    Extension_0_0_7_0  Val0; 
    Extension_0_0_7_1  Val1; 
    Extension_0_0_7_2  Val2; 
}  __attribute__((packed)) Extensions_0_0_7;



//for Extensions_0_0_7 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 31;
//    Val0 at 0  range 32 .. 159;
//    Val1 at 0  range 160 .. 407;
//    Val2 at 0  range 408 .. 671;
//end record;


// public_key
#define ECPointBitString_0_0_6_1_Offset  256
#define ECPointBitString_0_0_6_1_Len_In_Byte  68
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[66]; 
}  __attribute__((packed)) ECPointBitString_0_0_6_1;



//for ECPointBitString_0_0_6_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 543;
//end record;


// secp256r1
#define NamedLwrve_0_0_6_0_1_Offset  246
#define NamedLwrve_0_0_6_0_1_Len_In_Byte  10
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[8]; 
}  __attribute__((packed)) NamedLwrve_0_0_6_0_1;



//for NamedLwrve_0_0_6_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 79;
//end record;


// ec
#define PublicKeyAlgorithmId_0_0_6_0_0_Offset  237
#define PublicKeyAlgorithmId_0_0_6_0_0_Len_In_Byte  9
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[7]; 
}  __attribute__((packed)) PublicKeyAlgorithmId_0_0_6_0_0;



//for PublicKeyAlgorithmId_0_0_6_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 71;
//end record;



#define PublicKeyAlgorithm_0_0_6_0_Offset  235
#define PublicKeyAlgorithm_0_0_6_0_Len_In_Byte  21
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    PublicKeyAlgorithmId_0_0_6_0_0  Val0; // ec
    NamedLwrve_0_0_6_0_1  Val1; // secp256r1
}  __attribute__((packed)) PublicKeyAlgorithm_0_0_6_0;



//for PublicKeyAlgorithm_0_0_6_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 87;
//    Val1 at 0  range 88 .. 167;
//end record;



#define PublicKeyInfo_0_0_6_Offset  233
#define PublicKeyInfo_0_0_6_Len_In_Byte  91
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    PublicKeyAlgorithm_0_0_6_0  Val0; 
    ECPointBitString_0_0_6_1  Val1; // public_key
}  __attribute__((packed)) PublicKeyInfo_0_0_6;



//for PublicKeyInfo_0_0_6 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 183;
//    Val1 at 0  range 184 .. 727;
//end record;


// value
#define UTF8String_0_0_5_2_0_1_Offset  210
#define UTF8String_0_0_5_2_0_1_Len_In_Byte  23
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[21]; 
}  __attribute__((packed)) UTF8String_0_0_5_2_0_1;



//for UTF8String_0_0_5_2_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 183;
//end record;


// common_name
#define NameType_0_0_5_2_0_0_Offset  205
#define NameType_0_0_5_2_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) NameType_0_0_5_2_0_0;



//for NameType_0_0_5_2_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define NameTypeAndValue_0_0_5_2_0_Offset  203
#define NameTypeAndValue_0_0_5_2_0_Len_In_Byte  30
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameType_0_0_5_2_0_0  Val0; // common_name
    UTF8String_0_0_5_2_0_1  Val1; // value
}  __attribute__((packed)) NameTypeAndValue_0_0_5_2_0;



//for NameTypeAndValue_0_0_5_2_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 239;
//end record;



#define RelativeDistinguishedName_0_0_5_2_Offset  201
#define RelativeDistinguishedName_0_0_5_2_Len_In_Byte  32
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameTypeAndValue_0_0_5_2_0  Val0; 
}  __attribute__((packed)) RelativeDistinguishedName_0_0_5_2;



//for RelativeDistinguishedName_0_0_5_2 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 255;
//end record;


// value
#define UTF8String_0_0_5_1_0_1_Offset  181
#define UTF8String_0_0_5_1_0_1_Len_In_Byte  20
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[18]; 
}  __attribute__((packed)) UTF8String_0_0_5_1_0_1;



//for UTF8String_0_0_5_1_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 159;
//end record;


// organization_name
#define NameType_0_0_5_1_0_0_Offset  176
#define NameType_0_0_5_1_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) NameType_0_0_5_1_0_0;



//for NameType_0_0_5_1_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define NameTypeAndValue_0_0_5_1_0_Offset  174
#define NameTypeAndValue_0_0_5_1_0_Len_In_Byte  27
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameType_0_0_5_1_0_0  Val0; // organization_name
    UTF8String_0_0_5_1_0_1  Val1; // value
}  __attribute__((packed)) NameTypeAndValue_0_0_5_1_0;



//for NameTypeAndValue_0_0_5_1_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 215;
//end record;



#define RelativeDistinguishedName_0_0_5_1_Offset  172
#define RelativeDistinguishedName_0_0_5_1_Len_In_Byte  29
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameTypeAndValue_0_0_5_1_0  Val0; 
}  __attribute__((packed)) RelativeDistinguishedName_0_0_5_1;



//for RelativeDistinguishedName_0_0_5_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 231;
//end record;


// value
#define PrintableString_0_0_5_0_0_1_Offset  168
#define PrintableString_0_0_5_0_0_1_Len_In_Byte  4
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[2]; 
}  __attribute__((packed)) PrintableString_0_0_5_0_0_1;



//for PrintableString_0_0_5_0_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 31;
//end record;


// country_name
#define NameType_0_0_5_0_0_0_Offset  163
#define NameType_0_0_5_0_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) NameType_0_0_5_0_0_0;



//for NameType_0_0_5_0_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define NameTypeAndValue_0_0_5_0_0_Offset  161
#define NameTypeAndValue_0_0_5_0_0_Len_In_Byte  11
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameType_0_0_5_0_0_0  Val0; // country_name
    PrintableString_0_0_5_0_0_1  Val1; // value
}  __attribute__((packed)) NameTypeAndValue_0_0_5_0_0;



//for NameTypeAndValue_0_0_5_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 87;
//end record;



#define RelativeDistinguishedName_0_0_5_0_Offset  159
#define RelativeDistinguishedName_0_0_5_0_Len_In_Byte  13
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameTypeAndValue_0_0_5_0_0  Val0; 
}  __attribute__((packed)) RelativeDistinguishedName_0_0_5_0;



//for RelativeDistinguishedName_0_0_5_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 103;
//end record;



#define RDNSequence_0_0_5_Offset  157
#define RDNSequence_0_0_5_Len_In_Byte  76
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    RelativeDistinguishedName_0_0_5_0  Val0; 
    RelativeDistinguishedName_0_0_5_1  Val1; 
    RelativeDistinguishedName_0_0_5_2  Val2; 
}  __attribute__((packed)) RDNSequence_0_0_5;



//for RDNSequence_0_0_5 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 119;
//    Val1 at 0  range 120 .. 351;
//    Val2 at 0  range 352 .. 607;
//end record;


// not_after
#define GeneralizedTime_0_0_4_1_Offset  140
#define GeneralizedTime_0_0_4_1_Len_In_Byte  17
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[15]; 
}  __attribute__((packed)) GeneralizedTime_0_0_4_1;



//for GeneralizedTime_0_0_4_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 135;
//end record;


// not_before
#define UTCTime_0_0_4_0_Offset  125
#define UTCTime_0_0_4_0_Len_In_Byte  15
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[13]; 
}  __attribute__((packed)) UTCTime_0_0_4_0;



//for UTCTime_0_0_4_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 119;
//end record;



#define Validity_0_0_4_Offset  123
#define Validity_0_0_4_Len_In_Byte  34
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    UTCTime_0_0_4_0  Val0; // not_before
    GeneralizedTime_0_0_4_1  Val1; // not_after
}  __attribute__((packed)) Validity_0_0_4;



//for Validity_0_0_4 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 135;
//    Val1 at 0  range 136 .. 271;
//end record;


// value
#define UTF8String_0_0_3_2_0_1_Offset  100
#define UTF8String_0_0_3_2_0_1_Len_In_Byte  23
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[21]; 
}  __attribute__((packed)) UTF8String_0_0_3_2_0_1;



//for UTF8String_0_0_3_2_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 183;
//end record;


// common_name
#define NameType_0_0_3_2_0_0_Offset  95
#define NameType_0_0_3_2_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) NameType_0_0_3_2_0_0;



//for NameType_0_0_3_2_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define NameTypeAndValue_0_0_3_2_0_Offset  93
#define NameTypeAndValue_0_0_3_2_0_Len_In_Byte  30
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameType_0_0_3_2_0_0  Val0; // common_name
    UTF8String_0_0_3_2_0_1  Val1; // value
}  __attribute__((packed)) NameTypeAndValue_0_0_3_2_0;



//for NameTypeAndValue_0_0_3_2_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 239;
//end record;



#define RelativeDistinguishedName_0_0_3_2_Offset  91
#define RelativeDistinguishedName_0_0_3_2_Len_In_Byte  32
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameTypeAndValue_0_0_3_2_0  Val0; 
}  __attribute__((packed)) RelativeDistinguishedName_0_0_3_2;



//for RelativeDistinguishedName_0_0_3_2 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 255;
//end record;


// value
#define UTF8String_0_0_3_1_0_1_Offset  71
#define UTF8String_0_0_3_1_0_1_Len_In_Byte  20
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[18]; 
}  __attribute__((packed)) UTF8String_0_0_3_1_0_1;



//for UTF8String_0_0_3_1_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 159;
//end record;


// organization_name
#define NameType_0_0_3_1_0_0_Offset  66
#define NameType_0_0_3_1_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) NameType_0_0_3_1_0_0;



//for NameType_0_0_3_1_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define NameTypeAndValue_0_0_3_1_0_Offset  64
#define NameTypeAndValue_0_0_3_1_0_Len_In_Byte  27
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameType_0_0_3_1_0_0  Val0; // organization_name
    UTF8String_0_0_3_1_0_1  Val1; // value
}  __attribute__((packed)) NameTypeAndValue_0_0_3_1_0;



//for NameTypeAndValue_0_0_3_1_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 215;
//end record;



#define RelativeDistinguishedName_0_0_3_1_Offset  62
#define RelativeDistinguishedName_0_0_3_1_Len_In_Byte  29
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameTypeAndValue_0_0_3_1_0  Val0; 
}  __attribute__((packed)) RelativeDistinguishedName_0_0_3_1;



//for RelativeDistinguishedName_0_0_3_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 231;
//end record;


// value
#define PrintableString_0_0_3_0_0_1_Offset  58
#define PrintableString_0_0_3_0_0_1_Len_In_Byte  4
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[2]; 
}  __attribute__((packed)) PrintableString_0_0_3_0_0_1;



//for PrintableString_0_0_3_0_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 31;
//end record;


// country_name
#define NameType_0_0_3_0_0_0_Offset  53
#define NameType_0_0_3_0_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[3]; 
}  __attribute__((packed)) NameType_0_0_3_0_0_0;



//for NameType_0_0_3_0_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 39;
//end record;



#define NameTypeAndValue_0_0_3_0_0_Offset  51
#define NameTypeAndValue_0_0_3_0_0_Len_In_Byte  11
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameType_0_0_3_0_0_0  Val0; // country_name
    PrintableString_0_0_3_0_0_1  Val1; // value
}  __attribute__((packed)) NameTypeAndValue_0_0_3_0_0;



//for NameTypeAndValue_0_0_3_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 55;
//    Val1 at 0  range 56 .. 87;
//end record;



#define RelativeDistinguishedName_0_0_3_0_Offset  49
#define RelativeDistinguishedName_0_0_3_0_Len_In_Byte  13
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    NameTypeAndValue_0_0_3_0_0  Val0; 
}  __attribute__((packed)) RelativeDistinguishedName_0_0_3_0;



//for RelativeDistinguishedName_0_0_3_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 103;
//end record;



#define RDNSequence_0_0_3_Offset  47
#define RDNSequence_0_0_3_Len_In_Byte  76
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    RelativeDistinguishedName_0_0_3_0  Val0; 
    RelativeDistinguishedName_0_0_3_1  Val1; 
    RelativeDistinguishedName_0_0_3_2  Val2; 
}  __attribute__((packed)) RDNSequence_0_0_3;



//for RDNSequence_0_0_3 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 119;
//    Val1 at 0  range 120 .. 351;
//    Val2 at 0  range 352 .. 607;
//end record;


// sha256_ecdsa
#define SignedDigestAlgorithmId_0_0_2_0_Offset  37
#define SignedDigestAlgorithmId_0_0_2_0_Len_In_Byte  10
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[8]; 
}  __attribute__((packed)) SignedDigestAlgorithmId_0_0_2_0;



//for SignedDigestAlgorithmId_0_0_2_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 79;
//end record;



#define SignedDigestAlgorithm_0_0_2_Offset  35
#define SignedDigestAlgorithm_0_0_2_Len_In_Byte  12
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    SignedDigestAlgorithmId_0_0_2_0  Val0; // sha256_ecdsa
}  __attribute__((packed)) SignedDigestAlgorithm_0_0_2;



//for SignedDigestAlgorithm_0_0_2 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 95;
//end record;


// serial_number
#define Integer_0_0_1_Offset  13
#define Integer_0_0_1_Len_In_Byte  22
typedef struct {
    LwU8  Tag; 
    LwU8  Len; 
    LwU8  Val0[20]; 
}  __attribute__((packed)) Integer_0_0_1;



//for Integer_0_0_1 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 15;
//    Val0 at 0  range 16 .. 175;
//end record;


// version
#define Version_0_0_0_Offset  8
#define Version_0_0_0_Len_In_Byte  5
typedef struct {
    LwU8  Tag; 
    LwU8  Len[3]; 
    LwU8  Val0; 
}  __attribute__((packed)) Version_0_0_0;



//for Version_0_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 31;
//    Val0 at 0  range 32 .. 39;
//end record;



#define TbsCertificate_0_0_Offset  4
#define TbsCertificate_0_0_Len_In_Byte  404
typedef struct {
    LwU8  Tag; 
    LwU8  Len[3]; 
    Version_0_0_0  Val0; // version
    Integer_0_0_1  Val1; // serial_number
    SignedDigestAlgorithm_0_0_2  Val2; 
    RDNSequence_0_0_3  Val3; 
    Validity_0_0_4  Val4; 
    RDNSequence_0_0_5  Val5; 
    PublicKeyInfo_0_0_6  Val6; 
    Extensions_0_0_7  Val7; 
}  __attribute__((packed)) TbsCertificate_0_0;



//for TbsCertificate_0_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 31;
//    Val0 at 0  range 32 .. 71;
//    Val1 at 0  range 72 .. 247;
//    Val2 at 0  range 248 .. 343;
//    Val3 at 0  range 344 .. 951;
//    Val4 at 0  range 952 .. 1223;
//    Val5 at 0  range 1224 .. 1831;
//    Val6 at 0  range 1832 .. 2559;
//    Val7 at 0  range 2560 .. 3231;
//end record;



#define Certificate_0_Offset  0
#define Certificate_0_Len_In_Byte  494
typedef struct {
    LwU8  Tag; 
    LwU8  Len[3]; 
    TbsCertificate_0_0  Val0; 
    SignedDigestAlgorithm_0_1  Val1; 
    OctetBitString_0_2  Val2; // signature_value
}  __attribute__((packed)) Certificate_0;



//for Certificate_0 use record
////    Tag at 0  range 0 .. 7;
//    Len at 0  range 8 .. 31;
//    Val0 at 0  range 32 .. 3263;
//    Val1 at 0  range 3264 .. 3359;
//    Val2 at 0  range 3360 .. 3951;
//end record;

#endif  // _X509_CERT_TO_C_H

