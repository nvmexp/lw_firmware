# -*- mode: perl; -*-

# Thermal SOE Hal interface definitions
# For a brief introduction to file format, see README in this directory.

my $thermHal = [

    # defaults for Therm for all interfaces below
    DEFAULTS => [
        GCC_ATTRIBUTES  => 'GCC_ATTRIB_SECTION("imem_resident", "__FUNC__")',
        FLAGS           => ":DIRECT_HAL_CALLS",
    ],

    # HAL Interfaces
    # **************************************************************************

    HAL_INTERFACES => [

        PRE_INIT => [
            DESCRIPTION    => "Initialization",
            RETURN_TYPE    => FLCN_STATUS,
            ARGUMENTS      => void,
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_init", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10          => [ TU102, ],
            _LS10          => [ ALL, -TU102, ],
        ],

         SERVICE_OVERT => [
            DESCRIPTION    => "Service Overtemp Interrupts",
            RETURN_TYPE    => void,
            ARGUMENTS      => void,
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ ALL, ],
        ],

         SERVICE_ALERT => [
            DESCRIPTION          => "Service Overtemp Alert Interrupts",
            RETURN_TYPE          => void,
            ARGUMENTS            => void,
            GCC_ATTRIBUTES       => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS                => ":NO_STUB",

            _LR10                 => [ TU102, ],
            _LS10                 => [ ALL, -TU102, ],
        ],

         SERVICE_ALERT_TIMER_CALLBACK => [
            DESCRIPTION          => "Callback function to Assert/UnAssert SLM",
            RETURN_TYPE          => void,
            ARGUMENTS            => void,
            GCC_ATTRIBUTES       => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS                => ":NO_STUB",

            _LR10                 => [ TU102, ],
            _LS10                 => [ ALL, -TU102, ],
        ],

         GET_TSENSE_MAX => [
            DESCRIPTION    => "Returns maximum internal temperature",
            RETURN_TYPE    => LwTemp,
            ARGUMENTS      => void,
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ ALL, ],
        ],

         GET_TSENSE_THRESHOLDS => [
            DESCRIPTION    => "Returns Tsense threshold values for warn and overt",
            RETURN_TYPE    => FLCN_STATUS,
            ARGUMENTS      => "LwU32 thresholdIdx, LwTemp *pThresholdValue",
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ ALL, ],
        ],

         FORCE_SLOWDOWN => [
            DESCRIPTION    => "Force Thermal Slowdown",
            RETURN_TYPE    => FLCN_STATUS,
            ARGUMENTS      => "LwBool slm, LwU32 periodUs",
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ TU102, ],
            _LS10         => [ ALL, -TU102, ],
        ],

         CHECK_THERMAL_EVENT_STATUS => [
            DESCRIPTION    => "Check thermal event status",
            RETURN_TYPE    => FLCN_STATUS,
            ARGUMENTS      => void,
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ TU102 ],
            _LS10         => [ ALL, -TU102 ],
         ],

          SEND_SLOWDOWN_MESSAGE => [
            DESCRIPTION    => "Send slowdown message to driver",
            RETURN_TYPE    => void,
            ARGUMENTS      => "LwBool slm",
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ ALL, ],
          ],

          SEND_SHUTDOWN_MESSAGE => [
            DESCRIPTION    => "Send shutdown message to driver",
            RETURN_TYPE    => void,
            ARGUMENTS      => void,
            GCC_ATTRIBUTES => 'GCC_ATTRIB_SECTION("imem_therm", "__FUNC__")',
            FLAGS          => ":NO_STUB",

            _LR10         => [ ALL, ],
          ],

        ],   # HAL_INTERFACES
];

# return a reference to the Hal definition
return $thermHal;
