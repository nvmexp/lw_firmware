// LWIDIA_COPYRIGHT_BEGIN
//
// Copyright 2006-2006 by LWPU Corporation.  All rights reserved.  All
// information contained herein is proprietary and confidential to LWPU
// Corporation.  Any use, reproduction, or disclosure without the written
// permission of LWPU Corporation is prohibited.
//
// LWIDIA_COPYRIGHT_END

Policy.Version = 1;

#include "default.pcy"
AddFileId(Out.PriNormal, "$Id: //sw/integ/gpu_drv/stage_rel/diag/mods/mdiag/advschd/policyfiles/multi_test_one.pcy#1 $");

// From email thread.  Charlie suggested (just for sake of argument)
//
// When the second channel of the first instance of trace_3d hits its second 
// EXECUTE method, ilwalidate the semaphore surface bound to that channel.
// Then, during the callback to fix up the fault caused by this invalid 
// surface, ilwalidate the color_1 surface of the channel used by the other 
// trace_3d instance.

// For now just assume we only support Policy.MethodCounter.  We may want to
// have an "execute counter" also

// Lwrly braces are only for clarity, they don't actually do anything
Policy.Test = 1;
{
   Policy.Channel = 2;
   {
      Policy.ProbeSurfaces(Policy.MethodCounter([ 50 ]), ["Sem"]);
      Policy.IlwalidateSurfaces(Policy.MethodCounter([ 50 ]), ["Sem"]);
   }
}
   
// TODO - Do we want to support Policy.OnEvent
Policy.Test = 2;
{
    Policy.Channel = 1;
    {
        // Surface fault looks like a SemAcquireFailure
//	Policy.ProbeSurfaces(Policy.OnEvent,
//	    [ Event.OCEB.SemAcquireFailure ], ["color_1"]); 
        
//	Policy.IlwalidateSurfaces(Policy.OnEvent,
//	    [ Event.OCEB.SemAcquireFailure ], ["color_1"]); 
    }
}

ActionBlock.Define("surface_action");
//    ActionBlock.Add(Action.Scramble());
    ActionBlock.Add(Action.ClearSurfaceFault());
    ActionBlock.Add(Action.ResubmitRunlist());
ActionBlock.End();

Trigger.Define("sem_surface_fault", "surface_action");
    Triger.SetCause(Trigger.OnSurfaceFault(["Sem"]));
Trigger.End();

Trigger.Define("color1_surface_fault", "surface_action");
    Triger.SetCause(Trigger.OnSurfaceFault(["color_1"]));
Trigger.End();
