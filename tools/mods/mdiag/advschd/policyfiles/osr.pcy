// LWIDIA_COPYRIGHT_BEGIN
//
// Copyright 2007-2008 by LWPU Corporation.  All rights reserved.  All
// information contained herein is proprietary and confidential to LWPU
// Corporation.  Any use, reproduction, or disclosure without the written
// permission of LWPU Corporation is prohibited.
//
// LWIDIA_COPYRIGHT_END

Policy.Version(2);

#include "default.pcy"
AddFileId(Out.PriNormal, "$Id:  $");

ActionBlock.Define("on_sem_release");
    Action.Print("***** Semaphore Release Offset 0, data 0x00001111 *****");
    Action.FillSurface(Surface.Name("SemRelease"), 0, 16, ["const", 0x2222]);
ActionBlock.End()

ActionBlock.Define("on_sem_release2");
    Action.Print("***** Semaphore Release Offset 16, data 0x00001111 *****");
    Action.FillSurface(Surface.Name("SemRelease"), 16, 16, ["const", 0x2222]);
ActionBlock.End()

ActionBlock.Define("add_sem_release");
    Action.Print("%c%[%m%] : Add semaphore release");
    Action.HostSemaphoreRelease(Channel.Faulting(), Surface.Name("SemRelease"), 0, 0x1111);
    Action.HostSemaphoreAcquire(Channel.Faulting(), Surface.Name("SemRelease"), 0, 0x2222);
    Action.HostSemaphoreRelease(Channel.Faulting(), Surface.Name("SemRelease"), 16, 0x1111);
ActionBlock.End()

Policy.SetFramebufferAlloc();
Policy.SetDefaultGpuCacheMode();
Policy.Define(Trigger.Start(), Action.CreateSurface("SemRelease2", 32, Gpu.All()));
Policy.Define(Trigger.Start(), Action.CreateSurface("SemRelease", 32, Gpu.All()));
Policy.Define(Trigger.OnMethodWrite(Channel.All(), ["list", 10, 0]), "add_sem_release");
Policy.Define(Trigger.OnSemaphoreRelease(Surface.Name("SemRelease"), 0, 0x1111), "on_sem_release");
Policy.Define(Trigger.OnSemaphoreRelease(Surface.Name("SemRelease"), 16, 0x1111), "on_sem_release2");


