/*
 * LWIDIA_COPYRIGHT_BEGIN
 *
 * Copyright 2008-2018, 2021 by LWPU Corporation.  All rights reserved.  
 * All information contained herein is proprietary and confidential to LWPU
 * Corporation.  Any use, reproduction, or disclosure without the written
 * permission of LWPU Corporation is prohibited.
 *
 * LWIDIA_COPYRIGHT_END
 */

// This file defines all series of methods that form "atomic
// operations", such that we cannot insert additional methods
// (generally semaphore releases) into the middle of them.  See
// atomwrap.h for more information.
//
// An atom definition has the following pseudo-grammar format:
//
//     DEFINE_ATOM classes
//         COMMAND comma_separated_list
//         COMMAND comma_separated_list
//         ...
//     END_ATOM
//
// Where classes is a comma-separated list of:
//
//     class_id:  A single class ID
//     CLASSES_BETWEEN(oldest_class_id, newest_class_id): All classes
//         between oldest_class_id and newest_class_id inclusive, of
//         the same type (i.e. 3D, compute, etc).  For example,
//         CLASSES_BETWEEN(FERMI_A, KEPLER_C) is equivalent to
//         FERMI_A, FERMI_B, FERMI_C, KEPLER_A, KEPLER_B, KEPLER_C.
//     CLASSES_SINCE(class_id): All classes of the same type (3D,
//         compute, etc) as class_id, starting at class_id.
//
// COMMAND is one of the following:
//
//     ONE_OF list_of_methods: The next method in the atom must be one
//             of the indicated methods
//
//     MANY_OF list_of_methods: The next method(s) in the atom are
//             zero or more methods from the indicated list.
//
//     ONE_NOT_OF list_of_methods: The next method in the atom is any
//             method *except* one of the indicated methods.  This
//             command cannot be used for the first method in the
//             atom.
//
//     MANY_NOT_OF list_of_methods: The next method(s) in the atom are
//             zero or more methods that can be anything except one of
//             the methods in the indicated list.
//
//     METHOD_WITH_DATA list_of_methods, mask, data: The next
//             method(s) in the atom must be one of the indicated
//             method.  In addition, the method-data must obey the
//             rule ((method_data & mask) == data).
//
// If you want to specify multiple atoms on a set of indexed methods,
// the following syntax defines multiple atoms at once, indexed by the
// variable "idx".  It is roughly equivalent to "for (idx = 0; idx <
// num_atoms; ++idx) { DEFINE_ATOM ... END_ATOM }":
//
//     DEFINE_ATOMS(num_atoms) classes
//         COMMAND comma_separated_list
//         COMMAND comma_separated_list
//         ...
//     END_ATOM
//
// class_ids and comma_separated_list must be C++ UINT32 expressions.
// C++ comments are allowed.  Note that AtomChannelWrapper ignores
// host methods.
//

//
// NOTE: Do not use VOLTA_B. It is left over from before GV20x was
// renamed Turing. Assume that VOLTA_A is the iteration before
// TURING_A.
//

#ifndef DEFINE_ATOM

// Put any .h files that are needed by the rest of the file here
//
#include "class/cl902d.h" // FERMI_TWOD_A
#include "class/cl9097.h" // FERMI_A
#include "class/cl90c0.h" // FERMI_COMPUTE_A
#include "class/cla097.h" // KEPLER_A
#include "class/cla140.h" // KEPLER_INLINE_TO_MEMORY_B
#include "class/cla297.h" // KEPLER_C
#include "class/cla0c0.h" // KEPLER_COMPUTE_A
#include "class/cla1c0.h" // KEPLER_COMPUTE_B
#include "class/clc197.h" // PASCAL_B
#include "class/clc1c0.h" // PASCAL_COMPUTE_B
#include "class/clc397.h" // VOLTA_A
#include "class/clc5c0.h" // TURING_COMPUTE_A
#include "class/clc597.h" // TURING_A
#include "class/clc697.h" // AMPERE_A
#include "class/clc6c0.h" // AMPERE_COMPUTE_A
#include "class/clc797.h" // AMPERE_B
#include "class/clc7c0.h" // AMPERE_COMPUTE_B

#else

DEFINE_ATOMS(128) FERMI_TWOD_A
    ONE_OF  LW902D_CALL_MME_MACRO(idx)
    MANY_OF LW902D_CALL_MME_DATA(idx)
END_ATOM

DEFINE_ATOMS(128) CLASSES_BETWEEN(FERMI_A, VOLTA_A)
    ONE_OF  LW9097_CALL_MME_MACRO(idx)
    MANY_OF LW9097_CALL_MME_DATA(idx)
END_ATOM

DEFINE_ATOMS(224) CLASSES_SINCE(TURING_A)
    ONE_OF  LWC597_CALL_MME_MACRO(idx)
    MANY_OF LWC597_CALL_MME_DATA(idx)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    MANY_OF LW9097_DRAW_INLINE_VERTEX
END_ATOM

DEFINE_ATOM CLASSES_SINCE(FERMI_A)
    MANY_OF LW9097_DRAW_INLINE_INDEX4X8,
            LW9097_DRAW_INLINE_INDEX,
            LW9097_DRAW_INLINE_INDEX2X16
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_VERTEX3F(0)
    ONE_OF LW9097_SET_VAB_VERTEX3F(1)
    ONE_OF LW9097_SET_VAB_VERTEX3F(2)
    ONE_OF LW9097_SET_VAB_VERTEX3F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_VERTEX4F(0)
    ONE_OF LW9097_SET_VAB_VERTEX4F(1)
    ONE_OF LW9097_SET_VAB_VERTEX4F(2)
    ONE_OF LW9097_SET_VAB_VERTEX4F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_NORMAL3F(0)
    ONE_OF LW9097_SET_VAB_NORMAL3F(1)
    ONE_OF LW9097_SET_VAB_NORMAL3F(2)
    ONE_OF LW9097_SET_VAB_NORMAL3F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_COLOR3F(0)
    ONE_OF LW9097_SET_VAB_COLOR3F(1)
    ONE_OF LW9097_SET_VAB_COLOR3F(2)
    ONE_OF LW9097_SET_VAB_COLOR3F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_COLOR4F(0)
    ONE_OF LW9097_SET_VAB_COLOR4F(1)
    ONE_OF LW9097_SET_VAB_COLOR4F(2)
    ONE_OF LW9097_SET_VAB_COLOR4F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_COLOR4UB(0)
    ONE_OF LW9097_SET_VAB_COLOR4UB(1)
    ONE_OF LW9097_SET_VAB_COLOR4UB(2)
    ONE_OF LW9097_SET_VAB_COLOR4UB(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_TEX_COORD1F(0)
    ONE_OF LW9097_SET_VAB_TEX_COORD1F(1)
    ONE_OF LW9097_SET_VAB_TEX_COORD1F(2)
    ONE_OF LW9097_SET_VAB_TEX_COORD1F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_TEX_COORD2F(0)
    ONE_OF LW9097_SET_VAB_TEX_COORD2F(1)
    ONE_OF LW9097_SET_VAB_TEX_COORD2F(2)
    ONE_OF LW9097_SET_VAB_TEX_COORD2F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_TEX_COORD3F(0)
    ONE_OF LW9097_SET_VAB_TEX_COORD3F(1)
    ONE_OF LW9097_SET_VAB_TEX_COORD3F(2)
    ONE_OF LW9097_SET_VAB_TEX_COORD3F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_TEX_COORD4F(0)
    ONE_OF LW9097_SET_VAB_TEX_COORD4F(1)
    ONE_OF LW9097_SET_VAB_TEX_COORD4F(2)
    ONE_OF LW9097_SET_VAB_TEX_COORD4F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_VERTEX2F(0)
    ONE_OF LW9097_SET_VAB_VERTEX2F(1)
    ONE_OF LW9097_SET_VAB_VERTEX2F(2)
    ONE_OF LW9097_SET_VAB_VERTEX2F(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_NORMAL3S(0)
    ONE_OF LW9097_SET_VAB_NORMAL3S(1)
    ONE_OF LW9097_SET_VAB_NORMAL3S(2)
    ONE_OF LW9097_SET_VAB_NORMAL3S(3)
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(FERMI_A, KEPLER_C)
    ONE_OF LW9097_SET_VAB_DATA(0)
    ONE_OF LW9097_SET_VAB_DATA(1)
    ONE_OF LW9097_SET_VAB_DATA(2)
    ONE_OF LW9097_SET_VAB_DATA(3)
END_ATOM

DEFINE_ATOM CLASSES_SINCE(FERMI_A)
    ONE_OF LW9097_NOTIFY
    ONE_OF LW9097_NO_OPERATION
END_ATOM

// See https://wiki.lwpu.com/fermi/index.php/Fermi_Firmware_Methods
// Technically, we should have all MeShadowScratch methods from 0x00
// to 0x80 here.  But lwrrently, no falcon method uses more than the
// first 3, so let's keep it brief.
DEFINE_ATOM CLASSES_SINCE(FERMI_A)
    ONE_OF LW9097_SET_MME_SHADOW_SCRATCH(0)
    MANY_OF
        LW9097_SET_MME_SHADOW_SCRATCH(1),  LW9097_SET_MME_SHADOW_SCRATCH(2),
        LW9097_SET_MME_SHADOW_SCRATCH(3),  LW9097_SET_MME_SHADOW_SCRATCH(4),
        LW9097_SET_MME_SHADOW_SCRATCH(5),  LW9097_SET_MME_SHADOW_SCRATCH(6),
        LW9097_SET_MME_SHADOW_SCRATCH(7),  LW9097_SET_MME_SHADOW_SCRATCH(8),
        LW9097_SET_MME_SHADOW_SCRATCH(9),  LW9097_SET_MME_SHADOW_SCRATCH(10),
        LW9097_SET_MME_SHADOW_SCRATCH(11), LW9097_SET_MME_SHADOW_SCRATCH(12),
        LW9097_SET_MME_SHADOW_SCRATCH(13), LW9097_SET_MME_SHADOW_SCRATCH(14),
        LW9097_SET_MME_SHADOW_SCRATCH(15), LW9097_SET_MME_SHADOW_SCRATCH(16)
    ONE_OF
        LW9097_SET_FALCON00, LW9097_SET_FALCON01, LW9097_SET_FALCON02,
        LW9097_SET_FALCON03, LW9097_SET_FALCON04, LW9097_SET_FALCON05,
        LW9097_SET_FALCON06, LW9097_SET_FALCON07, LW9097_SET_FALCON08,
        LW9097_SET_FALCON09, LW9097_SET_FALCON10, LW9097_SET_FALCON11,
        LW9097_SET_FALCON12, LW9097_SET_FALCON13, LW9097_SET_FALCON14,
        LW9097_SET_FALCON15, LW9097_SET_FALCON16, LW9097_SET_FALCON17,
        LW9097_SET_FALCON18, LW9097_SET_FALCON19, LW9097_SET_FALCON20,
        LW9097_SET_FALCON21, LW9097_SET_FALCON22, LW9097_SET_FALCON23,
        LW9097_SET_FALCON24, LW9097_SET_FALCON25, LW9097_SET_FALCON26,
        LW9097_SET_FALCON27, LW9097_SET_FALCON28, LW9097_SET_FALCON29,
        LW9097_SET_FALCON30, LW9097_SET_FALCON31
    MANY_OF LW9097_NO_OPERATION
END_ATOM

DEFINE_ATOMS(128) CLASSES_SINCE(FERMI_COMPUTE_A)
    ONE_OF LW90C0_CALL_MME_MACRO(idx)
    MANY_OF LW90C0_CALL_MME_DATA(idx)
END_ATOM

DEFINE_ATOM CLASSES_SINCE(KEPLER_INLINE_TO_MEMORY_B)
    ONE_OF LWA140_LAUNCH_DMA
    MANY_OF LWA140_LOAD_INLINE_DATA
END_ATOM

DEFINE_ATOM CLASSES_SINCE(KEPLER_COMPUTE_A)
    ONE_OF LWA0C0_LAUNCH_DMA
    MANY_OF LWA0C0_LOAD_INLINE_DATA
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(KEPLER_A, VOLTA_A)
    ONE_OF LWA097_LAUNCH_DMA
    MANY_OF LWA097_LOAD_INLINE_DATA
END_ATOM

DEFINE_ATOM CLASSES_SINCE(TURING_A)
    ONE_OF LWC597_LAUNCH_DMA
    MANY_OF LWC597_LOAD_INLINE_DATA
END_ATOM

DEFINE_ATOM CLASSES_SINCE(PASCAL_COMPUTE_B)
    ONE_OF LWC1C0_FE_ATOMIC_SEQUENCE_BEGIN
    MANY_NOT_OF LWC1C0_FE_ATOMIC_SEQUENCE_END
    ONE_OF LWC1C0_FE_ATOMIC_SEQUENCE_END
END_ATOM

DEFINE_ATOM CLASSES_SINCE(TURING_COMPUTE_A)
    ONE_OF LWC5C0_SET_INLINE_QMD_ADDRESS_A
    ONE_OF LWC5C0_SET_INLINE_QMD_ADDRESS_B
    MANY_OF
        LWC5C0_LOAD_INLINE_QMD_DATA(0),  LWC5C0_LOAD_INLINE_QMD_DATA(1),
        LWC5C0_LOAD_INLINE_QMD_DATA(2),  LWC5C0_LOAD_INLINE_QMD_DATA(3),
        LWC5C0_LOAD_INLINE_QMD_DATA(4),  LWC5C0_LOAD_INLINE_QMD_DATA(5),
        LWC5C0_LOAD_INLINE_QMD_DATA(6),  LWC5C0_LOAD_INLINE_QMD_DATA(7),
        LWC5C0_LOAD_INLINE_QMD_DATA(8),  LWC5C0_LOAD_INLINE_QMD_DATA(9),
        LWC5C0_LOAD_INLINE_QMD_DATA(10), LWC5C0_LOAD_INLINE_QMD_DATA(11),
        LWC5C0_LOAD_INLINE_QMD_DATA(12), LWC5C0_LOAD_INLINE_QMD_DATA(13),
        LWC5C0_LOAD_INLINE_QMD_DATA(14), LWC5C0_LOAD_INLINE_QMD_DATA(15),
        LWC5C0_LOAD_INLINE_QMD_DATA(16), LWC5C0_LOAD_INLINE_QMD_DATA(17),
        LWC5C0_LOAD_INLINE_QMD_DATA(18), LWC5C0_LOAD_INLINE_QMD_DATA(19),
        LWC5C0_LOAD_INLINE_QMD_DATA(20), LWC5C0_LOAD_INLINE_QMD_DATA(21),
        LWC5C0_LOAD_INLINE_QMD_DATA(22), LWC5C0_LOAD_INLINE_QMD_DATA(23),
        LWC5C0_LOAD_INLINE_QMD_DATA(24), LWC5C0_LOAD_INLINE_QMD_DATA(25),
        LWC5C0_LOAD_INLINE_QMD_DATA(26), LWC5C0_LOAD_INLINE_QMD_DATA(27),
        LWC5C0_LOAD_INLINE_QMD_DATA(28), LWC5C0_LOAD_INLINE_QMD_DATA(29),
        LWC5C0_LOAD_INLINE_QMD_DATA(30), LWC5C0_LOAD_INLINE_QMD_DATA(31),
        LWC5C0_LOAD_INLINE_QMD_DATA(32), LWC5C0_LOAD_INLINE_QMD_DATA(33),
        LWC5C0_LOAD_INLINE_QMD_DATA(34), LWC5C0_LOAD_INLINE_QMD_DATA(35),
        LWC5C0_LOAD_INLINE_QMD_DATA(36), LWC5C0_LOAD_INLINE_QMD_DATA(37),
        LWC5C0_LOAD_INLINE_QMD_DATA(38), LWC5C0_LOAD_INLINE_QMD_DATA(39),
        LWC5C0_LOAD_INLINE_QMD_DATA(40), LWC5C0_LOAD_INLINE_QMD_DATA(41),
        LWC5C0_LOAD_INLINE_QMD_DATA(42), LWC5C0_LOAD_INLINE_QMD_DATA(43),
        LWC5C0_LOAD_INLINE_QMD_DATA(44), LWC5C0_LOAD_INLINE_QMD_DATA(45),
        LWC5C0_LOAD_INLINE_QMD_DATA(46), LWC5C0_LOAD_INLINE_QMD_DATA(47),
        LWC5C0_LOAD_INLINE_QMD_DATA(48), LWC5C0_LOAD_INLINE_QMD_DATA(49),
        LWC5C0_LOAD_INLINE_QMD_DATA(50), LWC5C0_LOAD_INLINE_QMD_DATA(51),
        LWC5C0_LOAD_INLINE_QMD_DATA(52), LWC5C0_LOAD_INLINE_QMD_DATA(53),
        LWC5C0_LOAD_INLINE_QMD_DATA(54), LWC5C0_LOAD_INLINE_QMD_DATA(55),
        LWC5C0_LOAD_INLINE_QMD_DATA(56), LWC5C0_LOAD_INLINE_QMD_DATA(57),
        LWC5C0_LOAD_INLINE_QMD_DATA(58), LWC5C0_LOAD_INLINE_QMD_DATA(59),
        LWC5C0_LOAD_INLINE_QMD_DATA(60), LWC5C0_LOAD_INLINE_QMD_DATA(61),
        LWC5C0_LOAD_INLINE_QMD_DATA(62), LWC5C0_LOAD_INLINE_QMD_DATA(63),
        LWC5C0_LOAD_INLINE_QMD_DATA(64), LWC5C0_LOAD_INLINE_QMD_DATA(65),
        LWC5C0_LOAD_INLINE_QMD_DATA(66), LWC5C0_LOAD_INLINE_QMD_DATA(67),
        LWC5C0_LOAD_INLINE_QMD_DATA(68), LWC5C0_LOAD_INLINE_QMD_DATA(69),
        LWC5C0_LOAD_INLINE_QMD_DATA(70), LWC5C0_LOAD_INLINE_QMD_DATA(71),
        LWC5C0_LOAD_INLINE_QMD_DATA(72), LWC5C0_LOAD_INLINE_QMD_DATA(73),
        LWC5C0_LOAD_INLINE_QMD_DATA(74), LWC5C0_LOAD_INLINE_QMD_DATA(75),
        LWC5C0_LOAD_INLINE_QMD_DATA(76), LWC5C0_LOAD_INLINE_QMD_DATA(77),
        LWC5C0_LOAD_INLINE_QMD_DATA(78), LWC5C0_LOAD_INLINE_QMD_DATA(79),
        LWC5C0_LOAD_INLINE_QMD_DATA(80), LWC5C0_LOAD_INLINE_QMD_DATA(81),
        LWC5C0_LOAD_INLINE_QMD_DATA(82), LWC5C0_LOAD_INLINE_QMD_DATA(83),
        LWC5C0_LOAD_INLINE_QMD_DATA(84), LWC5C0_LOAD_INLINE_QMD_DATA(85),
        LWC5C0_LOAD_INLINE_QMD_DATA(86), LWC5C0_LOAD_INLINE_QMD_DATA(87),
        LWC5C0_LOAD_INLINE_QMD_DATA(88), LWC5C0_LOAD_INLINE_QMD_DATA(89),
        LWC5C0_LOAD_INLINE_QMD_DATA(90), LWC5C0_LOAD_INLINE_QMD_DATA(91),
        LWC5C0_LOAD_INLINE_QMD_DATA(92), LWC5C0_LOAD_INLINE_QMD_DATA(93),
        LWC5C0_LOAD_INLINE_QMD_DATA(94), LWC5C0_LOAD_INLINE_QMD_DATA(95)
END_ATOM

DEFINE_ATOM CLASSES_SINCE(PASCAL_B)
    ONE_OF LWC197_FE_ATOMIC_SEQUENCE_BEGIN
    MANY_NOT_OF LWC197_FE_ATOMIC_SEQUENCE_END
    ONE_OF LWC197_FE_ATOMIC_SEQUENCE_END
END_ATOM

DEFINE_ATOM CLASSES_BETWEEN(KEPLER_COMPUTE_A, TURING_COMPUTE_A)
    ONE_OF LWA0C0_SEND_PCAS_A
    MANY_OF LWA0C0_SEND_PCAS_B
    MANY_OF LWA0C0_SEND_SIGNALING_PCAS_B
END_ATOM

DEFINE_ATOM CLASSES_SINCE(AMPERE_COMPUTE_A)
    ONE_OF LWA0C0_SEND_PCAS_A
    MANY_OF LWA0C0_SEND_PCAS_B
    MANY_OF LWA0C0_SEND_SIGNALING_PCAS_B
    MANY_OF LWC6C0_SEND_SIGNALING_PCAS2_B
END_ATOM

DEFINE_ATOM CLASSES_SINCE(KEPLER_COMPUTE_B)
    ONE_OF LWA1C0_SET_REPORT_SEMAPHORE_A
    ONE_OF LWA1C0_SET_REPORT_SEMAPHORE_B
    ONE_OF LWA1C0_SET_REPORT_SEMAPHORE_C
    ONE_OF LWA1C0_SET_REPORT_SEMAPHORE_D
END_ATOM

DEFINE_ATOM CLASSES_SINCE(AMPERE_COMPUTE_B)
    ONE_OF LWC7C0_SET_REPORT_SEMAPHORE_ADDRESS_LOWER
    ONE_OF LWC7C0_SET_REPORT_SEMAPHORE_ADDRESS_UPPER
    ONE_OF LWC7C0_SET_REPORT_SEMAPHORE_PAYLOAD_LOWER
    ONE_OF LWC7C0_SET_REPORT_SEMAPHORE_PAYLOAD_UPPER
    ONE_OF LWC7C0_REPORT_SEMAPHORE_EXELWTE
END_ATOM
#endif
