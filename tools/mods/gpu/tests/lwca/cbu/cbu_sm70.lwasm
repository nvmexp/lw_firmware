
.headerflags    @"EF_LWDA_TEXMODE_UNIFIED EF_LWDA_64BIT_ADDRESS EF_LWDA_SM70 EF_LWDA_PTX_SM(EF_LWDA_SM70)"

//--------------------- .lw.info                  --------------------------
.section    .lw.info,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.Bra64x1Divergence_SS_END - .Bra64x1Divergence_SS_START)
.align        4
    .Bra64x1Divergence_SS_START:
        .word    index@(Bra64x1Divergence)
        .word    0x00000000
.align        4
    .Bra64x1Divergence_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.Bra64x1Divergence_SF_END - .Bra64x1Divergence_SF_START)
.align        4
    .Bra64x1Divergence_SF_START:
        .word    index@(Bra64x1Divergence)
        .word    0x00000000
.align        4
    .Bra64x1Divergence_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraLinearDivergence_SS_END - .BraLinearDivergence_SS_START)
.align        4
    .BraLinearDivergence_SS_START:
        .word    index@(BraLinearDivergence)
        .word    0x00000000
.align        4
    .BraLinearDivergence_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraLinearDivergence_SF_END - .BraLinearDivergence_SF_START)
.align        4
    .BraLinearDivergence_SF_START:
        .word    index@(BraLinearDivergence)
        .word    0x00000000
.align        4
    .BraLinearDivergence_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraUBinaryDivergenceHighExit_SS_END - .BraUBinaryDivergenceHighExit_SS_START)
.align        4
    .BraUBinaryDivergenceHighExit_SS_START:
        .word    index@(BraUBinaryDivergenceHighExit)
        .word    0x00000000
.align        4
    .BraUBinaryDivergenceHighExit_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraUBinaryDivergenceHighExit_SF_END - .BraUBinaryDivergenceHighExit_SF_START)
.align        4
    .BraUBinaryDivergenceHighExit_SF_START:
        .word    index@(BraUBinaryDivergenceHighExit)
        .word    0x00000000
.align        4
    .BraUBinaryDivergenceHighExit_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraUBinaryDivergenceLowExit_SS_END - .BraUBinaryDivergenceLowExit_SS_START)
.align        4
    .BraUBinaryDivergenceLowExit_SS_START:
        .word    index@(BraUBinaryDivergenceLowExit)
        .word    0x00000000
.align        4
    .BraUBinaryDivergenceLowExit_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraUBinaryDivergenceLowExit_SF_END - .BraUBinaryDivergenceLowExit_SF_START)
.align        4
    .BraUBinaryDivergenceLowExit_SF_START:
        .word    index@(BraUBinaryDivergenceLowExit)
        .word    0x00000000
.align        4
    .BraUBinaryDivergenceLowExit_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraColwExit_SS_END - .BraColwExit_SS_START)
.align        4
    .BraColwExit_SS_START:
        .word    index@(BraColwExit)
        .word    0x00000000
.align        4
    .BraColwExit_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraColwExit_SF_END - .BraColwExit_SF_START)
.align        4
    .BraColwExit_SF_START:
        .word    index@(BraColwExit)
        .word    0x00000000
.align        4
    .BraColwExit_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraColwWarpSync_SS_END - .BraColwWarpSync_SS_START)
.align        4
    .BraColwWarpSync_SS_START:
        .word    index@(BraColwWarpSync)
        .word    0x00000000
.align        4
    .BraColwWarpSync_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraColwWarpSync_SF_END - .BraColwWarpSync_SF_START)
.align        4
    .BraColwWarpSync_SF_START:
        .word    index@(BraColwWarpSync)
        .word    0x00000000
.align        4
    .BraColwWarpSync_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraDivWarpSync_SS_END - .BraDivWarpSync_SS_START)
.align        4
    .BraDivWarpSync_SS_START:
        .word    index@(BraDivWarpSync)
        .word    0x00000000
.align        4
    .BraDivWarpSync_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraDivWarpSync_SF_END - .BraDivWarpSync_SF_START)
.align        4
    .BraDivWarpSync_SF_START:
        .word    index@(BraDivWarpSync)
        .word    0x00000000
.align        4
    .BraDivWarpSync_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.BraDivExit_SS_END - .BraDivExit_SS_START)
.align        4
    .BraDivExit_SS_START:
        .word    index@(BraDivExit)
        .word    0x00000000
.align        4
    .BraDivExit_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.BraDivExit_SF_END - .BraDivExit_SF_START)
.align        4
    .BraDivExit_SF_START:
        .word    index@(BraDivExit)
        .word    0x00000000
.align        4
    .BraDivExit_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.Brx32xMultiway_SS_END - .Brx32xMultiway_SS_START)
.align        4
    .Brx32xMultiway_SS_START:
        .word    index@(Brx32xMultiway)
        .word    0x00000000
.align        4
    .Brx32xMultiway_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.Brx32xMultiway_SF_END - .Brx32xMultiway_SF_START)
.align        4
    .Brx32xMultiway_SF_START:
        .word    index@(Brx32xMultiway)
        .word    0x00000000
.align        4
    .Brx32xMultiway_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.Jmx32xMultiway_SS_END - .Jmx32xMultiway_SS_START)
.align        4
    .Jmx32xMultiway_SS_START:
        .word    index@(Jmx32xMultiway)
        .word    0x00000000
.align        4
    .Jmx32xMultiway_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.Jmx32xMultiway_SF_END - .Jmx32xMultiway_SF_START)
.align        4
    .Jmx32xMultiway_SF_START:
        .word    index@(Jmx32xMultiway)
        .word    0x00000000
.align        4
    .Jmx32xMultiway_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.ExitVerifyAtExit_SS_END - .ExitVerifyAtExit_SS_START)
.align        4
    .ExitVerifyAtExit_SS_START:
        .word    index@(ExitVerifyAtExit)
        .word    0x00000000
.align        4
    .ExitVerifyAtExit_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.ExitVerifyAtExit_SF_END - .ExitVerifyAtExit_SF_START)
.align        4
    .ExitVerifyAtExit_SF_START:
        .word    index@(ExitVerifyAtExit)
        .word    0x00000000
.align        4
    .ExitVerifyAtExit_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.PairWiseProducerConsumer_SS_END - .PairWiseProducerConsumer_SS_START)
.align        4
    .PairWiseProducerConsumer_SS_START:
        .word    index@(PairWiseProducerConsumer)
        .word    0x00000000
.align        4
    .PairWiseProducerConsumer_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.PairWiseProducerConsumer_SF_END - .PairWiseProducerConsumer_SF_START)
.align        4
    .PairWiseProducerConsumer_SF_START:
        .word    index@(PairWiseProducerConsumer)
        .word    0x00000000
.align        4
    .PairWiseProducerConsumer_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.SProducerMConsumerBssyBsyn_SS_END - .SProducerMConsumerBssyBsyn_SS_START)
.align        4
    .SProducerMConsumerBssyBsyn_SS_START:
        .word    index@(SProducerMConsumerBssyBsyn)
        .word    0x00000000
.align        4
    .SProducerMConsumerBssyBsyn_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.SProducerMConsumerBssyBsyn_SF_END - .SProducerMConsumerBssyBsyn_SF_START)
.align        4
    .SProducerMConsumerBssyBsyn_SF_START:
        .word    index@(SProducerMConsumerBssyBsyn)
        .word    0x00000000
.align        4
    .SProducerMConsumerBssyBsyn_SF_END:

//----- lwinfo : EIATTR_MIN_STACK_SIZE
.align        4
        .byte    0x04, 0x12
        .short    (.SProducerMConsumerWarpSync_SS_END - .SProducerMConsumerWarpSync_SS_START)
.align        4
    .SProducerMConsumerWarpSync_SS_START:
        .word    index@(SProducerMConsumerWarpSync)
        .word    0x00000000
.align        4
    .SProducerMConsumerWarpSync_SS_END:

//----- lwinfo : EIATTR_FRAME_SIZE
.align        4
        .byte    0x04, 0x11
        .short    (.SProducerMConsumerWarpSync_SF_END - .SProducerMConsumerWarpSync_SF_START)
.align        4
    .SProducerMConsumerWarpSync_SF_START:
        .word    index@(SProducerMConsumerWarpSync)
        .word    0x00000000
.align        4
    .SProducerMConsumerWarpSync_SF_END:

//--------------------- .lw.info.Bra64x1Divergence       --------------------------
.section    .lw.info.Bra64x1Divergence,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.Bra64x1Divergence_CBANK_SIZE_START - .Bra64x1Divergence_CBANK_DESC_START)
.align        4
    .Bra64x1Divergence_CBANK_DESC_START:
        .word    index@(.lw.constant0.Bra64x1Divergence)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .Bra64x1Divergence_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .Bra64x1Divergence_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM0_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM0_SVAL_ATTR_END - .PRM0_SVAL_ATTR_START)
.PRM0_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM0_SVAL_ATTR_END:

//--------------------- .lw.info.BraLinearDivergence       --------------------------
.section    .lw.info.BraLinearDivergence,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraLinearDivergence_CBANK_SIZE_START - .BraLinearDivergence_CBANK_DESC_START)
.align        4
    .BraLinearDivergence_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraLinearDivergence)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraLinearDivergence_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraLinearDivergence_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM1_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM1_SVAL_ATTR_END - .PRM1_SVAL_ATTR_START)
.PRM1_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM1_SVAL_ATTR_END:

//--------------------- .lw.info.BraUBinaryDivergenceHighExit       --------------------------
.section    .lw.info.BraUBinaryDivergenceHighExit,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraUBinaryDivergenceHighExit_CBANK_SIZE_START - .BraUBinaryDivergenceHighExit_CBANK_DESC_START)
.align        4
    .BraUBinaryDivergenceHighExit_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraUBinaryDivergenceHighExit)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraUBinaryDivergenceHighExit_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraUBinaryDivergenceHighExit_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM2_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM2_SVAL_ATTR_END - .PRM2_SVAL_ATTR_START)
.PRM2_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM2_SVAL_ATTR_END:

//--------------------- .lw.info.BraUBinaryDivergenceLowExit       --------------------------
.section    .lw.info.BraUBinaryDivergenceLowExit,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraUBinaryDivergenceLowExit_CBANK_SIZE_START - .BraUBinaryDivergenceLowExit_CBANK_DESC_START)
.align        4
    .BraUBinaryDivergenceLowExit_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraUBinaryDivergenceLowExit)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraUBinaryDivergenceLowExit_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraUBinaryDivergenceLowExit_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM3_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM3_SVAL_ATTR_END - .PRM3_SVAL_ATTR_START)
.PRM3_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM3_SVAL_ATTR_END:

//--------------------- .lw.info.BraColwExit       --------------------------
.section    .lw.info.BraColwExit,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraColwExit_CBANK_SIZE_START - .BraColwExit_CBANK_DESC_START)
.align        4
    .BraColwExit_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraColwExit)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraColwExit_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraColwExit_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM4_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM4_SVAL_ATTR_END - .PRM4_SVAL_ATTR_START)
.PRM4_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM4_SVAL_ATTR_END:

//--------------------- .lw.info.BraColwWarpSync       --------------------------
.section    .lw.info.BraColwWarpSync,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraColwWarpSync_CBANK_SIZE_START - .BraColwWarpSync_CBANK_DESC_START)
.align        4
    .BraColwWarpSync_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraColwWarpSync)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraColwWarpSync_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraColwWarpSync_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM5_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM5_SVAL_ATTR_END - .PRM5_SVAL_ATTR_START)
.PRM5_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM5_SVAL_ATTR_END:

//--------------------- .lw.info.BraDivWarpSync       --------------------------
.section    .lw.info.BraDivWarpSync,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraDivWarpSync_CBANK_SIZE_START - .BraDivWarpSync_CBANK_DESC_START)
.align        4
    .BraDivWarpSync_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraDivWarpSync)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraDivWarpSync_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraDivWarpSync_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM6_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM6_SVAL_ATTR_END - .PRM6_SVAL_ATTR_START)
.PRM6_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM6_SVAL_ATTR_END:

//--------------------- .lw.info.BraDivExit       --------------------------
.section    .lw.info.BraDivExit,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.BraDivExit_CBANK_SIZE_START - .BraDivExit_CBANK_DESC_START)
.align        4
    .BraDivExit_CBANK_DESC_START:
        .word    index@(.lw.constant0.BraDivExit)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .BraDivExit_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .BraDivExit_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM7_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM7_SVAL_ATTR_END - .PRM7_SVAL_ATTR_START)
.PRM7_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM7_SVAL_ATTR_END:

//--------------------- .lw.info.Brx32xMultiway       --------------------------
.section    .lw.info.Brx32xMultiway,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.Brx32xMultiway_CBANK_SIZE_START - .Brx32xMultiway_CBANK_DESC_START)
.align        4
    .Brx32xMultiway_CBANK_DESC_START:
        .word    index@(.lw.constant0.Brx32xMultiway)
        .short    352
        .short    12
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .Brx32xMultiway_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    12


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .Brx32xMultiway_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM8_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM8_SVAL_ATTR_END - .PRM8_SVAL_ATTR_START)
.PRM8_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM8_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM9_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM9_SVAL_ATTR_END - .PRM9_SVAL_ATTR_START)
.PRM9_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x1    /*Ordinal*/
        .short    0x8     /*offset*/
        .word    0x11f000  /*This word contains pointee log align + size*/
.align 4
.PRM9_SVAL_ATTR_END:

//--------------------- .lw.info.Jmx32xMultiway       --------------------------
.section    .lw.info.Jmx32xMultiway,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.Jmx32xMultiway_CBANK_SIZE_START - .Jmx32xMultiway_CBANK_DESC_START)
.align        4
    .Jmx32xMultiway_CBANK_DESC_START:
        .word    index@(.lw.constant0.Jmx32xMultiway)
        .short    352
        .short    12
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .Jmx32xMultiway_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    12


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .Jmx32xMultiway_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM10_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM10_SVAL_ATTR_END - .PRM10_SVAL_ATTR_START)
.PRM10_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM10_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM11_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM11_SVAL_ATTR_END - .PRM11_SVAL_ATTR_START)
.PRM11_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x1    /*Ordinal*/
        .short    0x8     /*offset*/
        .word    0x11f000  /*This word contains pointee log align + size*/
.align 4
.PRM11_SVAL_ATTR_END:

//--------------------- .lw.info.ExitVerifyAtExit       --------------------------
.section    .lw.info.ExitVerifyAtExit,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.ExitVerifyAtExit_CBANK_SIZE_START - .ExitVerifyAtExit_CBANK_DESC_START)
.align        4
    .ExitVerifyAtExit_CBANK_DESC_START:
        .word    index@(.lw.constant0.ExitVerifyAtExit)
        .short    352
        .short    8
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .ExitVerifyAtExit_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    8


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .ExitVerifyAtExit_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM12_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM12_SVAL_ATTR_END - .PRM12_SVAL_ATTR_START)
.PRM12_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM12_SVAL_ATTR_END:

//--------------------- .lw.info.PairWiseProducerConsumer       --------------------------
.section    .lw.info.PairWiseProducerConsumer,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.PairWiseProducerConsumer_CBANK_SIZE_START - .PairWiseProducerConsumer_CBANK_DESC_START)
.align        4
    .PairWiseProducerConsumer_CBANK_DESC_START:
        .word    index@(.lw.constant0.PairWiseProducerConsumer)
        .short    352
        .short    20
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .PairWiseProducerConsumer_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    20


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .PairWiseProducerConsumer_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM13_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM13_SVAL_ATTR_END - .PRM13_SVAL_ATTR_START)
.PRM13_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM13_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM14_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM14_SVAL_ATTR_END - .PRM14_SVAL_ATTR_START)
.PRM14_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x1    /*Ordinal*/
        .short    0x8     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM14_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM15_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM15_SVAL_ATTR_END - .PRM15_SVAL_ATTR_START)
.PRM15_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x2    /*Ordinal*/
        .short    0x10     /*offset*/
        .word    0x11f000  /*This word contains pointee log align + size*/
.align 4
.PRM15_SVAL_ATTR_END:

//--------------------- .lw.info.SProducerMConsumerBssyBsyn       --------------------------
.section    .lw.info.SProducerMConsumerBssyBsyn,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.SProducerMConsumerBssyBsyn_CBANK_SIZE_START - .SProducerMConsumerBssyBsyn_CBANK_DESC_START)
.align        4
    .SProducerMConsumerBssyBsyn_CBANK_DESC_START:
        .word    index@(.lw.constant0.SProducerMConsumerBssyBsyn)
        .short    352
        .short    20
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .SProducerMConsumerBssyBsyn_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    20


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .SProducerMConsumerBssyBsyn_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM16_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM16_SVAL_ATTR_END - .PRM16_SVAL_ATTR_START)
.PRM16_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM16_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM17_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM17_SVAL_ATTR_END - .PRM17_SVAL_ATTR_START)
.PRM17_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x1    /*Ordinal*/
        .short    0x8     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM17_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM18_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM18_SVAL_ATTR_END - .PRM18_SVAL_ATTR_START)
.PRM18_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x2    /*Ordinal*/
        .short    0x10     /*offset*/
        .word    0x11f000  /*This word contains pointee log align + size*/
.align 4
.PRM18_SVAL_ATTR_END:

//--------------------- .lw.info.SProducerMConsumerWarpSync       --------------------------
.section    .lw.info.SProducerMConsumerWarpSync,"",@"SHT_LWDA_INFO"
.align    4

//----- lwinfo : EIATTR_PARAM_CBANK
.align        4
    .byte    0x04, 0x0a
    .short    (.SProducerMConsumerWarpSync_CBANK_SIZE_START - .SProducerMConsumerWarpSync_CBANK_DESC_START)
.align        4
    .SProducerMConsumerWarpSync_CBANK_DESC_START:
        .word    index@(.lw.constant0.SProducerMConsumerWarpSync)
        .short    352
        .short    20
        
//----- lwinfo : EIATTR_CBANK_PARAM_SIZE
.align        4
    .SProducerMConsumerWarpSync_CBANK_SIZE_START:
        .byte    0x03, 0x19
        .short    20


//----- lwinfo : EIATTR_MAXREG_COUNT
.align        4
    .SProducerMConsumerWarpSync_MAXREG_COUNT_START:
        .byte    0x03, 0x1b
        .short    0x00ff

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM19_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM19_SVAL_ATTR_END - .PRM19_SVAL_ATTR_START)
.PRM19_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x0    /*Ordinal*/
        .short    0x0     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM19_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM20_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM20_SVAL_ATTR_END - .PRM20_SVAL_ATTR_START)
.PRM20_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x1    /*Ordinal*/
        .short    0x8     /*offset*/
        .word    0x21f000  /*This word contains pointee log align + size*/
.align 4
.PRM20_SVAL_ATTR_END:

//----- lwinfo : EIATTR_KPARAM_INFO
.align        4
.PRM21_SVAL_ATTR:
        .byte    0x04, 0x17
        .short    (.PRM21_SVAL_ATTR_END - .PRM21_SVAL_ATTR_START)
.PRM21_SVAL_ATTR_START:
        .word     0x00000000    /*Index to symtab*/
        .short    0x2    /*Ordinal*/
        .short    0x10     /*offset*/
        .word    0x11f000  /*This word contains pointee log align + size*/
.align 4
.PRM21_SVAL_ATTR_END:

//--------------------- .lw.constant0.Bra64x1Divergence         --------------------------
.section    .lw.constant0.Bra64x1Divergence,"a",@progbits
    .align    4
.lw.constant0.Bra64x1Divergence:
    .zero        360

//--------------------- .lw.constant0.BraLinearDivergence         --------------------------
.section    .lw.constant0.BraLinearDivergence,"a",@progbits
    .align    4
.lw.constant0.BraLinearDivergence:
    .zero        360

//--------------------- .lw.constant0.BraUBinaryDivergenceHighExit         --------------------------
.section    .lw.constant0.BraUBinaryDivergenceHighExit,"a",@progbits
    .align    4
.lw.constant0.BraUBinaryDivergenceHighExit:
    .zero        360

//--------------------- .lw.constant0.BraUBinaryDivergenceLowExit         --------------------------
.section    .lw.constant0.BraUBinaryDivergenceLowExit,"a",@progbits
    .align    4
.lw.constant0.BraUBinaryDivergenceLowExit:
    .zero        360

//--------------------- .lw.constant0.BraColwExit         --------------------------
.section    .lw.constant0.BraColwExit,"a",@progbits
    .align    4
.lw.constant0.BraColwExit:
    .zero        360

//--------------------- .lw.constant0.BraColwWarpSync         --------------------------
.section    .lw.constant0.BraColwWarpSync,"a",@progbits
    .align    4
.lw.constant0.BraColwWarpSync:
    .zero        360

//--------------------- .lw.constant0.BraDivWarpSync         --------------------------
.section    .lw.constant0.BraDivWarpSync,"a",@progbits
    .align    4
.lw.constant0.BraDivWarpSync:
    .zero        360

//--------------------- .lw.constant0.BraDivExit         --------------------------
.section    .lw.constant0.BraDivExit,"a",@progbits
    .align    4
.lw.constant0.BraDivExit:
    .zero        360

//--------------------- .lw.constant0.Brx32xMultiway         --------------------------
.section    .lw.constant0.Brx32xMultiway,"a",@progbits
    .align    4
.lw.constant0.Brx32xMultiway:
    .zero        364

//--------------------- .lw.constant0.Jmx32xMultiway         --------------------------
.section    .lw.constant0.Jmx32xMultiway,"a",@progbits
    .align    4
.lw.constant0.Jmx32xMultiway:
    .zero        364

//--------------------- .lw.constant0.ExitVerifyAtExit         --------------------------
.section    .lw.constant0.ExitVerifyAtExit,"a",@progbits
    .align    4
.lw.constant0.ExitVerifyAtExit:
    .zero        360

//--------------------- .lw.constant0.PairWiseProducerConsumer         --------------------------
.section    .lw.constant0.PairWiseProducerConsumer,"a",@progbits
    .align    4
.lw.constant0.PairWiseProducerConsumer:
    .zero        372

//--------------------- .lw.constant0.SProducerMConsumerBssyBsyn         --------------------------
.section    .lw.constant0.SProducerMConsumerBssyBsyn,"a",@progbits
    .align    4
.lw.constant0.SProducerMConsumerBssyBsyn:
    .zero        372

//--------------------- .lw.constant0.SProducerMConsumerWarpSync         --------------------------
.section    .lw.constant0.SProducerMConsumerWarpSync,"a",@progbits
    .align    4
.lw.constant0.SProducerMConsumerWarpSync:
    .zero        372

//--------------------- .text.Bra64x1Divergence    --------------------------
.section    .text.Bra64x1Divergence,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         Bra64x1Divergence
.type           Bra64x1Divergence,@function
.size           Bra64x1Divergence,(Bra64x1Divergence_END - Bra64x1Divergence)
.other          Bra64x1Divergence,@"STO_LWDA_ENTRY STV_DEFAULT"
Bra64x1Divergence:
.text.Bra64x1Divergence:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];
{{

BRAUDIV_CMP_0_64: 
    ISETP.LT            P0, R0, 32;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_0_32;
    @!P0  BRA        BRAUDIV_CMP_32_64;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_32_64: 
    ISETP.LT            P0, R0, 48;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_32_48;
    @!P0  BRA        BRAUDIV_CMP_48_64;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_48_64: 
    ISETP.LT            P0, R0, 56;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_48_56;
    @!P0  BRA        BRAUDIV_CMP_56_64;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_56_64: 
    ISETP.LT            P0, R0, 60;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_56_60;
    @!P0  BRA        BRAUDIV_CMP_60_64;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_60_64: 
    ISETP.LT            P0, R0, 62;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_60_62;
    @!P0  BRA        BRAUDIV_CMP_62_64;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_62_64: 
    ISETP.LT            P0, R0, 63;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_62_63;
    @!P0  BRA        BRAUDIV_CMP_63_64;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_63_64:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_63_64;

BRAUDIV_CMP_62_63:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_62_63;

BRAUDIV_CMP_60_62: 
    ISETP.LT            P0, R0, 61;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_60_61;
    @!P0  BRA        BRAUDIV_CMP_61_62;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_61_62:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_61_62;

BRAUDIV_CMP_60_61:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_60_61;

BRAUDIV_CMP_56_60: 
    ISETP.LT            P0, R0, 58;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_56_58;
    @!P0  BRA        BRAUDIV_CMP_58_60;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_58_60: 
    ISETP.LT            P0, R0, 59;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_58_59;
    @!P0  BRA        BRAUDIV_CMP_59_60;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_59_60:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_59_60;

BRAUDIV_CMP_58_59:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_58_59;

BRAUDIV_CMP_56_58: 
    ISETP.LT            P0, R0, 57;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_56_57;
    @!P0  BRA        BRAUDIV_CMP_57_58;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_57_58:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_57_58;

BRAUDIV_CMP_56_57:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_56_57;

BRAUDIV_CMP_48_56: 
    ISETP.LT            P0, R0, 52;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_48_52;
    @!P0  BRA        BRAUDIV_CMP_52_56;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_52_56: 
    ISETP.LT            P0, R0, 54;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_52_54;
    @!P0  BRA        BRAUDIV_CMP_54_56;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_54_56: 
    ISETP.LT            P0, R0, 55;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_54_55;
    @!P0  BRA        BRAUDIV_CMP_55_56;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_55_56:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_55_56;

BRAUDIV_CMP_54_55:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_54_55;

BRAUDIV_CMP_52_54: 
    ISETP.LT            P0, R0, 53;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_52_53;
    @!P0  BRA        BRAUDIV_CMP_53_54;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_53_54:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_53_54;

BRAUDIV_CMP_52_53:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_52_53;

BRAUDIV_CMP_48_52: 
    ISETP.LT            P0, R0, 50;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_48_50;
    @!P0  BRA        BRAUDIV_CMP_50_52;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_50_52: 
    ISETP.LT            P0, R0, 51;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_50_51;
    @!P0  BRA        BRAUDIV_CMP_51_52;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_51_52:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_51_52;

BRAUDIV_CMP_50_51:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_50_51;

BRAUDIV_CMP_48_50: 
    ISETP.LT            P0, R0, 49;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_48_49;
    @!P0  BRA        BRAUDIV_CMP_49_50;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_49_50:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_49_50;

BRAUDIV_CMP_48_49:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_48_49;

BRAUDIV_CMP_32_48: 
    ISETP.LT            P0, R0, 40;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_32_40;
    @!P0  BRA        BRAUDIV_CMP_40_48;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_40_48: 
    ISETP.LT            P0, R0, 44;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_40_44;
    @!P0  BRA        BRAUDIV_CMP_44_48;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_44_48: 
    ISETP.LT            P0, R0, 46;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_44_46;
    @!P0  BRA        BRAUDIV_CMP_46_48;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_46_48: 
    ISETP.LT            P0, R0, 47;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_46_47;
    @!P0  BRA        BRAUDIV_CMP_47_48;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_47_48:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_47_48;

BRAUDIV_CMP_46_47:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_46_47;

BRAUDIV_CMP_44_46: 
    ISETP.LT            P0, R0, 45;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_44_45;
    @!P0  BRA        BRAUDIV_CMP_45_46;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_45_46:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_45_46;

BRAUDIV_CMP_44_45:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_44_45;

BRAUDIV_CMP_40_44: 
    ISETP.LT            P0, R0, 42;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_40_42;
    @!P0  BRA        BRAUDIV_CMP_42_44;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_42_44: 
    ISETP.LT            P0, R0, 43;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_42_43;
    @!P0  BRA        BRAUDIV_CMP_43_44;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_43_44:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_43_44;

BRAUDIV_CMP_42_43:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_42_43;

BRAUDIV_CMP_40_42: 
    ISETP.LT            P0, R0, 41;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_40_41;
    @!P0  BRA        BRAUDIV_CMP_41_42;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_41_42:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_41_42;

BRAUDIV_CMP_40_41:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_40_41;

BRAUDIV_CMP_32_40: 
    ISETP.LT            P0, R0, 36;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_32_36;
    @!P0  BRA        BRAUDIV_CMP_36_40;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_36_40: 
    ISETP.LT            P0, R0, 38;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_36_38;
    @!P0  BRA        BRAUDIV_CMP_38_40;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_38_40: 
    ISETP.LT            P0, R0, 39;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_38_39;
    @!P0  BRA        BRAUDIV_CMP_39_40;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_39_40:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_39_40;

BRAUDIV_CMP_38_39:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_38_39;

BRAUDIV_CMP_36_38: 
    ISETP.LT            P0, R0, 37;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_36_37;
    @!P0  BRA        BRAUDIV_CMP_37_38;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_37_38:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_37_38;

BRAUDIV_CMP_36_37:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_36_37;

BRAUDIV_CMP_32_36: 
    ISETP.LT            P0, R0, 34;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_32_34;
    @!P0  BRA        BRAUDIV_CMP_34_36;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_34_36: 
    ISETP.LT            P0, R0, 35;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_34_35;
    @!P0  BRA        BRAUDIV_CMP_35_36;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_35_36:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_35_36;

BRAUDIV_CMP_34_35:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_34_35;

BRAUDIV_CMP_32_34: 
    ISETP.LT            P0, R0, 33;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_32_33;
    @!P0  BRA        BRAUDIV_CMP_33_34;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_33_34:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_33_34;

BRAUDIV_CMP_32_33:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_32_33;

BRAUDIV_CMP_0_32: 
    ISETP.LT            P0, R0, 16;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_0_16;
    @!P0  BRA        BRAUDIV_CMP_16_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_16_32: 
    ISETP.LT            P0, R0, 24;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_16_24;
    @!P0  BRA        BRAUDIV_CMP_24_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_24_32: 
    ISETP.LT            P0, R0, 28;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_24_28;
    @!P0  BRA        BRAUDIV_CMP_28_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_28_32: 
    ISETP.LT            P0, R0, 30;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_28_30;
    @!P0  BRA        BRAUDIV_CMP_30_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_30_32: 
    ISETP.LT            P0, R0, 31;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_30_31;
    @!P0  BRA        BRAUDIV_CMP_31_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_31_32:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_31_32;

BRAUDIV_CMP_30_31:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_30_31;

BRAUDIV_CMP_28_30: 
    ISETP.LT            P0, R0, 29;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_28_29;
    @!P0  BRA        BRAUDIV_CMP_29_30;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_29_30:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_29_30;

BRAUDIV_CMP_28_29:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_28_29;

BRAUDIV_CMP_24_28: 
    ISETP.LT            P0, R0, 26;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_24_26;
    @!P0  BRA        BRAUDIV_CMP_26_28;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_26_28: 
    ISETP.LT            P0, R0, 27;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_26_27;
    @!P0  BRA        BRAUDIV_CMP_27_28;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_27_28:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_27_28;

BRAUDIV_CMP_26_27:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_26_27;

BRAUDIV_CMP_24_26: 
    ISETP.LT            P0, R0, 25;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_24_25;
    @!P0  BRA        BRAUDIV_CMP_25_26;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_25_26:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_25_26;

BRAUDIV_CMP_24_25:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_24_25;

BRAUDIV_CMP_16_24: 
    ISETP.LT            P0, R0, 20;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_16_20;
    @!P0  BRA        BRAUDIV_CMP_20_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_20_24: 
    ISETP.LT            P0, R0, 22;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_20_22;
    @!P0  BRA        BRAUDIV_CMP_22_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_22_24: 
    ISETP.LT            P0, R0, 23;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_22_23;
    @!P0  BRA        BRAUDIV_CMP_23_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_23_24:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_23_24;

BRAUDIV_CMP_22_23:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_22_23;

BRAUDIV_CMP_20_22: 
    ISETP.LT            P0, R0, 21;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_20_21;
    @!P0  BRA        BRAUDIV_CMP_21_22;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_21_22:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_21_22;

BRAUDIV_CMP_20_21:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_20_21;

BRAUDIV_CMP_16_20: 
    ISETP.LT            P0, R0, 18;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_16_18;
    @!P0  BRA        BRAUDIV_CMP_18_20;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_18_20: 
    ISETP.LT            P0, R0, 19;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_18_19;
    @!P0  BRA        BRAUDIV_CMP_19_20;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_19_20:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_19_20;

BRAUDIV_CMP_18_19:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_18_19;

BRAUDIV_CMP_16_18: 
    ISETP.LT            P0, R0, 17;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_16_17;
    @!P0  BRA        BRAUDIV_CMP_17_18;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_17_18:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_17_18;

BRAUDIV_CMP_16_17:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_16_17;

BRAUDIV_CMP_0_16: 
    ISETP.LT            P0, R0, 8;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_0_8;
    @!P0  BRA        BRAUDIV_CMP_8_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_8_16: 
    ISETP.LT            P0, R0, 12;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_8_12;
    @!P0  BRA        BRAUDIV_CMP_12_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_12_16: 
    ISETP.LT            P0, R0, 14;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_12_14;
    @!P0  BRA        BRAUDIV_CMP_14_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_14_16: 
    ISETP.LT            P0, R0, 15;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_14_15;
    @!P0  BRA        BRAUDIV_CMP_15_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_15_16:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_15_16;

BRAUDIV_CMP_14_15:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_14_15;

BRAUDIV_CMP_12_14: 
    ISETP.LT            P0, R0, 13;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_12_13;
    @!P0  BRA        BRAUDIV_CMP_13_14;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_13_14:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_13_14;

BRAUDIV_CMP_12_13:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_12_13;

BRAUDIV_CMP_8_12: 
    ISETP.LT            P0, R0, 10;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_8_10;
    @!P0  BRA        BRAUDIV_CMP_10_12;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_10_12: 
    ISETP.LT            P0, R0, 11;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_10_11;
    @!P0  BRA        BRAUDIV_CMP_11_12;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_11_12:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_11_12;

BRAUDIV_CMP_10_11:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_10_11;

BRAUDIV_CMP_8_10: 
    ISETP.LT            P0, R0, 9;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_8_9;
    @!P0  BRA        BRAUDIV_CMP_9_10;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_9_10:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_9_10;

BRAUDIV_CMP_8_9:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_8_9;

BRAUDIV_CMP_0_8: 
    ISETP.LT            P0, R0, 4;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_0_4;
    @!P0  BRA        BRAUDIV_CMP_4_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_4_8: 
    ISETP.LT            P0, R0, 6;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_4_6;
    @!P0  BRA        BRAUDIV_CMP_6_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_6_8: 
    ISETP.LT            P0, R0, 7;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_6_7;
    @!P0  BRA        BRAUDIV_CMP_7_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_7_8:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_7_8;

BRAUDIV_CMP_6_7:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_6_7;

BRAUDIV_CMP_4_6: 
    ISETP.LT            P0, R0, 5;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_4_5;
    @!P0  BRA        BRAUDIV_CMP_5_6;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_5_6:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_5_6;

BRAUDIV_CMP_4_5:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_4_5;

BRAUDIV_CMP_0_4: 
    ISETP.LT            P0, R0, 2;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_0_2;
    @!P0  BRA        BRAUDIV_CMP_2_4;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_2_4: 
    ISETP.LT            P0, R0, 3;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_2_3;
    @!P0  BRA        BRAUDIV_CMP_3_4;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_3_4:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_3_4;

BRAUDIV_CMP_2_3:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_2_3;

BRAUDIV_CMP_0_2: 
    ISETP.LT            P0, R0, 1;
    ;;    // Exit low or high half (depending on the test)
    @P0   BRA        BRAUDIV_CMP_0_1;
    @!P0  BRA        BRAUDIV_CMP_1_2;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_1_2:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_1_2;

BRAUDIV_CMP_0_1:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_0_1;
}}

    EXIT;
Bra64x1Divergence_END:

//--------------------- .text.BraLinearDivergence    --------------------------
.section    .text.BraLinearDivergence,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraLinearDivergence
.type           BraLinearDivergence,@function
.size           BraLinearDivergence,(BraLinearDivergence_END - BraLinearDivergence)
.other          BraLinearDivergence,@"STO_LWDA_ENTRY STV_DEFAULT"
BraLinearDivergence:
.text.BraLinearDivergence:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];
{{

BRAL_TID_0:
       ISETP.EQ    P0, R0, 0;
       @P0         BRA BRAL_EXIT_TID_0;
       @!P0        BRA BRAL_TID_1;
       EXIT;

BRAL_EXIT_TID_0:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_1:
       ISETP.EQ    P0, R0, 1;
       @P0         BRA BRAL_EXIT_TID_1;
       @!P0        BRA BRAL_TID_2;
       EXIT;

BRAL_EXIT_TID_1:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_2:
       ISETP.EQ    P0, R0, 2;
       @P0         BRA BRAL_EXIT_TID_2;
       @!P0        BRA BRAL_TID_3;
       EXIT;

BRAL_EXIT_TID_2:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_3:
       ISETP.EQ    P0, R0, 3;
       @P0         BRA BRAL_EXIT_TID_3;
       @!P0        BRA BRAL_TID_4;
       EXIT;

BRAL_EXIT_TID_3:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_4:
       ISETP.EQ    P0, R0, 4;
       @P0         BRA BRAL_EXIT_TID_4;
       @!P0        BRA BRAL_TID_5;
       EXIT;

BRAL_EXIT_TID_4:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_5:
       ISETP.EQ    P0, R0, 5;
       @P0         BRA BRAL_EXIT_TID_5;
       @!P0        BRA BRAL_TID_6;
       EXIT;

BRAL_EXIT_TID_5:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_6:
       ISETP.EQ    P0, R0, 6;
       @P0         BRA BRAL_EXIT_TID_6;
       @!P0        BRA BRAL_TID_7;
       EXIT;

BRAL_EXIT_TID_6:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_7:
       ISETP.EQ    P0, R0, 7;
       @P0         BRA BRAL_EXIT_TID_7;
       @!P0        BRA BRAL_TID_8;
       EXIT;

BRAL_EXIT_TID_7:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_8:
       ISETP.EQ    P0, R0, 8;
       @P0         BRA BRAL_EXIT_TID_8;
       @!P0        BRA BRAL_TID_9;
       EXIT;

BRAL_EXIT_TID_8:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_9:
       ISETP.EQ    P0, R0, 9;
       @P0         BRA BRAL_EXIT_TID_9;
       @!P0        BRA BRAL_TID_10;
       EXIT;

BRAL_EXIT_TID_9:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_10:
       ISETP.EQ    P0, R0, 10;
       @P0         BRA BRAL_EXIT_TID_10;
       @!P0        BRA BRAL_TID_11;
       EXIT;

BRAL_EXIT_TID_10:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_11:
       ISETP.EQ    P0, R0, 11;
       @P0         BRA BRAL_EXIT_TID_11;
       @!P0        BRA BRAL_TID_12;
       EXIT;

BRAL_EXIT_TID_11:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_12:
       ISETP.EQ    P0, R0, 12;
       @P0         BRA BRAL_EXIT_TID_12;
       @!P0        BRA BRAL_TID_13;
       EXIT;

BRAL_EXIT_TID_12:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_13:
       ISETP.EQ    P0, R0, 13;
       @P0         BRA BRAL_EXIT_TID_13;
       @!P0        BRA BRAL_TID_14;
       EXIT;

BRAL_EXIT_TID_13:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_14:
       ISETP.EQ    P0, R0, 14;
       @P0         BRA BRAL_EXIT_TID_14;
       @!P0        BRA BRAL_TID_15;
       EXIT;

BRAL_EXIT_TID_14:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_15:
       ISETP.EQ    P0, R0, 15;
       @P0         BRA BRAL_EXIT_TID_15;
       @!P0        BRA BRAL_TID_16;
       EXIT;

BRAL_EXIT_TID_15:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_16:
       ISETP.EQ    P0, R0, 16;
       @P0         BRA BRAL_EXIT_TID_16;
       @!P0        BRA BRAL_TID_17;
       EXIT;

BRAL_EXIT_TID_16:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_17:
       ISETP.EQ    P0, R0, 17;
       @P0         BRA BRAL_EXIT_TID_17;
       @!P0        BRA BRAL_TID_18;
       EXIT;

BRAL_EXIT_TID_17:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_18:
       ISETP.EQ    P0, R0, 18;
       @P0         BRA BRAL_EXIT_TID_18;
       @!P0        BRA BRAL_TID_19;
       EXIT;

BRAL_EXIT_TID_18:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_19:
       ISETP.EQ    P0, R0, 19;
       @P0         BRA BRAL_EXIT_TID_19;
       @!P0        BRA BRAL_TID_20;
       EXIT;

BRAL_EXIT_TID_19:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_20:
       ISETP.EQ    P0, R0, 20;
       @P0         BRA BRAL_EXIT_TID_20;
       @!P0        BRA BRAL_TID_21;
       EXIT;

BRAL_EXIT_TID_20:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_21:
       ISETP.EQ    P0, R0, 21;
       @P0         BRA BRAL_EXIT_TID_21;
       @!P0        BRA BRAL_TID_22;
       EXIT;

BRAL_EXIT_TID_21:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_22:
       ISETP.EQ    P0, R0, 22;
       @P0         BRA BRAL_EXIT_TID_22;
       @!P0        BRA BRAL_TID_23;
       EXIT;

BRAL_EXIT_TID_22:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_23:
       ISETP.EQ    P0, R0, 23;
       @P0         BRA BRAL_EXIT_TID_23;
       @!P0        BRA BRAL_TID_24;
       EXIT;

BRAL_EXIT_TID_23:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_24:
       ISETP.EQ    P0, R0, 24;
       @P0         BRA BRAL_EXIT_TID_24;
       @!P0        BRA BRAL_TID_25;
       EXIT;

BRAL_EXIT_TID_24:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_25:
       ISETP.EQ    P0, R0, 25;
       @P0         BRA BRAL_EXIT_TID_25;
       @!P0        BRA BRAL_TID_26;
       EXIT;

BRAL_EXIT_TID_25:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_26:
       ISETP.EQ    P0, R0, 26;
       @P0         BRA BRAL_EXIT_TID_26;
       @!P0        BRA BRAL_TID_27;
       EXIT;

BRAL_EXIT_TID_26:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_27:
       ISETP.EQ    P0, R0, 27;
       @P0         BRA BRAL_EXIT_TID_27;
       @!P0        BRA BRAL_TID_28;
       EXIT;

BRAL_EXIT_TID_27:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_28:
       ISETP.EQ    P0, R0, 28;
       @P0         BRA BRAL_EXIT_TID_28;
       @!P0        BRA BRAL_TID_29;
       EXIT;

BRAL_EXIT_TID_28:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_29:
       ISETP.EQ    P0, R0, 29;
       @P0         BRA BRAL_EXIT_TID_29;
       @!P0        BRA BRAL_TID_30;
       EXIT;

BRAL_EXIT_TID_29:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_30:
       ISETP.EQ    P0, R0, 30;
       @P0         BRA BRAL_EXIT_TID_30;
       @!P0        BRA BRAL_TID_31;
       EXIT;

BRAL_EXIT_TID_30:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_31:
       ISETP.EQ    P0, R0, 31;
       @P0         BRA BRAL_EXIT_TID_31;
       @!P0        BRA BRAL_TID_32;
       EXIT;

BRAL_EXIT_TID_31:
        VOTE.ANY       R10, PT, PT; 
        POPC           R10, R10;   /*Should be equal to number of threads launched */
        IADD           R7, R0, R10;
        STG.E.U8.SYS   [R8], R7; /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/ 
        EXIT;

BRAL_TID_32:
        EXIT;
}}

    EXIT;
BraLinearDivergence_END:

//--------------------- .text.BraUBinaryDivergenceHighExit    --------------------------
.section    .text.BraUBinaryDivergenceHighExit,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraUBinaryDivergenceHighExit
.type           BraUBinaryDivergenceHighExit,@function
.size           BraUBinaryDivergenceHighExit,(BraUBinaryDivergenceHighExit_END - BraUBinaryDivergenceHighExit)
.other          BraUBinaryDivergenceHighExit,@"STO_LWDA_ENTRY STV_DEFAULT"
BraUBinaryDivergenceHighExit:
.text.BraUBinaryDivergenceHighExit:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];
{{

BRAUDIV_CMP_0_32: 
    ISETP.LT            P0, R0, 16;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_16;
    @!P0  BRA.U        BRAUDIV_CMP_16_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_16_32: 
    ISETP.LT            P0, R0, 24;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_24;
    @!P0  BRA.U        BRAUDIV_CMP_24_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_24_32: 
    ISETP.LT            P0, R0, 28;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_24_28;
    @!P0  BRA.U        BRAUDIV_CMP_28_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_28_32: 
    ISETP.LT            P0, R0, 30;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_28_30;
    @!P0  BRA.U        BRAUDIV_CMP_30_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_30_32: 
    ISETP.LT            P0, R0, 31;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_30_31;
    @!P0  BRA.U        BRAUDIV_CMP_31_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_31_32:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_31_32;

BRAUDIV_CMP_30_31:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_30_31;

BRAUDIV_CMP_28_30: 
    ISETP.LT            P0, R0, 29;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_28_29;
    @!P0  BRA.U        BRAUDIV_CMP_29_30;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_29_30:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_29_30;

BRAUDIV_CMP_28_29:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_28_29;

BRAUDIV_CMP_24_28: 
    ISETP.LT            P0, R0, 26;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_24_26;
    @!P0  BRA.U        BRAUDIV_CMP_26_28;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_26_28: 
    ISETP.LT            P0, R0, 27;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_26_27;
    @!P0  BRA.U        BRAUDIV_CMP_27_28;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_27_28:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_27_28;

BRAUDIV_CMP_26_27:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_26_27;

BRAUDIV_CMP_24_26: 
    ISETP.LT            P0, R0, 25;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_24_25;
    @!P0  BRA.U        BRAUDIV_CMP_25_26;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_25_26:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_25_26;

BRAUDIV_CMP_24_25:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_24_25;

BRAUDIV_CMP_16_24: 
    ISETP.LT            P0, R0, 20;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_20;
    @!P0  BRA.U        BRAUDIV_CMP_20_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_20_24: 
    ISETP.LT            P0, R0, 22;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_20_22;
    @!P0  BRA.U        BRAUDIV_CMP_22_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_22_24: 
    ISETP.LT            P0, R0, 23;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_22_23;
    @!P0  BRA.U        BRAUDIV_CMP_23_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_23_24:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_23_24;

BRAUDIV_CMP_22_23:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_22_23;

BRAUDIV_CMP_20_22: 
    ISETP.LT            P0, R0, 21;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_20_21;
    @!P0  BRA.U        BRAUDIV_CMP_21_22;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_21_22:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_21_22;

BRAUDIV_CMP_20_21:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_20_21;

BRAUDIV_CMP_16_20: 
    ISETP.LT            P0, R0, 18;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_18;
    @!P0  BRA.U        BRAUDIV_CMP_18_20;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_18_20: 
    ISETP.LT            P0, R0, 19;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_18_19;
    @!P0  BRA.U        BRAUDIV_CMP_19_20;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_19_20:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_19_20;

BRAUDIV_CMP_18_19:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_18_19;

BRAUDIV_CMP_16_18: 
    ISETP.LT            P0, R0, 17;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_17;
    @!P0  BRA.U        BRAUDIV_CMP_17_18;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_17_18:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_17_18;

BRAUDIV_CMP_16_17:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_16_17;

BRAUDIV_CMP_0_16: 
    ISETP.LT            P0, R0, 8;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_8;
    @!P0  BRA.U        BRAUDIV_CMP_8_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_8_16: 
    ISETP.LT            P0, R0, 12;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_8_12;
    @!P0  BRA.U        BRAUDIV_CMP_12_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_12_16: 
    ISETP.LT            P0, R0, 14;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_12_14;
    @!P0  BRA.U        BRAUDIV_CMP_14_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_14_16: 
    ISETP.LT            P0, R0, 15;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_14_15;
    @!P0  BRA.U        BRAUDIV_CMP_15_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_15_16:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_15_16;

BRAUDIV_CMP_14_15:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_14_15;

BRAUDIV_CMP_12_14: 
    ISETP.LT            P0, R0, 13;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_12_13;
    @!P0  BRA.U        BRAUDIV_CMP_13_14;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_13_14:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_13_14;

BRAUDIV_CMP_12_13:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_12_13;

BRAUDIV_CMP_8_12: 
    ISETP.LT            P0, R0, 10;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_8_10;
    @!P0  BRA.U        BRAUDIV_CMP_10_12;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_10_12: 
    ISETP.LT            P0, R0, 11;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_10_11;
    @!P0  BRA.U        BRAUDIV_CMP_11_12;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_11_12:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_11_12;

BRAUDIV_CMP_10_11:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_10_11;

BRAUDIV_CMP_8_10: 
    ISETP.LT            P0, R0, 9;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_8_9;
    @!P0  BRA.U        BRAUDIV_CMP_9_10;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_9_10:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_9_10;

BRAUDIV_CMP_8_9:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_8_9;

BRAUDIV_CMP_0_8: 
    ISETP.LT            P0, R0, 4;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_4;
    @!P0  BRA.U        BRAUDIV_CMP_4_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_4_8: 
    ISETP.LT            P0, R0, 6;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_4_6;
    @!P0  BRA.U        BRAUDIV_CMP_6_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_6_8: 
    ISETP.LT            P0, R0, 7;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_6_7;
    @!P0  BRA.U        BRAUDIV_CMP_7_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_7_8:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_7_8;

BRAUDIV_CMP_6_7:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_6_7;

BRAUDIV_CMP_4_6: 
    ISETP.LT            P0, R0, 5;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_4_5;
    @!P0  BRA.U        BRAUDIV_CMP_5_6;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_5_6:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_5_6;

BRAUDIV_CMP_4_5:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_4_5;

BRAUDIV_CMP_0_4: 
    ISETP.LT            P0, R0, 2;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_2;
    @!P0  BRA.U        BRAUDIV_CMP_2_4;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_2_4: 
    ISETP.LT            P0, R0, 3;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_2_3;
    @!P0  BRA.U        BRAUDIV_CMP_3_4;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_3_4:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_3_4;

BRAUDIV_CMP_2_3:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_2_3;

BRAUDIV_CMP_0_2: 
    ISETP.LT            P0, R0, 1;
    VOTE.ANY R7, PT, !P0; POPC R7, R7; @!P0 STG.E.U8.SYS   [R8], R7; @!P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_1;
    @!P0  BRA.U        BRAUDIV_CMP_1_2;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_1_2:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_1_2;

BRAUDIV_CMP_0_1:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_0_1;
}}

    EXIT;
BraUBinaryDivergenceHighExit_END:

//--------------------- .text.BraUBinaryDivergenceLowExit    --------------------------
.section    .text.BraUBinaryDivergenceLowExit,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraUBinaryDivergenceLowExit
.type           BraUBinaryDivergenceLowExit,@function
.size           BraUBinaryDivergenceLowExit,(BraUBinaryDivergenceLowExit_END - BraUBinaryDivergenceLowExit)
.other          BraUBinaryDivergenceLowExit,@"STO_LWDA_ENTRY STV_DEFAULT"
BraUBinaryDivergenceLowExit:
.text.BraUBinaryDivergenceLowExit:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];
{{

BRAUDIV_CMP_0_32: 
    ISETP.LT            P0, R0, 16;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_16;
    @!P0  BRA.U        BRAUDIV_CMP_16_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_16_32: 
    ISETP.LT            P0, R0, 24;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_24;
    @!P0  BRA.U        BRAUDIV_CMP_24_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_24_32: 
    ISETP.LT            P0, R0, 28;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_24_28;
    @!P0  BRA.U        BRAUDIV_CMP_28_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_28_32: 
    ISETP.LT            P0, R0, 30;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_28_30;
    @!P0  BRA.U        BRAUDIV_CMP_30_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_30_32: 
    ISETP.LT            P0, R0, 31;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_30_31;
    @!P0  BRA.U        BRAUDIV_CMP_31_32;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_31_32:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_31_32;

BRAUDIV_CMP_30_31:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_30_31;

BRAUDIV_CMP_28_30: 
    ISETP.LT            P0, R0, 29;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_28_29;
    @!P0  BRA.U        BRAUDIV_CMP_29_30;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_29_30:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_29_30;

BRAUDIV_CMP_28_29:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_28_29;

BRAUDIV_CMP_24_28: 
    ISETP.LT            P0, R0, 26;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_24_26;
    @!P0  BRA.U        BRAUDIV_CMP_26_28;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_26_28: 
    ISETP.LT            P0, R0, 27;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_26_27;
    @!P0  BRA.U        BRAUDIV_CMP_27_28;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_27_28:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_27_28;

BRAUDIV_CMP_26_27:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_26_27;

BRAUDIV_CMP_24_26: 
    ISETP.LT            P0, R0, 25;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_24_25;
    @!P0  BRA.U        BRAUDIV_CMP_25_26;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_25_26:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_25_26;

BRAUDIV_CMP_24_25:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_24_25;

BRAUDIV_CMP_16_24: 
    ISETP.LT            P0, R0, 20;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_20;
    @!P0  BRA.U        BRAUDIV_CMP_20_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_20_24: 
    ISETP.LT            P0, R0, 22;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_20_22;
    @!P0  BRA.U        BRAUDIV_CMP_22_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_22_24: 
    ISETP.LT            P0, R0, 23;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_22_23;
    @!P0  BRA.U        BRAUDIV_CMP_23_24;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_23_24:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_23_24;

BRAUDIV_CMP_22_23:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_22_23;

BRAUDIV_CMP_20_22: 
    ISETP.LT            P0, R0, 21;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_20_21;
    @!P0  BRA.U        BRAUDIV_CMP_21_22;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_21_22:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_21_22;

BRAUDIV_CMP_20_21:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_20_21;

BRAUDIV_CMP_16_20: 
    ISETP.LT            P0, R0, 18;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_18;
    @!P0  BRA.U        BRAUDIV_CMP_18_20;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_18_20: 
    ISETP.LT            P0, R0, 19;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_18_19;
    @!P0  BRA.U        BRAUDIV_CMP_19_20;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_19_20:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_19_20;

BRAUDIV_CMP_18_19:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_18_19;

BRAUDIV_CMP_16_18: 
    ISETP.LT            P0, R0, 17;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_16_17;
    @!P0  BRA.U        BRAUDIV_CMP_17_18;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_17_18:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_17_18;

BRAUDIV_CMP_16_17:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_16_17;

BRAUDIV_CMP_0_16: 
    ISETP.LT            P0, R0, 8;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_8;
    @!P0  BRA.U        BRAUDIV_CMP_8_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_8_16: 
    ISETP.LT            P0, R0, 12;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_8_12;
    @!P0  BRA.U        BRAUDIV_CMP_12_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_12_16: 
    ISETP.LT            P0, R0, 14;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_12_14;
    @!P0  BRA.U        BRAUDIV_CMP_14_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_14_16: 
    ISETP.LT            P0, R0, 15;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_14_15;
    @!P0  BRA.U        BRAUDIV_CMP_15_16;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_15_16:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_15_16;

BRAUDIV_CMP_14_15:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_14_15;

BRAUDIV_CMP_12_14: 
    ISETP.LT            P0, R0, 13;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_12_13;
    @!P0  BRA.U        BRAUDIV_CMP_13_14;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_13_14:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_13_14;

BRAUDIV_CMP_12_13:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_12_13;

BRAUDIV_CMP_8_12: 
    ISETP.LT            P0, R0, 10;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_8_10;
    @!P0  BRA.U        BRAUDIV_CMP_10_12;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_10_12: 
    ISETP.LT            P0, R0, 11;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_10_11;
    @!P0  BRA.U        BRAUDIV_CMP_11_12;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_11_12:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_11_12;

BRAUDIV_CMP_10_11:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_10_11;

BRAUDIV_CMP_8_10: 
    ISETP.LT            P0, R0, 9;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_8_9;
    @!P0  BRA.U        BRAUDIV_CMP_9_10;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_9_10:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_9_10;

BRAUDIV_CMP_8_9:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_8_9;

BRAUDIV_CMP_0_8: 
    ISETP.LT            P0, R0, 4;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_4;
    @!P0  BRA.U        BRAUDIV_CMP_4_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_4_8: 
    ISETP.LT            P0, R0, 6;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_4_6;
    @!P0  BRA.U        BRAUDIV_CMP_6_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_6_8: 
    ISETP.LT            P0, R0, 7;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_6_7;
    @!P0  BRA.U        BRAUDIV_CMP_7_8;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_7_8:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_7_8;

BRAUDIV_CMP_6_7:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_6_7;

BRAUDIV_CMP_4_6: 
    ISETP.LT            P0, R0, 5;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_4_5;
    @!P0  BRA.U        BRAUDIV_CMP_5_6;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_5_6:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_5_6;

BRAUDIV_CMP_4_5:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_4_5;

BRAUDIV_CMP_0_4: 
    ISETP.LT            P0, R0, 2;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_2;
    @!P0  BRA.U        BRAUDIV_CMP_2_4;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_2_4: 
    ISETP.LT            P0, R0, 3;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_2_3;
    @!P0  BRA.U        BRAUDIV_CMP_3_4;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_3_4:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_3_4;

BRAUDIV_CMP_2_3:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_2_3;

BRAUDIV_CMP_0_2: 
    ISETP.LT            P0, R0, 1;
    VOTE.ANY R7, PT, P0; POPC R7, R7; @P0 STG.E.U8.SYS   [R8], R7; @P0 EXIT;    // Exit low or high half (depending on the test)
    @P0   BRA.U        BRAUDIV_CMP_0_1;
    @!P0  BRA.U        BRAUDIV_CMP_1_2;
    STG.E.U8.SYS        [R8], R6;    // Store TID + 32 on a failure
    EXIT;

BRAUDIV_CMP_1_2:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_1_2;

BRAUDIV_CMP_0_1:
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    BRA BRAUDIV_CMP_0_1;
}}

    EXIT;
BraUBinaryDivergenceLowExit_END:

//--------------------- .text.BraColwExit    --------------------------
.section    .text.BraColwExit,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraColwExit
.type           BraColwExit,@function
.size           BraColwExit,(BraColwExit_END - BraColwExit)
.other          BraColwExit,@"STO_LWDA_ENTRY STV_DEFAULT"
BraColwExit:
.text.BraColwExit:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];

BRA_COLW_WBE_0_32:
    BRA.COLW            BRA_COLW_WBE_0_32_TGT0;
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;

BRA_COLW_WBE_0_32_TGT0:
    LOP.AND             P0, RZ, R0, 1;    // Even threads = 0x0 
    @!P0  BRA.COLW      BRA_COLW_WBE_0_32_FAIL0;
    @P0 VOTE.ANY        R7, PT, PT;
    @P0 POPC            R7, R7;
    @P0 STG.E.U8.SYS    [R8], R7; /*Door bell success*/
    @P0 EXIT;
    @!P0 BRA.COLW       BRA_COLW_WBE_0_16;

BRA_COLW_WBE_0_32_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    ISETP.EQ            P0, R7, 0x1;
    SEL                 R6, R7, 0x1, P0; 
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_COLW_WBE_0_32_FAIL0;

BRA_COLW_WBE_0_16:
    BRA.COLW            BRA_COLW_WBE_0_16_TGT0;
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;

BRA_COLW_WBE_0_16_TGT0:
    LOP.AND             P0, RZ, R0, 2;    // Even threads = 0x0 
    @!P0  BRA.COLW      BRA_COLW_WBE_0_16_FAIL0;
    @P0 VOTE.ANY        R7, PT, PT;
    @P0 POPC            R7, R7;
    @P0 STG.E.U8.SYS    [R8], R7; /*Door bell success*/
    @P0 EXIT;
    @!P0 BRA.COLW       BRA_COLW_WBE_0_8;

BRA_COLW_WBE_0_16_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    ISETP.EQ            P0, R7, 0x1;
    SEL                 R6, R7, 0x1, P0; 
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_COLW_WBE_0_16_FAIL0;

BRA_COLW_WBE_0_8:
    BRA.COLW            BRA_COLW_WBE_0_8_TGT0;
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;

BRA_COLW_WBE_0_8_TGT0:
    LOP.AND             P0, RZ, R0, 4;    // Even threads = 0x0 
    @!P0  BRA.COLW      BRA_COLW_WBE_0_8_FAIL0;
    @P0 VOTE.ANY        R7, PT, PT;
    @P0 POPC            R7, R7;
    @P0 STG.E.U8.SYS    [R8], R7; /*Door bell success*/
    @P0 EXIT;
    @!P0 BRA.COLW       BRA_COLW_WBE_0_4;

BRA_COLW_WBE_0_8_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    ISETP.EQ            P0, R7, 0x1;
    SEL                 R6, R7, 0x1, P0; 
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_COLW_WBE_0_8_FAIL0;

BRA_COLW_WBE_0_4:
    BRA.COLW            BRA_COLW_WBE_0_4_TGT0;
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;

BRA_COLW_WBE_0_4_TGT0:
    LOP.AND             P0, RZ, R0, 8;    // Even threads = 0x0 
    @!P0  BRA.COLW      BRA_COLW_WBE_0_4_FAIL0;
    @P0 VOTE.ANY        R7, PT, PT;
    @P0 POPC            R7, R7;
    @P0 STG.E.U8.SYS    [R8], R7; /*Door bell success*/
    @P0 EXIT;
    @!P0 BRA.COLW       BRA_COLW_WBE_0_2;

BRA_COLW_WBE_0_4_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    ISETP.EQ            P0, R7, 0x1;
    SEL                 R6, R7, 0x1, P0; 
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_COLW_WBE_0_4_FAIL0;

BRA_COLW_WBE_0_2:
    BRA.COLW            BRA_COLW_WBE_0_2_TGT0;
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;

BRA_COLW_WBE_0_2_TGT0:
    LOP.AND             P0, RZ, R0, 16;    // Even threads = 0x0 
    @!P0  BRA.COLW      BRA_COLW_WBE_0_2_FAIL0;
    @P0 VOTE.ANY        R7, PT, PT;
    @P0 POPC            R7, R7;
    @P0 STG.E.U8.SYS    [R8], R7; /*Door bell success*/
    @P0 EXIT;
    @!P0 BRA.COLW       BRA_COLW_WBE_0_1;

BRA_COLW_WBE_0_2_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    ISETP.EQ            P0, R7, 0x1;
    SEL                 R6, R7, 0x1, P0; 
    STG.E.U8.SYS        [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_COLW_WBE_0_2_FAIL0;

BRA_COLW_WBE_0_1:
    VOTE.ANY           R7, PT, PT;
    POPC               R7, R7;
    STG.E.U8.SYS       [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    BRA BRA_COLW_WBE_0_1;

    EXIT;
BraColwExit_END:

//--------------------- .text.BraColwWarpSync    --------------------------
.section    .text.BraColwWarpSync,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraColwWarpSync
.type           BraColwWarpSync,@function
.size           BraColwWarpSync,(BraColwWarpSync_END - BraColwWarpSync)
.other          BraColwWarpSync,@"STO_LWDA_ENTRY STV_DEFAULT"
BraColwWarpSync:
.text.BraColwWarpSync:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];

BRA_COLW_WS_0_32:
    BRA.COLW                BRA_COLW_WS_0_32_TGT0;
    @!P4 STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    @!P4 EXIT;

BRA_COLW_WS_0_32_TGT0:
    LOP.AND                 P0, RZ, R0, 1;    // Even threads = 0x0 
    @P0                     BRA.COLW   BRA_COLW_WS_0_32_FAIL0;
    @P0                     BRA  BR_COLW_WARPSYNC_EXIT;
    PSETP.AND.AND           P4, PT, PT, PT, PT;
    BRA.COLW                BRA_COLW_WS_0_32_FAIL0;
    BRA                     BRA_COLW_WS_0_16;

BRA_COLW_WS_0_32_FAIL0:
    VOTE.ANY                R7, PT, PT;
    POPC                    R7, R7;
    ISETP.EQ                P0, R7, 0x1;
    @P0 BRA                 BR_COLW_WARPSYNC_EXIT;
    STG.E.U8.SYS            [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                     BRA_COLW_WS_0_32_FAIL0;

BRA_COLW_WS_0_16:
    BRA.COLW                BRA_COLW_WS_0_16_TGT0;
    @!P4 STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    @!P4 EXIT;

BRA_COLW_WS_0_16_TGT0:
    LOP.AND                 P0, RZ, R0, 2;    // Even threads = 0x0 
    @P0                     BRA.COLW   BRA_COLW_WS_0_16_FAIL0;
    @P0                     BRA  BR_COLW_WARPSYNC_EXIT;
    PSETP.AND.AND           P4, PT, PT, PT, PT;
    BRA.COLW                BRA_COLW_WS_0_16_FAIL0;
    BRA                     BRA_COLW_WS_0_8;

BRA_COLW_WS_0_16_FAIL0:
    VOTE.ANY                R7, PT, PT;
    POPC                    R7, R7;
    ISETP.EQ                P0, R7, 0x1;
    @P0 BRA                 BR_COLW_WARPSYNC_EXIT;
    STG.E.U8.SYS            [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                     BRA_COLW_WS_0_16_FAIL0;

BRA_COLW_WS_0_8:
    BRA.COLW                BRA_COLW_WS_0_8_TGT0;
    @!P4 STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    @!P4 EXIT;

BRA_COLW_WS_0_8_TGT0:
    LOP.AND                 P0, RZ, R0, 4;    // Even threads = 0x0 
    @P0                     BRA.COLW   BRA_COLW_WS_0_8_FAIL0;
    @P0                     BRA  BR_COLW_WARPSYNC_EXIT;
    PSETP.AND.AND           P4, PT, PT, PT, PT;
    BRA.COLW                BRA_COLW_WS_0_8_FAIL0;
    BRA                     BRA_COLW_WS_0_4;

BRA_COLW_WS_0_8_FAIL0:
    VOTE.ANY                R7, PT, PT;
    POPC                    R7, R7;
    ISETP.EQ                P0, R7, 0x1;
    @P0 BRA                 BR_COLW_WARPSYNC_EXIT;
    STG.E.U8.SYS            [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                     BRA_COLW_WS_0_8_FAIL0;

BRA_COLW_WS_0_4:
    BRA.COLW                BRA_COLW_WS_0_4_TGT0;
    @!P4 STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    @!P4 EXIT;

BRA_COLW_WS_0_4_TGT0:
    LOP.AND                 P0, RZ, R0, 8;    // Even threads = 0x0 
    @P0                     BRA.COLW   BRA_COLW_WS_0_4_FAIL0;
    @P0                     BRA  BR_COLW_WARPSYNC_EXIT;
    PSETP.AND.AND           P4, PT, PT, PT, PT;
    BRA.COLW                BRA_COLW_WS_0_4_FAIL0;
    BRA                     BRA_COLW_WS_0_2;

BRA_COLW_WS_0_4_FAIL0:
    VOTE.ANY                R7, PT, PT;
    POPC                    R7, R7;
    ISETP.EQ                P0, R7, 0x1;
    @P0 BRA                 BR_COLW_WARPSYNC_EXIT;
    STG.E.U8.SYS            [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                     BRA_COLW_WS_0_4_FAIL0;

BRA_COLW_WS_0_2:
    BRA.COLW                BRA_COLW_WS_0_2_TGT0;
    @!P4 STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    @!P4 EXIT;

BRA_COLW_WS_0_2_TGT0:
    LOP.AND                 P0, RZ, R0, 16;    // Even threads = 0x0 
    @P0                     BRA.COLW   BRA_COLW_WS_0_2_FAIL0;
    @P0                     BRA  BR_COLW_WARPSYNC_EXIT;
    PSETP.AND.AND           P4, PT, PT, PT, PT;
    BRA.COLW                BRA_COLW_WS_0_2_FAIL0;
    BRA                     BRA_COLW_WS_0_1;

BRA_COLW_WS_0_2_FAIL0:
    VOTE.ANY                R7, PT, PT;
    POPC                    R7, R7;
    ISETP.EQ                P0, R7, 0x1;
    @P0 BRA                 BR_COLW_WARPSYNC_EXIT;
    STG.E.U8.SYS            [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                     BRA_COLW_WS_0_2_FAIL0;

BRA_COLW_WS_0_1:
    @P0 BRA                 BR_COLW_WARPSYNC_EXIT;

BR_COLW_WARPSYNC_EXIT:
    WARPSYNC       0xFFFFFFFF;
    VOTE.ANY       R10, PT, PT; 
    POPC           R10, R10;       /*Should be equal to number of threads launched */
    IADD           R7, R0, R10;
    STG.E.U8.SYS   [R8], R7;       /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/
    EXIT;
    BRA           BR_COLW_WARPSYNC_EXIT;

    EXIT;
BraColwWarpSync_END:

//--------------------- .text.BraDivWarpSync    --------------------------
.section    .text.BraDivWarpSync,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraDivWarpSync
.type           BraDivWarpSync,@function
.size           BraDivWarpSync,(BraDivWarpSync_END - BraDivWarpSync)
.other          BraDivWarpSync,@"STO_LWDA_ENTRY STV_DEFAULT"
BraDivWarpSync:
.text.BraDivWarpSync:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];

BRA_DIV_WS_0_32:
    LOP.AND            P0, RZ, R0, 1;    // Even threads = 0x0 
    @!P0 BRA.DIV       BRA_DIV_WS_0_32_EVEN;
    BRA                BR_DIV_WARPSYNC_EXIT;
    STG.E.U8.SYS       [R8], R6;             /*Door bell failing TID*/
    EXIT;

BRA_DIV_WS_0_32_EVEN:
    BRA.DIV            BRA_DIV_WS_0_16;

BRA_DIV_WS_0_32_FAIL0:
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA    BRA_DIV_WS_0_32_FAIL0;

BRA_DIV_WS_0_16:
    LOP.AND            P0, RZ, R0, 2;    // Even threads = 0x0 
    @!P0 BRA.DIV       BRA_DIV_WS_0_16_EVEN;
    BRA                BR_DIV_WARPSYNC_EXIT;
    STG.E.U8.SYS       [R8], R6;             /*Door bell failing TID*/
    EXIT;

BRA_DIV_WS_0_16_EVEN:
    BRA.DIV            BRA_DIV_WS_0_8;

BRA_DIV_WS_0_16_FAIL0:
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA    BRA_DIV_WS_0_16_FAIL0;

BRA_DIV_WS_0_8:
    LOP.AND            P0, RZ, R0, 4;    // Even threads = 0x0 
    @!P0 BRA.DIV       BRA_DIV_WS_0_8_EVEN;
    BRA                BR_DIV_WARPSYNC_EXIT;
    STG.E.U8.SYS       [R8], R6;             /*Door bell failing TID*/
    EXIT;

BRA_DIV_WS_0_8_EVEN:
    BRA.DIV            BRA_DIV_WS_0_4;

BRA_DIV_WS_0_8_FAIL0:
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA    BRA_DIV_WS_0_8_FAIL0;

BRA_DIV_WS_0_4:
    LOP.AND            P0, RZ, R0, 8;    // Even threads = 0x0 
    @!P0 BRA.DIV       BRA_DIV_WS_0_4_EVEN;
    BRA                BR_DIV_WARPSYNC_EXIT;
    STG.E.U8.SYS       [R8], R6;             /*Door bell failing TID*/
    EXIT;

BRA_DIV_WS_0_4_EVEN:
    BRA.DIV            BRA_DIV_WS_0_2;

BRA_DIV_WS_0_4_FAIL0:
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA    BRA_DIV_WS_0_4_FAIL0;

BRA_DIV_WS_0_2:
    LOP.AND            P0, RZ, R0, 16;    // Even threads = 0x0 
    @!P0 BRA.DIV       BRA_DIV_WS_0_2_EVEN;
    BRA                BR_DIV_WARPSYNC_EXIT;
    STG.E.U8.SYS       [R8], R6;             /*Door bell failing TID*/
    EXIT;

BRA_DIV_WS_0_2_EVEN:
    BRA.DIV            BRA_DIV_WS_0_1;

BRA_DIV_WS_0_2_FAIL0:
    STG.E.U8.SYS   [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA    BRA_DIV_WS_0_2_FAIL0;

BRA_DIV_WS_0_1:
    @P0   BRA  BR_DIV_WARPSYNC_EXIT;

BR_DIV_WARPSYNC_EXIT:
    WARPSYNC       0xFFFFFFFF;
    VOTE.ANY       R10, PT, PT; 
    POPC           R10, R10;       /*Should be equal to number of threads launched */
    IADD           R7, R0, R10;
    STG.E.U8.SYS   [R8], R7;       /*Success Value = # of threads exiting before warpSync + Total number of threads after sync*/
    EXIT;
    BRA           BR_DIV_WARPSYNC_EXIT;

    EXIT;
BraDivWarpSync_END:

//--------------------- .text.BraDivExit    --------------------------
.section    .text.BraDivExit,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         BraDivExit
.type           BraDivExit,@function
.size           BraDivExit,(BraDivExit_END - BraDivExit)
.other          BraDivExit,@"STO_LWDA_ENTRY STV_DEFAULT"
BraDivExit:
.text.BraDivExit:

    MOV        R1, C[0x0][0x28];   
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];

BRA_DIV_WBE_0_32:
    LOP.AND            P0, RZ, R0, 1;    // Even threads = 0x0
    @P0 VOTE.ANY       R7, PT, PT;
    @P0 POPC           R7, R7;
    @P0 STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    @P0 EXIT; 
    BRA.DIV            BRA_DIV_WBE_0_32_FAIL0;
    BRA                BRA_DIV_WBE_0_16;

BRA_DIV_WBE_0_32_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_DIV_WBE_0_32_FAIL0;

BRA_DIV_WBE_0_16:
    LOP.AND            P0, RZ, R0, 2;    // Even threads = 0x0
    @P0 VOTE.ANY       R7, PT, PT;
    @P0 POPC           R7, R7;
    @P0 STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    @P0 EXIT; 
    BRA.DIV            BRA_DIV_WBE_0_16_FAIL0;
    BRA                BRA_DIV_WBE_0_8;

BRA_DIV_WBE_0_16_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_DIV_WBE_0_16_FAIL0;

BRA_DIV_WBE_0_8:
    LOP.AND            P0, RZ, R0, 4;    // Even threads = 0x0
    @P0 VOTE.ANY       R7, PT, PT;
    @P0 POPC           R7, R7;
    @P0 STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    @P0 EXIT; 
    BRA.DIV            BRA_DIV_WBE_0_8_FAIL0;
    BRA                BRA_DIV_WBE_0_4;

BRA_DIV_WBE_0_8_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_DIV_WBE_0_8_FAIL0;

BRA_DIV_WBE_0_4:
    LOP.AND            P0, RZ, R0, 8;    // Even threads = 0x0
    @P0 VOTE.ANY       R7, PT, PT;
    @P0 POPC           R7, R7;
    @P0 STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    @P0 EXIT; 
    BRA.DIV            BRA_DIV_WBE_0_4_FAIL0;
    BRA                BRA_DIV_WBE_0_2;

BRA_DIV_WBE_0_4_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_DIV_WBE_0_4_FAIL0;

BRA_DIV_WBE_0_2:
    LOP.AND            P0, RZ, R0, 16;    // Even threads = 0x0
    @P0 VOTE.ANY       R7, PT, PT;
    @P0 POPC           R7, R7;
    @P0 STG.E.U8.SYS   [R8], R7; /*Door bell success*/
    @P0 EXIT; 
    BRA.DIV            BRA_DIV_WBE_0_2_FAIL0;
    BRA                BRA_DIV_WBE_0_1;

BRA_DIV_WBE_0_2_FAIL0:
    VOTE.ANY            R7, PT, PT;
    POPC                R7, R7;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    EXIT;
    BRA                BRA_DIV_WBE_0_2_FAIL0;

BRA_DIV_WBE_0_1:
    VOTE.ANY           R7, PT, PT;
    POPC               R7, R7;
    STG.E.U8.SYS       [R8], R7; /*Door bell success*/
    EXIT;
    STG.E.U8.SYS       [R8], R6; /*Door bell failing TID*/
    BRA BRA_DIV_WBE_0_1;

    EXIT;
BraDivExit_END:

//--------------------- .text.Brx32xMultiway    --------------------------
.section    .text.Brx32xMultiway,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         Brx32xMultiway
.type           Brx32xMultiway,@function
.size           Brx32xMultiway,(Brx32xMultiway_END - Brx32xMultiway)
.other          Brx32xMultiway,@"STO_LWDA_ENTRY STV_DEFAULT"
Brx32xMultiway:
.text.Brx32xMultiway:
{{

    MOV                R1, C[0x0][0x28];    
     
    S2R                R0, SR_TID.X;
    S2R                R2, SR_CTAID.X;
    MOV                R3, C[0x0][0x0];
    MOV                R7, 0x4;
    IMAD.WIDE.U32      R8, P0, R2, R7, C[0x0][0x160];
    
    MOV                R10, C[0x0][0x168];
    S2R                R3, SR_EqMask;
    LOP.AND            P0, RZ, R10, R3;
    LEPC               R6;
    BRA                BRX_JMX_SETUP;

BRX_JMX_TID_0:
        MOV                  R3, 0;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_1:
        MOV                  R3, 1;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_2:
        MOV                  R3, 2;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_3:
        MOV                  R3, 3;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_4:
        MOV                  R3, 4;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_5:
        MOV                  R3, 5;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_6:
        MOV                  R3, 6;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_7:
        MOV                  R3, 7;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_8:
        MOV                  R3, 8;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_9:
        MOV                  R3, 9;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_10:
        MOV                  R3, 10;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_11:
        MOV                  R3, 11;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_12:
        MOV                  R3, 12;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_13:
        MOV                  R3, 13;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_14:
        MOV                  R3, 14;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_15:
        MOV                  R3, 15;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_16:
        MOV                  R3, 16;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_17:
        MOV                  R3, 17;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_18:
        MOV                  R3, 18;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_19:
        MOV                  R3, 19;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_20:
        MOV                  R3, 20;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_21:
        MOV                  R3, 21;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_22:
        MOV                  R3, 22;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_23:
        MOV                  R3, 23;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_24:
        MOV                  R3, 24;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_25:
        MOV                  R3, 25;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_26:
        MOV                  R3, 26;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_27:
        MOV                  R3, 27;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_28:
        MOV                  R3, 28;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_29:
        MOV                  R3, 29;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_30:
        MOV                  R3, 30;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_31:
        MOV                  R3, 31;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_SETUP:
    IMAD.WIDE.U32 R6, P1, R0, 0x40, R6;     
    LEPC          R12;
    IADD          R2, P1, R6, -R12;
    MOV           R3, 0xFFFFFFFF;
    @P0 BRX       R2 - 0x20;

BRX_JMX_RETURN:
    WARPSYNC 0xFFFFFFFF;
    EXIT; 
}}

    EXIT;
Brx32xMultiway_END:

//--------------------- .text.Jmx32xMultiway    --------------------------
.section    .text.Jmx32xMultiway,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         Jmx32xMultiway
.type           Jmx32xMultiway,@function
.size           Jmx32xMultiway,(Jmx32xMultiway_END - Jmx32xMultiway)
.other          Jmx32xMultiway,@"STO_LWDA_ENTRY STV_DEFAULT"
Jmx32xMultiway:
.text.Jmx32xMultiway:
{{

    MOV                R1, C[0x0][0x28];    
     
    S2R                R0, SR_TID.X;
    S2R                R2, SR_CTAID.X;
    MOV                R3, C[0x0][0x0];
    MOV                R7, 0x4;
    IMAD.WIDE.U32      R8, P0, R2, R7, C[0x0][0x160];
    
    MOV                R10, C[0x0][0x168];
    S2R                R3, SR_EqMask;
    LOP.AND            P0, RZ, R10, R3;
    LEPC               R6;
    BRA                BRX_JMX_SETUP;

BRX_JMX_TID_0:
        MOV                  R3, 0;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_1:
        MOV                  R3, 1;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_2:
        MOV                  R3, 2;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_3:
        MOV                  R3, 3;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_4:
        MOV                  R3, 4;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_5:
        MOV                  R3, 5;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_6:
        MOV                  R3, 6;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_7:
        MOV                  R3, 7;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_8:
        MOV                  R3, 8;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_9:
        MOV                  R3, 9;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_10:
        MOV                  R3, 10;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_11:
        MOV                  R3, 11;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_12:
        MOV                  R3, 12;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_13:
        MOV                  R3, 13;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_14:
        MOV                  R3, 14;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_15:
        MOV                  R3, 15;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_16:
        MOV                  R3, 16;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_17:
        MOV                  R3, 17;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_18:
        MOV                  R3, 18;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_19:
        MOV                  R3, 19;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_20:
        MOV                  R3, 20;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_21:
        MOV                  R3, 21;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_22:
        MOV                  R3, 22;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_23:
        MOV                  R3, 23;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_24:
        MOV                  R3, 24;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_25:
        MOV                  R3, 25;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_26:
        MOV                  R3, 26;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_27:
        MOV                  R3, 27;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_28:
        MOV                  R3, 28;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_29:
        MOV                  R3, 29;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_30:
        MOV                  R3, 30;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_TID_31:
        MOV                  R3, 31;
        ATOMG.E.ADD.32.SYS   PT, R14, [R8], R3;
        BRA                  BRX_JMX_RETURN;
        EXIT;

BRX_JMX_SETUP:
    IMAD.WIDE.U32 R2, P1, R0, 0x40, R6;    
    @P0 JMX       R2 + 0x20;

BRX_JMX_RETURN:
    WARPSYNC 0xFFFFFFFF;
    EXIT; 
}}

    EXIT;
Jmx32xMultiway_END:

//--------------------- .text.ExitVerifyAtExit    --------------------------
.section    .text.ExitVerifyAtExit,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         ExitVerifyAtExit
.type           ExitVerifyAtExit,@function
.size           ExitVerifyAtExit,(ExitVerifyAtExit_END - ExitVerifyAtExit)
.other          ExitVerifyAtExit,@"STO_LWDA_ENTRY STV_DEFAULT"
ExitVerifyAtExit:
.text.ExitVerifyAtExit:

    MOV         R1, C[0x0][0x28];    
    
    MOV         R0, 0xAA;
    R2P         PR, R0.B0, 0xFF;
     
    S2R         R0, SR_TID.X;
    S2R         R2, SR_CTAID.X;
    MOV         R3, C[0x0][0x0];
    IMAD.LO     R4, R2, R3, R0;
    MOV         R5, 0x80;
    IADD        R6, R0, R5;
    MOV         R7, 0x1;
    IMAD.WIDE.U32 R8, P0, R4, R7, C[0x0][0x160];
    LEPC        R4;
    BRA         SETUP_EXIT_HANDLER;

EXIT_HANDLER_TID_0:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 1;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 2;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_1:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 2;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 4;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_2:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 4;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 8;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_3:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 8;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 16;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_4:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 16;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 32;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_5:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 32;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 64;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_6:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 64;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 128;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_7:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 128;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 256;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_8:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 256;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 512;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_9:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 512;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 1024;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_10:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 1024;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 2048;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_11:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 2048;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 4096;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_12:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 4096;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 8192;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_13:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 8192;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 16384;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_14:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 16384;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 32768;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_15:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 32768;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 65536;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_16:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 65536;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 131072;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_17:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 131072;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 262144;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_18:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 262144;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 524288;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_19:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 524288;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 1048576;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_20:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 1048576;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 2097152;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_21:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 2097152;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 4194304;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_22:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 4194304;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 8388608;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_23:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 8388608;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 16777216;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_24:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 16777216;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 33554432;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_25:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 33554432;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 67108864;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_26:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 67108864;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 134217728;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_27:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 134217728;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 268435456;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_28:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 268435456;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 536870912;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_29:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 536870912;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 1073741824;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_30:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 1073741824;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 2147483648;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;

EXIT_HANDLER_TID_31:
    VOTE.ANY        R7, PT, PT;
    MOV             R0, 2147483648;
    ISETP.EQ        P0, R7, R0;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B0;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B1;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B2;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B3;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B4;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B5;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B6;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B7;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B8;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B9;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B10;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B11;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B12;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B13;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B14;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, B15;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, OPT_STACK;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.LO;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32         R0, ATEXIT_PC.HI;
    ISETP.EQ        P0, R0, RZ;

    // Die a miserable death into oblivion
    @!P0            STG.E.U8.SYS   [R8], R6;
    @!P0            BMOV.32 ATEXIT_PC.LO, RZ;
    @!P0            BMOV.32 ATEXIT_PC.HI, RZ;
    @!P0            BMOV.32 MATEXIT, RZ;
    @!P0            EXIT;

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, RZ;
    LEPC           R4;
    IADD32I        R4, P0, R4, 0xA0; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, RZ;
    BMOV.32        ATEXIT_PC.HI, RZ;
    VOTE.ANY       R7, PT, PT;
    POPC           R7, R7;
    IADD           R7, R7, R0;
    STG.E.U8.SYS   [R8], R7;     /*Door bell success*/
    EXIT;
SETUP_EXIT_HANDLER:

    BMOV.32        B0, 0xFFFFFFFF;
    BMOV.32        B1, 0xFFFFFFFF;
    BMOV.32        B2, 0xFFFFFFFF;
    BMOV.32        B3, 0xFFFFFFFF;
    BMOV.32        B4, 0xFFFFFFFF;
    BMOV.32        B5, 0xFFFFFFFF;
    BMOV.32        B6, 0xFFFFFFFF;
    BMOV.32        B7, 0xFFFFFFFF;
    BMOV.32        B8, 0xFFFFFFFF;
    BMOV.32        B9, 0xFFFFFFFF;
    BMOV.32        B10, 0xFFFFFFFF;
    BMOV.32        B11, 0xFFFFFFFF;
    BMOV.32        B12, 0xFFFFFFFF;
    BMOV.32        B13, 0xFFFFFFFF;
    BMOV.32        B14, 0xFFFFFFFF;
    BMOV.32        B15, 0xFFFFFFFF;
    BMOV.32        OPT_STACK, 0x0BFFFFFF;
    BMOV.32        MATEXIT, 0x1;
    IADD32I        R4, P0, R4, 0x20; // BE CAREFUL WHEN ADDING INSTR BELOW THIS LINE
    IADD.X         R5, R5, RZ, P0;
    BMOV.32        ATEXIT_PC.LO, R4;
    BMOV.32        ATEXIT_PC.HI, R5;
    EXIT;

    EXIT;
ExitVerifyAtExit_END:

//--------------------- .text.PairWiseProducerConsumer    --------------------------
.section    .text.PairWiseProducerConsumer,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         PairWiseProducerConsumer
.type           PairWiseProducerConsumer,@function
.size           PairWiseProducerConsumer,(PairWiseProducerConsumer_END - PairWiseProducerConsumer)
.other          PairWiseProducerConsumer,@"STO_LWDA_ENTRY STV_DEFAULT"
PairWiseProducerConsumer:
.text.PairWiseProducerConsumer:

{{
    MOV        R1, C[0x0][0x28];    
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
    
     
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x4;
    SHR        R5, R4, 0x1;
    IMAD.WIDE.U32 R8,  P0, R5, R7, C[0x0][0x160];
    IMAD.WIDE.U32 R10, P0, R4, R7, C[0x0][0x168];
    LDC           R12, C[0x0][0x170];        
    
    /* At this point:
        R8-R9     = Commmon shared location per warp/block for atomics (add/sub)
        R10-R11     = Local history array (per thread)
        R12         = Loop Counter
    */
    LOP.AND      P0, RZ, R0, 0x1;
    @!P0         BRA PRODUCER_LOOP;
    @P0          BRA CONSUMER_LOOP;
    EXIT;
PRODUCER_LOOP:
    /* Producer Logic:
       while(loopCnt != 0) {
           while(cnt != 0);
           cnt = 1 // atomically
           loopCnt--;
           localHistory += 1; // atomically
       }
    */
    ISETP.EQ        P0, R12, RZ;
    @P0             EXIT;

WAIT_CONSUMER:
    YIELD;
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, RZ;
    @!P0            BRA WAIT_CONSUMER;
    
PRODUCE:
    MOV                R3, 0x1;
    STG.E.32.SYS       [R8], R3;            // Update the shared counter
    ATOMG.E.ADD.32.SYS PT, R7, [R10], R3;   // Update the local history
    IADD32I            R12, R12, -0x1;
    BRA                PRODUCER_LOOP;

CONSUMER_LOOP:
    /* Consumer Logic:
       while(loopCnt != 0) {
           while(cnt == 0);
           cnt = 0;
           loopCnt--; // This is per thread in register
           localHistory += 1; // So that we know this thread has actually taken the credit away and stashed it.
           }
       }
    */
    ISETP.EQ        P0, R12, RZ;
    @P0             EXIT;

WAIT_PRODUCER:
    YIELD;
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, RZ;
    @P0             BRA WAIT_PRODUCER;
    
CONSUME:
    MOV             R3, 0x0;
    STG.E.32.SYS    [R8], R3;               // Update the shared counter
    MOV             R3, 0x1;
    ATOMG.E.ADD.32.SYS PT, R7, [R10], R3;   // Update the local history

DONE_CONSUME:
    IADD32I            R12, R12, -0x1;
    BRA                CONSUMER_LOOP;
}}    

    EXIT;
PairWiseProducerConsumer_END:

//--------------------- .text.SProducerMConsumerBssyBsyn    --------------------------
.section    .text.SProducerMConsumerBssyBsyn,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         SProducerMConsumerBssyBsyn
.type           SProducerMConsumerBssyBsyn,@function
.size           SProducerMConsumerBssyBsyn,(SProducerMConsumerBssyBsyn_END - SProducerMConsumerBssyBsyn)
.other          SProducerMConsumerBssyBsyn,@"STO_LWDA_ENTRY STV_DEFAULT"
SProducerMConsumerBssyBsyn:
.text.SProducerMConsumerBssyBsyn:

{{
    MOV        R1, C[0x0][0x28];            
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
    
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x4;
    IMAD.WIDE.U32 R8,  P0, R2, R7, C[0x0][0x160];
    IMAD.WIDE.U32 R10, P0, R4, R7, C[0x0][0x168];
    LDC           R12, C[0x0][0x170];
    
    /* At this point:
        R8-R9   = Commmon shared location per warp/block for atomics (add/sub)
        R10-R11 = Local history array (per thread)
        R12     = numFlagAccesses
        
        This is a non-idealized version of the 2-variable lock. It is meant to break
        if the producer is ever asked to produce without all consumers having consumed the 
        the tokens meant for them
    */
    ISETP.EQ    P0, R0, RZ;
    @P0         BRA PRODUCER_LOOP;    // Thread 0: Producer
    IADD        R5, R0, 0x1;          
    ISETP.LT    P0, R0, 0x10;
    @!P0        EXIT;                 // Thread 16..31: DOA
    @P0         BRA CONSUMER_LOOP;    // Thread 1..15: Consumers
                                 
PRODUCER_LOOP:
    /* Producer Logic:
       while(loopCnt != 0) {
           while(cnt != 0);
           cnt += 16 // atomically
           loopCnt--;
           localHistory += 16; // atomically
       }
    */
    ISETP.EQ        P0, R12, RZ;
    @P0             EXIT;

WAIT_CONSUMER:
    YIELD;
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, RZ;
    @!P0            BRA WAIT_CONSUMER;
    
PRODUCE:
    MOV                R3, 16;
    ATOMG.E.ADD.32.SYS PT, R7, [R8], R3;    // Update the shared counter
    ATOMG.E.ADD.32.SYS PT, R7, [R10], R3;   // Update the local history
    IADD32I            R12, R12, -0x1;
    BRA                PRODUCER_LOOP;

CONSUMER_LOOP:
    /* Consumer Logic:
       while(loopCnt != 0) {
           while(cnt == 0);
           while(cnt != 0) {
               if (cnt == self.tid + 1) {
                   cnt -= 1;
               }
               // Inserting random yeilds here can be another test (without functionally effecting anything) 
               // but for now we let consumers BSYNC completely before yield
               loopCnt--; // This is per thread in register
               localHistory += 1; // So that we know this thread has actually taken the credit away and stashed it.
           }
           // As a final flag hand-off to the producer - a global leader indicates that all the threads
           // are done. You need 2-variables for this lock algorithm to be consistent. Instead we use single variable
           // (thanks to atomics) and emulate 3 states in it (0: All threads consumed + producer can run, 1: All threads 
           // consumed, producer cant run, and  2..32: Thread need to consume
           if(self.tid == 2) {
               cnt -= 1;
           }
       }
    */
    ISETP.EQ        P0, R12, RZ;
    @P0             EXIT;

WAIT_PRODUCER:
    YIELD;
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, RZ;
    @P0             BRA WAIT_PRODUCER;
    
CONSUME:
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, 0x1;
    @P0             BRA DONE_CONSUME;
    
    BSSY  B0, 0x0;
    ISETP.EQ        P0, R7, R5;
    @!P0            BRA NOT_MY_TOKEN;
    
    IADD32I         R3, RZ, -0x1;
    ATOMG.E.ADD.32.SYS PT, R7, [R8], R3;    // Update the shared counter
    MOV             R3, 0x1;
    ATOMG.E.ADD.32.SYS PT, R7, [R10], R3;   // Update the local history

NOT_MY_TOKEN:
    S2R             R7, SR_EQMASK;
    BSYNC B0;  
    BRA            CONSUME;

DONE_CONSUME:
    ISETP.EQ           P0, R0, 0x1;
    @P0 IADD32I        R3, RZ, -0x1;
    @P0 ATOMG.E.ADD.32.SYS PT, R7, [R8], R3;    // Update the shared counter (all threads consumed lock release)
    IADD32I            R12, R12, -0x1;
    BRA                CONSUMER_LOOP;
}}    

    EXIT;
SProducerMConsumerBssyBsyn_END:

//--------------------- .text.SProducerMConsumerWarpSync    --------------------------
.section    .text.SProducerMConsumerWarpSync,"ax",@progbits
.sectioninfo    @"SHI_REGISTERS=32"
.align  128
.global         SProducerMConsumerWarpSync
.type           SProducerMConsumerWarpSync,@function
.size           SProducerMConsumerWarpSync,(SProducerMConsumerWarpSync_END - SProducerMConsumerWarpSync)
.other          SProducerMConsumerWarpSync,@"STO_LWDA_ENTRY STV_DEFAULT"
SProducerMConsumerWarpSync:
.text.SProducerMConsumerWarpSync:

{{
    MOV        R1, C[0x0][0x28];            
    
    MOV        R0, 0xAA;
    R2P        PR, R0.B0, 0xFF;
    
    S2R        R0, SR_TID.X;
    S2R        R2, SR_CTAID.X;
    MOV        R3, C[0x0][0x0];
    IMAD.LO    R4, R2, R3, R0;
    MOV        R5, 0x80;
    IADD       R6, R0, R5;
    MOV        R7, 0x4;
    IMAD.WIDE.U32 R8,  P0, R2, R7, C[0x0][0x160];
    IMAD.WIDE.U32 R10, P0, R4, R7, C[0x0][0x168];
    LDC           R12, C[0x0][0x170];
    
    /* At this point:
        R8-R9   = Commmon shared location per warp/block for atomics (add/sub)
        R10-R11 = Local history array (per thread)
        R12     = numFlagAccesses
        
        This is a non-idealized version of the 2-variable lock. It is meant to break
        if the producer is ever asked to produce without all consumers having consumed the 
        the tokens meant for them
    */
    ISETP.EQ    P0, R0, RZ;
    @P0         BRA PRODUCER_LOOP;    // Thread 0: Producer
    IADD        R5, R0, 0x1;          
    ISETP.LT    P0, R0, 0x10;
    @!P0        EXIT;                 // Thread 16..31: DOA
    @P0         BRA CONSUMER_LOOP;    // Thread 1..15: Consumers
                                 
PRODUCER_LOOP:
    /* Producer Logic:
       while(loopCnt != 0) {
           while(cnt != 0);
           cnt += 16 // atomically
           loopCnt--;
           localHistory += 16; // atomically
       }
    */
    ISETP.EQ        P0, R12, RZ;
    @P0             EXIT;

WAIT_CONSUMER:
    YIELD;
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, RZ;
    @!P0            BRA WAIT_CONSUMER;
    
PRODUCE:
    MOV                R3, 16;
    ATOMG.E.ADD.32.SYS PT, R7, [R8], R3;    // Update the shared counter
    ATOMG.E.ADD.32.SYS PT, R7, [R10], R3;   // Update the local history
    IADD32I            R12, R12, -0x1;
    BRA                PRODUCER_LOOP;

CONSUMER_LOOP:
    /* Consumer Logic:
       while(loopCnt != 0) {
           while(cnt == 0);
           while(cnt != 0) {
               if (cnt == self.tid + 1) {
                   cnt -= 1;
               }
               // Inserting random yeilds here can be another test (without functionally effecting anything) 
               // but for now we let consumers BSYNC completely before yield
               loopCnt--; // This is per thread in register
               localHistory += 1; // So that we know this thread has actually taken the credit away and stashed it.
           }
           // As a final flag hand-off to the producer - a global leader indicates that all the threads
           // are done. You need 2-variables for this lock algorithm to be consistent. Instead we use single variable
           // (thanks to atomics) and emulate 3 states in it (0: All threads consumed + producer can run, 1: All threads 
           // consumed, producer cant run, and  2..32: Thread need to consume
           if(self.tid == 2) {
               cnt -= 1;
           }
       }
    */
    ISETP.EQ        P0, R12, RZ;
    @P0             EXIT;

WAIT_PRODUCER:
    YIELD;
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, RZ;
    @P0             BRA WAIT_PRODUCER;
    
CONSUME:
    LDG.E.32.SYS    R7, [R8];
    ISETP.EQ        P0, R7, 0x1;
    @P0             BRA DONE_CONSUME;
    
    NOP;
    ISETP.EQ        P0, R7, R5;
    @!P0            BRA NOT_MY_TOKEN;
    
    IADD32I         R3, RZ, -0x1;
    ATOMG.E.ADD.32.SYS PT, R7, [R8], R3;    // Update the shared counter
    MOV             R3, 0x1;
    ATOMG.E.ADD.32.SYS PT, R7, [R10], R3;   // Update the local history

NOT_MY_TOKEN:
    S2R             R7, SR_EQMASK;
    WARPSYNC R7; WARPSYNC 0xFFFFFFFE; WARPSYNC R7;;  
    BRA            CONSUME;

DONE_CONSUME:
    ISETP.EQ           P0, R0, 0x1;
    @P0 IADD32I        R3, RZ, -0x1;
    @P0 ATOMG.E.ADD.32.SYS PT, R7, [R8], R3;    // Update the shared counter (all threads consumed lock release)
    IADD32I            R12, R12, -0x1;
    BRA                CONSUMER_LOOP;
}}    

    EXIT;
SProducerMConsumerWarpSync_END:
