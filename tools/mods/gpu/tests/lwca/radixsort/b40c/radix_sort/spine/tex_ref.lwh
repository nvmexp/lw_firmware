/******************************************************************************
 * 
 * Copyright 2010-2012 Duane Merrill
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 * 
 * For more information, see our Google Code project site: 
 * http://code.google.com/p/back40computing/
 * 
 ******************************************************************************/

/******************************************************************************
 * Texture references for spine kernels
 ******************************************************************************/

#pragma once

#include <b40c/util/error_utils.lwh>

namespace b40c {
namespace radix_sort {
namespace spine {

/**
 * Templated texture reference for spine
 */
template <typename SizeT>
struct TexSpine
{
#ifndef __LWDACC__
    LWtexref ref;
#else
	typedef texture<SizeT, lwdaTextureType1D, lwdaReadModeElementType> TexRef;

	static TexRef ref;    
#endif

	/**
	 * Bind textures
	 */
#ifndef __LWDACC__
	lwdaError_t BindTexture(void *d_spine, size_t bytes)
	{        
		lwdaError_t retval = lwdaSuccess;
        
        size_t byteoffset;
        lwTexRefSetAddress(&byteoffset, ref, (LWdeviceptr)d_spine, bytes);
        lwTexRefSetFormat(ref, LW_AD_FORMAT_SIGNED_INT32, 1);
//      lwTexRefSetAddressMode(ref, 0, LW_TR_ADDRESS_MODE_CLAMP);
//      lwTexRefSetAddressMode(ref, 1, LW_TR_ADDRESS_MODE_CLAMP);
//      lwTexRefSetAddressMode(ref, 2, LW_TR_ADDRESS_MODE_CLAMP);
//      lwTexRefSetFilterMode(ref, LW_TR_FILTER_MODE_POINT);

		return retval;
	}
#else
    static lwdaError_t BindTexture(void *d_spine, size_t bytes)
	{        
		lwdaError_t retval = lwdaSuccess;
		do {
			lwdaChannelFormatDesc tex_desc = lwdaCreateChannelDesc<SizeT>();            
            
			// Bind key texture ref0
			if ((retval = util::B40CPerror(lwdaBindTexture(
					0,
					ref,
					d_spine,
					tex_desc,
					bytes),
				"lwdaBindTexture TexSpine failed", __FILE__, __LINE__))) break;
		} while (0);

		return retval;
	}
#endif
};

// Reference definition
#ifdef __LWDACC__
template <typename SizeT>
typename TexSpine<SizeT>::TexRef TexSpine<SizeT>::ref;
#endif

} // namespace spine
} // namespace radix_sort
} // namespace b40c

