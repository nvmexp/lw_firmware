.headerflags	@"EF_LWDA_TEXMODE_UNIFIED EF_LWDA_64BIT_ADDRESS EF_LWDA_SM70 EF_LWDA_PTX_SM(EF_LWDA_SM70) "

	.section       .text.volta_sgemm_128x128_voltageSpike224_32_nt,"ax",@progbits
	.sectionflags	@"SHF_BARRIERS=1"
	.align 128
	.global        volta_sgemm_128x128_voltageSpike224_32_nt
	.type          volta_sgemm_128x128_voltageSpike224_32_nt,@function
	.size          volta_sgemm_128x128_voltageSpike224_32_nt,(volta_sgemm_128x128_voltageSpike224_32_nt_END - volta_sgemm_128x128_voltageSpike224_32_nt)
	.other         volta_sgemm_128x128_voltageSpike224_32_nt,@"STO_LWDA_ENTRY STV_DEFAULT"
volta_sgemm_128x128_voltageSpike224_32_nt:
.text.volta_sgemm_128x128_voltageSpike224_32_nt:
      S2R R65, SR_Tid.X &wr=0 ?W2;                           // S2R tid, SR_Tid.X
      S2R R66, SR_CTAid.X &wr=0 ?W2;                         // S2R ctaid, SR_CTAid.X
      MOV R67, c[0][0x1c4] ?W2;                              // MOV counterK, CountK
      MOV R69, c[0][0x1e8] ?W2;                              // MOV cta_delay, AlphaVal
      MOV R70, c[0][0x1ec] ?W2;                              // MOV cta_mask, BetaVal
      MOV R72, c[0][0x170] ?W2;                              // MOV baseAddr, BaseC
      MOV R73, c[0][0x174] ?W2;                              // MOV baseAddr_HI, BaseC_HI
      MOV R71, c[0][0x1d4] ?W2;                              // MOV mode, Mode
      LOP.AND R64, R65, 0x10 &req=0 ?W4;                     // LOP.AND temp, tid, 0x10
      ISETP.EQ P2, R64, 0x10 ?W12EG;                         // ISETP.EQ P2, temp, 0x10
(!P2) MOV32I R0, 0x55555555 ?W2;                             // @!P2 MOV32I R0, 0x55555555
(P2)  MOV32I R0, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R0, 0xAAAAAAAA
(!P2) MOV32I R1, 0x55555555 ?W2;                             // @!P2 MOV32I R1, 0x55555555
(P2)  MOV32I R1, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R1, 0xAAAAAAAA
(!P2) MOV32I R2, 0x55555555 ?W2;                             // @!P2 MOV32I R2, 0x55555555
(P2)  MOV32I R2, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R2, 0xAAAAAAAA
(!P2) MOV32I R3, 0x55555555 ?W2;                             // @!P2 MOV32I R3, 0x55555555
(P2)  MOV32I R3, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R3, 0xAAAAAAAA
(!P2) MOV32I R4, 0x55555555 ?W2;                             // @!P2 MOV32I R4, 0x55555555
(P2)  MOV32I R4, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R4, 0xAAAAAAAA
(!P2) MOV32I R5, 0x55555555 ?W2;                             // @!P2 MOV32I R5, 0x55555555
(P2)  MOV32I R5, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R5, 0xAAAAAAAA
(!P2) MOV32I R6, 0x55555555 ?W2;                             // @!P2 MOV32I R6, 0x55555555
(P2)  MOV32I R6, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R6, 0xAAAAAAAA
(!P2) MOV32I R7, 0x55555555 ?W2;                             // @!P2 MOV32I R7, 0x55555555
(P2)  MOV32I R7, 0xAAAAAAAA ?W2;                             // @P2 MOV32I R7, 0xAAAAAAAA
(!P2) MOV32I R8, 0xAAAAAAAA ?W2;                             // @!P2 MOV32I R8, 0xAAAAAAAA
(P2)  MOV32I R8, 0x55555555 ?W2;                             // @P2 MOV32I R8, 0x55555555
(!P2) MOV32I R9, 0xAAAAAAAA ?W2;                             // @!P2 MOV32I R9, 0xAAAAAAAA
(P2)  MOV32I R9, 0x55555555 ?W2;                             // @P2 MOV32I R9, 0x55555555
(!P2) MOV32I R10, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R10, 0xAAAAAAAA
(P2)  MOV32I R10, 0x55555555 ?W2;                            // @P2 MOV32I R10, 0x55555555
(!P2) MOV32I R11, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R11, 0xAAAAAAAA
(P2)  MOV32I R11, 0x55555555 ?W2;                            // @P2 MOV32I R11, 0x55555555
(!P2) MOV32I R12, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R12, 0xAAAAAAAA
(P2)  MOV32I R12, 0x55555555 ?W2;                            // @P2 MOV32I R12, 0x55555555
(!P2) MOV32I R13, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R13, 0xAAAAAAAA
(P2)  MOV32I R13, 0x55555555 ?W2;                            // @P2 MOV32I R13, 0x55555555
(!P2) MOV32I R14, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R14, 0xAAAAAAAA
(P2)  MOV32I R14, 0x55555555 ?W2;                            // @P2 MOV32I R14, 0x55555555
(!P2) MOV32I R15, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R15, 0xAAAAAAAA
(P2)  MOV32I R15, 0x55555555 ?W2;                            // @P2 MOV32I R15, 0x55555555
(!P2) MOV32I R16, 0x55555555 ?W2;                            // @!P2 MOV32I R16, 0x55555555
(P2)  MOV32I R16, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R16, 0xAAAAAAAA
(!P2) MOV32I R17, 0x55555555 ?W2;                            // @!P2 MOV32I R17, 0x55555555
(P2)  MOV32I R17, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R17, 0xAAAAAAAA
(!P2) MOV32I R18, 0x55555555 ?W2;                            // @!P2 MOV32I R18, 0x55555555
(P2)  MOV32I R18, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R18, 0xAAAAAAAA
(!P2) MOV32I R19, 0x55555555 ?W2;                            // @!P2 MOV32I R19, 0x55555555
(P2)  MOV32I R19, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R19, 0xAAAAAAAA
(!P2) MOV32I R20, 0x55555555 ?W2;                            // @!P2 MOV32I R20, 0x55555555
(P2)  MOV32I R20, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R20, 0xAAAAAAAA
(!P2) MOV32I R21, 0x55555555 ?W2;                            // @!P2 MOV32I R21, 0x55555555
(P2)  MOV32I R21, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R21, 0xAAAAAAAA
(!P2) MOV32I R22, 0x55555555 ?W2;                            // @!P2 MOV32I R22, 0x55555555
(P2)  MOV32I R22, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R22, 0xAAAAAAAA
(!P2) MOV32I R23, 0x55555555 ?W2;                            // @!P2 MOV32I R23, 0x55555555
(P2)  MOV32I R23, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R23, 0xAAAAAAAA
(!P2) MOV32I R24, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R24, 0xAAAAAAAA
(P2)  MOV32I R24, 0x55555555 ?W2;                            // @P2 MOV32I R24, 0x55555555
(!P2) MOV32I R25, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R25, 0xAAAAAAAA
(P2)  MOV32I R25, 0x55555555 ?W2;                            // @P2 MOV32I R25, 0x55555555
(!P2) MOV32I R26, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R26, 0xAAAAAAAA
(P2)  MOV32I R26, 0x55555555 ?W2;                            // @P2 MOV32I R26, 0x55555555
(!P2) MOV32I R27, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R27, 0xAAAAAAAA
(P2)  MOV32I R27, 0x55555555 ?W2;                            // @P2 MOV32I R27, 0x55555555
(!P2) MOV32I R28, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R28, 0xAAAAAAAA
(P2)  MOV32I R28, 0x55555555 ?W2;                            // @P2 MOV32I R28, 0x55555555
(!P2) MOV32I R29, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R29, 0xAAAAAAAA
(P2)  MOV32I R29, 0x55555555 ?W2;                            // @P2 MOV32I R29, 0x55555555
(!P2) MOV32I R30, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R30, 0xAAAAAAAA
(P2)  MOV32I R30, 0x55555555 ?W2;                            // @P2 MOV32I R30, 0x55555555
(!P2) MOV32I R31, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R31, 0xAAAAAAAA
(P2)  MOV32I R31, 0x55555555 ?W2;                            // @P2 MOV32I R31, 0x55555555
(!P2) MOV32I R32, 0x55555555 ?W2;                            // @!P2 MOV32I R32, 0x55555555
(P2)  MOV32I R32, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R32, 0xAAAAAAAA
(!P2) MOV32I R33, 0x55555555 ?W2;                            // @!P2 MOV32I R33, 0x55555555
(P2)  MOV32I R33, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R33, 0xAAAAAAAA
(!P2) MOV32I R34, 0x55555555 ?W2;                            // @!P2 MOV32I R34, 0x55555555
(P2)  MOV32I R34, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R34, 0xAAAAAAAA
(!P2) MOV32I R35, 0x55555555 ?W2;                            // @!P2 MOV32I R35, 0x55555555
(P2)  MOV32I R35, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R35, 0xAAAAAAAA
(!P2) MOV32I R36, 0x55555555 ?W2;                            // @!P2 MOV32I R36, 0x55555555
(P2)  MOV32I R36, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R36, 0xAAAAAAAA
(!P2) MOV32I R37, 0x55555555 ?W2;                            // @!P2 MOV32I R37, 0x55555555
(P2)  MOV32I R37, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R37, 0xAAAAAAAA
(!P2) MOV32I R38, 0x55555555 ?W2;                            // @!P2 MOV32I R38, 0x55555555
(P2)  MOV32I R38, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R38, 0xAAAAAAAA
(!P2) MOV32I R39, 0x55555555 ?W2;                            // @!P2 MOV32I R39, 0x55555555
(P2)  MOV32I R39, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R39, 0xAAAAAAAA
(!P2) MOV32I R40, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R40, 0xAAAAAAAA
(P2)  MOV32I R40, 0x55555555 ?W2;                            // @P2 MOV32I R40, 0x55555555
(!P2) MOV32I R41, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R41, 0xAAAAAAAA
(P2)  MOV32I R41, 0x55555555 ?W2;                            // @P2 MOV32I R41, 0x55555555
(!P2) MOV32I R42, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R42, 0xAAAAAAAA
(P2)  MOV32I R42, 0x55555555 ?W2;                            // @P2 MOV32I R42, 0x55555555
(!P2) MOV32I R43, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R43, 0xAAAAAAAA
(P2)  MOV32I R43, 0x55555555 ?W2;                            // @P2 MOV32I R43, 0x55555555
(!P2) MOV32I R44, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R44, 0xAAAAAAAA
(P2)  MOV32I R44, 0x55555555 ?W2;                            // @P2 MOV32I R44, 0x55555555
(!P2) MOV32I R45, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R45, 0xAAAAAAAA
(P2)  MOV32I R45, 0x55555555 ?W2;                            // @P2 MOV32I R45, 0x55555555
(!P2) MOV32I R46, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R46, 0xAAAAAAAA
(P2)  MOV32I R46, 0x55555555 ?W2;                            // @P2 MOV32I R46, 0x55555555
(!P2) MOV32I R47, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R47, 0xAAAAAAAA
(P2)  MOV32I R47, 0x55555555 ?W2;                            // @P2 MOV32I R47, 0x55555555
(!P2) MOV32I R48, 0x55555555 ?W2;                            // @!P2 MOV32I R48, 0x55555555
(P2)  MOV32I R48, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R48, 0xAAAAAAAA
(!P2) MOV32I R49, 0x55555555 ?W2;                            // @!P2 MOV32I R49, 0x55555555
(P2)  MOV32I R49, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R49, 0xAAAAAAAA
(!P2) MOV32I R50, 0x55555555 ?W2;                            // @!P2 MOV32I R50, 0x55555555
(P2)  MOV32I R50, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R50, 0xAAAAAAAA
(!P2) MOV32I R51, 0x55555555 ?W2;                            // @!P2 MOV32I R51, 0x55555555
(P2)  MOV32I R51, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R51, 0xAAAAAAAA
(!P2) MOV32I R52, 0x55555555 ?W2;                            // @!P2 MOV32I R52, 0x55555555
(P2)  MOV32I R52, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R52, 0xAAAAAAAA
(!P2) MOV32I R53, 0x55555555 ?W2;                            // @!P2 MOV32I R53, 0x55555555
(P2)  MOV32I R53, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R53, 0xAAAAAAAA
(!P2) MOV32I R54, 0x55555555 ?W2;                            // @!P2 MOV32I R54, 0x55555555
(P2)  MOV32I R54, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R54, 0xAAAAAAAA
(!P2) MOV32I R55, 0x55555555 ?W2;                            // @!P2 MOV32I R55, 0x55555555
(P2)  MOV32I R55, 0xAAAAAAAA ?W2;                            // @P2 MOV32I R55, 0xAAAAAAAA
(!P2) MOV32I R56, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R56, 0xAAAAAAAA
(P2)  MOV32I R56, 0x55555555 ?W2;                            // @P2 MOV32I R56, 0x55555555
(!P2) MOV32I R57, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R57, 0xAAAAAAAA
(P2)  MOV32I R57, 0x55555555 ?W2;                            // @P2 MOV32I R57, 0x55555555
(!P2) MOV32I R58, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R58, 0xAAAAAAAA
(P2)  MOV32I R58, 0x55555555 ?W2;                            // @P2 MOV32I R58, 0x55555555
(!P2) MOV32I R59, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R59, 0xAAAAAAAA
(P2)  MOV32I R59, 0x55555555 ?W2;                            // @P2 MOV32I R59, 0x55555555
(!P2) MOV32I R60, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R60, 0xAAAAAAAA
(P2)  MOV32I R60, 0x55555555 ?W2;                            // @P2 MOV32I R60, 0x55555555
(!P2) MOV32I R61, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R61, 0xAAAAAAAA
(P2)  MOV32I R61, 0x55555555 ?W2;                            // @P2 MOV32I R61, 0x55555555
(!P2) MOV32I R62, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R62, 0xAAAAAAAA
(P2)  MOV32I R62, 0x55555555 ?W2;                            // @P2 MOV32I R62, 0x55555555
(!P2) MOV32I R63, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I R63, 0xAAAAAAAA
(P2)  MOV32I R63, 0x55555555 ?W2;                            // @P2 MOV32I R63, 0x55555555
(!P2) MOV32I R78, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I HMMA_A, 0xAAAAAAAA
(!P2) MOV32I R79, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I HMMA_A_1, 0xAAAAAAAA
(!P2) MOV32I R80, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I HMMA_B, 0xAAAAAAAA
(!P2) MOV32I R81, 0xAAAAAAAA ?W2;                            // @!P2 MOV32I HMMA_B_1, 0xAAAAAAAA
(P2)  MOV32I R78, 0x55555555 ?W2;                            // @P2 MOV32I HMMA_A, 0x55555555
(P2)  MOV32I R79, 0x55555555 ?W2;                            // @P2 MOV32I HMMA_A_1, 0x55555555
(P2)  MOV32I R80, 0x55555555 ?W2;                            // @P2 MOV32I HMMA_B, 0x55555555
(P2)  MOV32I R81, 0x55555555 ?W2;                            // @P2 MOV32I HMMA_B_1, 0x55555555
      ISETP.EQ P6, R71, 0x1 ?W2;                             // ISETP.EQ P6, mode, 0x1
      LEA  R74, R65, RZ, 2 &req=0 ?W4;                       // LEA stsAddr, tid, RZ, 2
      LEA  R76, R66, R74, 10 ?W4;                            // LEA ldgAddr, ctaid, stsAddr, 10
      IADD   R76, P2, R72,   R76 ?W4;                        // IADD ldgAddr, P2, baseAddr, ldgAddr
      IADD.X R77,         R73, RZ, P2 ?W2;                   // IADD.X ldgAddr_HI, baseAddr_HI, RZ, P2
      ISETP.T P0, RZ, RZ ?W2;                                // ISETP.T P0, RZ, RZ
      STS.32 [R74], RZ ?W2;                                  // STS.32 [stsAddr], RZ
      MOV32I R64, 0x1 ?W4;                                   // MOV32I temp, 0x1
      SHL R64, R64, R66 ?W4;                                 // SHL temp, temp, ctaid
      LOP.AND R64, R64, R70 ?W4;                             // LOP.AND temp, temp, cta_mask
      ISETP.EQ P1, R64, RZ ?W12EG;                           // ISETP.EQ P1, temp, RZ
(P6)  BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP ?W5; // @P6 BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP
(P1)  BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP ?W5; // @P1 BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP
      MOV R68, RZ ?W4;                                       // MOV clock, RZ
volta_sgemm_128x128_voltageSpike224_32_nt_CTA_DELAY:
      ISETP.LT P2, R68, R69 ?W10;                            // ISETP.LT P2, clock, cta_delay
      IADD32I R68, R68, 0x20 ?W2;                            // IADD32I clock, clock, 0x20
(P2)  BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_CTA_DELAY ?W5; // @P2 BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_CTA_DELAY
volta_sgemm_128x128_voltageSpike224_32_nt_LOOP:
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R78.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_A.reuse, R0
      NOP ?W1;                                               // NOP
      IADD32I R67, R67, -1 ?W1;                              // IADD32I counterK, counterK, -1
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      ISETP.GE P0, R67, 0 ?W1;                               // ISETP.GE P0, counterK, 0
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 86016] ?W1;             // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 86016]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 172032] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 172032]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 258048] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 258048]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 344064] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 344064]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 430080] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 430080]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 516096] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 516096]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 602112] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 602112]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 688128] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 688128]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 774144] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 774144]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 860160] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 860160]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 946176] ?W1;            // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 946176]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 1032192] ?W1;           // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 1032192]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
      HMMA.884.F16.F16.STEP0 R32, R78.reuse, R80.reuse, R0 ?W1; // HMMA.884.F16.F16.STEP0 R32, HMMA_A.reuse, HMMA_B.reuse, R0
(P0)  LDG.E.32.STRONG.GPU RZ, [R76 + 1118208] ?W1;           // @P0 LDG.E.32.STRONG.GPU RZ, [ldgAddr + 1118208]
      IADD    R35, R7, R2 ?W1;                               // IADD R35, R7, R2
      FMUL    RZ, R6, 0x1 ?W1;                               // FMUL RZ, R6, 0x1
      HMMA.884.F16.F16.STEP1 R40, R78.reuse, R80.reuse, R8 ?W1; // HMMA.884.F16.F16.STEP1 R40, HMMA_A.reuse, HMMA_B.reuse, R8
      FFMA    R42, R11, R13, R12 ?W1;                        // FFMA R42, R11, R13, R12
      IADD    R43, R15, R10 ?W1;                             // IADD R43, R15, R10
      LDS.32    R45, [R74] ?W1;                              // LDS.32 R45, [stsAddr]
      HMMA.884.F16.F16.STEP0 R48, R78.reuse, R80.reuse, R16 ?W1; // HMMA.884.F16.F16.STEP0 R48, HMMA_A.reuse, HMMA_B.reuse, R16
      FFMA    R50, R19, R21, R20 ?W1;                        // FFMA R50, R19, R21, R20
      IADD    R51, R23, R18 ?W1;                             // IADD R51, R23, R18
      FMUL    RZ, R22, 0x1 ?W1;                              // FMUL RZ, R22, 0x1
      HMMA.884.F16.F16.STEP1 R56, R78.reuse, R80.reuse, R24 ?W1; // HMMA.884.F16.F16.STEP1 R56, HMMA_A.reuse, HMMA_B.reuse, R24
      FFMA    R58, R27, R29, R28 ?W1;                        // FFMA R58, R27, R29, R28
      IADD    R59, R31, R26 ?W1;                             // IADD R59, R31, R26
      LDS.32    R61, [R74] ?W1;                              // LDS.32 R61, [stsAddr]
(P0)  BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP ?W5; // @P0 BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP
volta_sgemm_128x128_voltageSpike224_32_nt_END_OF_LOOP:
(!P6) EXIT ?W5;                                              // @!P6 EXIT
      ISETP.F P6, RZ, RZ ?W2;                                // ISETP.F P6, RZ, RZ
      MOV R67, R69 ?W2;                                      // MOV counterK, cta_delay
(P1)  BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP ?W5; // @P1 BRA.U volta_sgemm_128x128_voltageSpike224_32_nt_LOOP
      EXIT ?W5;                                              // EXIT
volta_sgemm_128x128_voltageSpike224_32_nt_END:
	.sectioninfo	@"SHI_REGISTERS=89"
//--------------------- .lw.info.volta_sgemm_128x128_voltageSpike224_32_nt

	.section	.lw.info.volta_sgemm_128x128_voltageSpike224_32_nt,"",@SHT_LWDA_INFO
	// ---- lwinfo : EIATTR_PARAM_CBANK
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_1:
	.byte  0x04, 0xa
	.short  (volta_sgemm_128x128_voltageSpike224_32_nt_3 - volta_sgemm_128x128_voltageSpike224_32_nt_2)
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_2:
	.word	index@(.lw.constant0.volta_sgemm_128x128_voltageSpike224_32_nt)
	.short  0x0160
	.short  0x94

	// ---- lwinfo : EIATTR_CBANK_PARAM_SIZE
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_3:
	.byte	0x03, 0x19
	.short  0x94

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_4:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_6 - volta_sgemm_128x128_voltageSpike224_32_nt_5)
volta_sgemm_128x128_voltageSpike224_32_nt_5:
	.word	0x00000000
	.short  0x17
	.short  0x90
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_6:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_8 - volta_sgemm_128x128_voltageSpike224_32_nt_7)
volta_sgemm_128x128_voltageSpike224_32_nt_7:
	.word	0x00000000
	.short  0x16
	.short  0x8c
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_8:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_10 - volta_sgemm_128x128_voltageSpike224_32_nt_9)
volta_sgemm_128x128_voltageSpike224_32_nt_9:
	.word	0x00000000
	.short  0x15
	.short  0x88
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_10:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_12 - volta_sgemm_128x128_voltageSpike224_32_nt_11)
volta_sgemm_128x128_voltageSpike224_32_nt_11:
	.word	0x00000000
	.short  0x14
	.short  0x80
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_12:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_14 - volta_sgemm_128x128_voltageSpike224_32_nt_13)
volta_sgemm_128x128_voltageSpike224_32_nt_13:
	.word	0x00000000
	.short  0x13
	.short  0x78
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_14:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_16 - volta_sgemm_128x128_voltageSpike224_32_nt_15)
volta_sgemm_128x128_voltageSpike224_32_nt_15:
	.word	0x00000000
	.short  0x12
	.short  0x74
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_16:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_18 - volta_sgemm_128x128_voltageSpike224_32_nt_17)
volta_sgemm_128x128_voltageSpike224_32_nt_17:
	.word	0x00000000
	.short  0x11
	.short  0x70
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_18:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_20 - volta_sgemm_128x128_voltageSpike224_32_nt_19)
volta_sgemm_128x128_voltageSpike224_32_nt_19:
	.word	0x00000000
	.short  0x10
	.short  0x68
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_20:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_22 - volta_sgemm_128x128_voltageSpike224_32_nt_21)
volta_sgemm_128x128_voltageSpike224_32_nt_21:
	.word	0x00000000
	.short  0xf
	.short  0x64
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_22:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_24 - volta_sgemm_128x128_voltageSpike224_32_nt_23)
volta_sgemm_128x128_voltageSpike224_32_nt_23:
	.word	0x00000000
	.short  0xe
	.short  0x60
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_24:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_26 - volta_sgemm_128x128_voltageSpike224_32_nt_25)
volta_sgemm_128x128_voltageSpike224_32_nt_25:
	.word	0x00000000
	.short  0xd
	.short  0x5c
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_26:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_28 - volta_sgemm_128x128_voltageSpike224_32_nt_27)
volta_sgemm_128x128_voltageSpike224_32_nt_27:
	.word	0x00000000
	.short  0xc
	.short  0x58
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_28:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_30 - volta_sgemm_128x128_voltageSpike224_32_nt_29)
volta_sgemm_128x128_voltageSpike224_32_nt_29:
	.word	0x00000000
	.short  0xb
	.short  0x54
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_30:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_32 - volta_sgemm_128x128_voltageSpike224_32_nt_31)
volta_sgemm_128x128_voltageSpike224_32_nt_31:
	.word	0x00000000
	.short  0xa
	.short  0x50
	.byte  0x00, 0xf0, 0x11, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_32:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_34 - volta_sgemm_128x128_voltageSpike224_32_nt_33)
volta_sgemm_128x128_voltageSpike224_32_nt_33:
	.word	0x00000000
	.short  0x9
	.short  0x48
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_34:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_36 - volta_sgemm_128x128_voltageSpike224_32_nt_35)
volta_sgemm_128x128_voltageSpike224_32_nt_35:
	.word	0x00000000
	.short  0x8
	.short  0x40
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_36:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_38 - volta_sgemm_128x128_voltageSpike224_32_nt_37)
volta_sgemm_128x128_voltageSpike224_32_nt_37:
	.word	0x00000000
	.short  0x7
	.short  0x38
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_38:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_40 - volta_sgemm_128x128_voltageSpike224_32_nt_39)
volta_sgemm_128x128_voltageSpike224_32_nt_39:
	.word	0x00000000
	.short  0x6
	.short  0x30
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_40:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_42 - volta_sgemm_128x128_voltageSpike224_32_nt_41)
volta_sgemm_128x128_voltageSpike224_32_nt_41:
	.word	0x00000000
	.short  0x5
	.short  0x28
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_42:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_44 - volta_sgemm_128x128_voltageSpike224_32_nt_43)
volta_sgemm_128x128_voltageSpike224_32_nt_43:
	.word	0x00000000
	.short  0x4
	.short  0x20
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_44:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_46 - volta_sgemm_128x128_voltageSpike224_32_nt_45)
volta_sgemm_128x128_voltageSpike224_32_nt_45:
	.word	0x00000000
	.short  0x3
	.short  0x18
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_46:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_48 - volta_sgemm_128x128_voltageSpike224_32_nt_47)
volta_sgemm_128x128_voltageSpike224_32_nt_47:
	.word	0x00000000
	.short  0x2
	.short  0x10
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_48:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_50 - volta_sgemm_128x128_voltageSpike224_32_nt_49)
volta_sgemm_128x128_voltageSpike224_32_nt_49:
	.word	0x00000000
	.short  0x1
	.short  0x8
	.byte  0x00, 0xf0, 0x21, 0x00

	// ---- lwinfo : EIATTR_KPARAM_INFO
	.align 4
volta_sgemm_128x128_voltageSpike224_32_nt_50:
	.byte  0x04, 0x17
	.short (volta_sgemm_128x128_voltageSpike224_32_nt_52 - volta_sgemm_128x128_voltageSpike224_32_nt_51)
volta_sgemm_128x128_voltageSpike224_32_nt_51:
	.word	0x00000000
	.short  0x0
	.short  0x0
	.byte  0x00, 0xf0, 0x21, 0x00

volta_sgemm_128x128_voltageSpike224_32_nt_52:
//--------------------- .lw.shared.volta_sgemm_128x128_voltageSpike224_32_nt

	.section	.lw.shared.volta_sgemm_128x128_voltageSpike224_32_nt,"aw",@nobits
	.align 4
	.zero 16380
	.word shmem_reloc_volta_sgemm_128x128_voltageSpike224_32_nt
//--------------------- .lw.callgraph             --------------------------
	.section	.lw.callgraph,"",@"SHT_CALLGRAPH"
	.sectionentsize	8
	.align 4
	.byte	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff
	.byte	0x00, 0x00, 0x00, 0x00, 0xfd, 0xff, 0xff, 0xff

// ------------------- lwinfo        --------
	.section	.lw.info,"",@SHT_LWDA_INFO

	// ---- lwinfo : EIATTR_MIN_STACK_SIZE
	.align 4
.volta_sgemm_128x128_voltageSpike224_32_nt_L1:
	.byte  0x04, 0x12
	.short  (.volta_sgemm_128x128_voltageSpike224_32_nt_L3 - .volta_sgemm_128x128_voltageSpike224_32_nt_L2)
	.align 4
.volta_sgemm_128x128_voltageSpike224_32_nt_L2:
	.word	index@(volta_sgemm_128x128_voltageSpike224_32_nt)
	.word  0x0

	// ---- lwinfo : EIATTR_FRAME_SIZE
	.align 4
.volta_sgemm_128x128_voltageSpike224_32_nt_L3:
	.byte  0x04, 0x11
	.short  (.volta_sgemm_128x128_voltageSpike224_32_nt_L5 - .volta_sgemm_128x128_voltageSpike224_32_nt_L4)
	.align 4
.volta_sgemm_128x128_voltageSpike224_32_nt_L4:
	.word	index@(volta_sgemm_128x128_voltageSpike224_32_nt)
	.word  0x0

.volta_sgemm_128x128_voltageSpike224_32_nt_L5:

//--------------------- .lw.constant0.volta_sgemm_128x128_voltageSpike224_32_nt
	.section	.lw.constant0.volta_sgemm_128x128_voltageSpike224_32_nt,"a",@progbits
	.align 4
.volta_sgemm_128x128_voltageSpike224_32_nt_L6:
	.zero     500


// const ShaderParams volta_sgemm_128x128_voltageSpike224_32_nt_params = {
//     /* version           */ 1,
//     /* name              */ "volta_sgemm_128x128_voltageSpike224_32_nt",
//     /* kernel            */ (void*)volta_sgemm_128x128_voltageSpike224_32_nt,
//     /* chipFamily        */ VOLTA,
//     /* gemmType          */ SGEMM,
//     /* typeA             */ R_32F,
//     /* typeB             */ R_32F,
//     /* typeC             */ R_32F,
//     /* typeEpilog        */ R_32F,
//     /* shapeC            */ RECT,
//     /* layoutA           */ N,
//     /* layoutB           */ T,
//     /* log2ElementsPerLdgA */ 0,
//     /* log2ElementsPerLdgB */ 0,
//     /* reLuAndBias       */ 0,
//     /* isReleaseKernel   */ 1,
//     /* numRegisters      */ 87,
//     /* usedRegisters        87, */
//     /* sharedMemSize     */ 16384,
//     /* elementRowsPerCta */ 128,
//     /* elementColsperCta */ 128,
//     /* threadsPerCta     */ 256,
//     /* raggedMn          */ true,
//     /* warpStrideK       */ 4,
//     /* shiftFastA        */ 5,
//     /* multiplierSlowA   */ 32,
//     /* offsetSlowA       */ 0,
//     /* shiftFastB        */ 5,
//     /* multiplierSlowB   */ 32,
//     /* offsetSlowB       */ 0,
//     /* kBlock            */ 8,
//     /* lwDnnEdges        */ LWDNN_NONE,
//     /* lwDnnLayout       */ NCHW,
//     /* lwDnnStridedB     */ false,
//     /* lwDnnSplitK       */ false,
//     /* lwDnnDgrad        */ false,
//     /* lwDnnWgrad        */ false,
//     /* sliceRows         */ 1,
//     /* sliceCols         */ 1
// };
